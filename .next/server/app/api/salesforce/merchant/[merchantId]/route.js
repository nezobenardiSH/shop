/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/salesforce/merchant/[merchantId]/route";
exports.ids = ["app/api/salesforce/merchant/[merchantId]/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "domain":
/*!*************************!*\
  !*** external "domain" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("domain");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "string_decoder":
/*!*********************************!*\
  !*** external "string_decoder" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("string_decoder");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("timers");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsalesforce%2Fmerchant%2F%5BmerchantId%5D%2Froute&page=%2Fapi%2Fsalesforce%2Fmerchant%2F%5BmerchantId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsalesforce%2Fmerchant%2F%5BmerchantId%5D%2Froute.ts&appDir=%2FUsers%2Fnezobenardi%2FAI_stuff%2FOnboardingPortal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnezobenardi%2FAI_stuff%2FOnboardingPortal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsalesforce%2Fmerchant%2F%5BmerchantId%5D%2Froute&page=%2Fapi%2Fsalesforce%2Fmerchant%2F%5BmerchantId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsalesforce%2Fmerchant%2F%5BmerchantId%5D%2Froute.ts&appDir=%2FUsers%2Fnezobenardi%2FAI_stuff%2FOnboardingPortal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnezobenardi%2FAI_stuff%2FOnboardingPortal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_nezobenardi_AI_stuff_OnboardingPortal_app_api_salesforce_merchant_merchantId_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/salesforce/merchant/[merchantId]/route.ts */ \"(rsc)/./app/api/salesforce/merchant/[merchantId]/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/salesforce/merchant/[merchantId]/route\",\n        pathname: \"/api/salesforce/merchant/[merchantId]\",\n        filename: \"route\",\n        bundlePath: \"app/api/salesforce/merchant/[merchantId]/route\"\n    },\n    resolvedPagePath: \"/Users/nezobenardi/AI_stuff/OnboardingPortal/app/api/salesforce/merchant/[merchantId]/route.ts\",\n    nextConfigOutput,\n    userland: _Users_nezobenardi_AI_stuff_OnboardingPortal_app_api_salesforce_merchant_merchantId_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZzYWxlc2ZvcmNlJTJGbWVyY2hhbnQlMkYlNUJtZXJjaGFudElkJTVEJTJGcm91dGUmcGFnZT0lMkZhcGklMkZzYWxlc2ZvcmNlJTJGbWVyY2hhbnQlMkYlNUJtZXJjaGFudElkJTVEJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGc2FsZXNmb3JjZSUyRm1lcmNoYW50JTJGJTVCbWVyY2hhbnRJZCU1RCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm5lem9iZW5hcmRpJTJGQUlfc3R1ZmYlMkZPbmJvYXJkaW5nUG9ydGFsJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRm5lem9iZW5hcmRpJTJGQUlfc3R1ZmYlMkZPbmJvYXJkaW5nUG9ydGFsJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PXN0YW5kYWxvbmUmcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDOEM7QUFDM0g7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9uZXpvYmVuYXJkaS9BSV9zdHVmZi9PbmJvYXJkaW5nUG9ydGFsL2FwcC9hcGkvc2FsZXNmb3JjZS9tZXJjaGFudC9bbWVyY2hhbnRJZF0vcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwic3RhbmRhbG9uZVwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9zYWxlc2ZvcmNlL21lcmNoYW50L1ttZXJjaGFudElkXS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3NhbGVzZm9yY2UvbWVyY2hhbnQvW21lcmNoYW50SWRdXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9zYWxlc2ZvcmNlL21lcmNoYW50L1ttZXJjaGFudElkXS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9uZXpvYmVuYXJkaS9BSV9zdHVmZi9PbmJvYXJkaW5nUG9ydGFsL2FwcC9hcGkvc2FsZXNmb3JjZS9tZXJjaGFudC9bbWVyY2hhbnRJZF0vcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsalesforce%2Fmerchant%2F%5BmerchantId%5D%2Froute&page=%2Fapi%2Fsalesforce%2Fmerchant%2F%5BmerchantId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsalesforce%2Fmerchant%2F%5BmerchantId%5D%2Froute.ts&appDir=%2FUsers%2Fnezobenardi%2FAI_stuff%2FOnboardingPortal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnezobenardi%2FAI_stuff%2FOnboardingPortal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./app/api/salesforce/merchant/[merchantId]/route.ts":
/*!***********************************************************!*\
  !*** ./app/api/salesforce/merchant/[merchantId]/route.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_salesforce__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/salesforce */ \"(rsc)/./lib/salesforce.ts\");\n\n\nasync function GET(request, { params }) {\n    const resolvedParams = await params;\n    const trainerName = resolvedParams.merchantId;\n    try {\n        if (!trainerName) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: 'Trainer name is required'\n            }, {\n                status: 400\n            });\n        }\n        // Get Salesforce connection\n        const conn = await (0,_lib_salesforce__WEBPACK_IMPORTED_MODULE_1__.getSalesforceConnection)();\n        if (!conn) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: 'Failed to connect to Salesforce'\n            }, {\n                status: 500\n            });\n        }\n        // Convert URL-friendly trainer name back to actual name\n        // \"Nasi-Lemak-\" should become \"Nasi Lemak\" (without trailing hyphen)\n        // \"Nasi-Lemak\" should become \"Nasi Lemak\"\n        // Replace hyphens with spaces\n        let actualTrainerName = trainerName;\n        // Remove trailing hyphen if present\n        if (trainerName.endsWith('-')) {\n            actualTrainerName = trainerName.slice(0, -1);\n        }\n        // Replace hyphens with spaces\n        if (actualTrainerName.includes('-')) {\n            actualTrainerName = actualTrainerName.replace(/-/g, ' ');\n        }\n        // First, find the OnboardingTrainer by name\n        let trainerResult = null;\n        // Let's use the JavaScript filtering approach since SOQL queries are failing\n        console.log('Getting all trainers and filtering in JavaScript...');\n        try {\n            const allTrainersQuery = `\n        SELECT Id, Name, First_Revised_EGLD__c, Onboarding_Trainer_Stage__c, Installation_Date__c,\n               Phone_Number__c, Merchant_PIC_Contact_Number__c,\n               Operation_Manager_Contact__c, Operation_Manager_Contact__r.Phone, Operation_Manager_Contact__r.Name,\n               Business_Owner_Contact__c, Business_Owner_Contact__r.Phone, Business_Owner_Contact__r.Name,\n               Account_Name__c, Shipping_Street__c, Shipping_City__c, Shipping_State__c, \n               Shipping_Zip_Postal_Code__c, Shipping_Country__c, Sub_Industry__c, \n               Preferred_Language__c, Planned_Go_Live_Date__c, Required_Features_by_Merchant__c,\n               Video_Proof_Link__c, Onboarding_Services_Bought__c,\n               Synced_Quote_Total_Amount__c, Pending_Payment__c,\n               Welcome_Call_Status__c, First_Call_Timestamp__c, MSM_Name__c, MSM_Name__r.Name,\n               Product_Setup_Status__c, Completed_product_setup__c,\n               Hardware_Delivery_Status__c, Hardware_Installation_Status__c, Actual_Installation_Date__c,\n               Installation_Issues_Elaboration__c, Training_Status__c,\n               CSM_Name__c, CSM_Name__r.Name,\n               Menu_Collection_Form_Link__c, BO_Account_Name__c,\n               CreatedDate, LastModifiedDate\n        FROM Onboarding_Trainer__c\n        ORDER BY Name LIMIT 50\n      `;\n            const allTrainersResult = await conn.query(allTrainersQuery);\n            console.log('All trainers found:', allTrainersResult.records.map((t)=>`\"${t.Name}\"`));\n            console.log('Looking for:', `\"${actualTrainerName}\"`);\n            // Filter in JavaScript for exact match\n            const matchingTrainer = allTrainersResult.records.find((trainer)=>{\n                console.log(`Comparing \"${trainer.Name}\" with \"${actualTrainerName}\" and original \"${trainerName}\"`);\n                // Normalize both names for comparison\n                const normalizeNameForComparison = (name)=>{\n                    return name.toLowerCase().replace(/-/g, ' ') // Replace hyphens with spaces\n                    .replace(/\\s+/g, ' ') // Replace multiple spaces with single space\n                    .trim();\n                };\n                const trainerNameNormalized = normalizeNameForComparison(trainer.Name);\n                const actualNameNormalized = normalizeNameForComparison(actualTrainerName);\n                const originalNameNormalized = normalizeNameForComparison(trainerName);\n                // Check various matching patterns\n                const matches = trainer.Name === actualTrainerName || trainer.Name === trainerName || trainer.Name === trainerName.replace(/-/g, ' ') || // Direct hyphen to space replacement\n                trainer.Name === actualTrainerName.replace(/-/g, ' ') || // Direct hyphen to space replacement\n                trainerNameNormalized === actualNameNormalized || trainerNameNormalized === originalNameNormalized;\n                if (matches) {\n                    console.log(`Match found: \"${trainer.Name}\"`);\n                }\n                return matches;\n            });\n            if (matchingTrainer) {\n                console.log('Found matching trainer:', matchingTrainer.Name);\n                trainerResult = {\n                    totalSize: 1,\n                    records: [\n                        matchingTrainer\n                    ]\n                };\n            } else {\n                console.log('No matching trainer found in JavaScript filter');\n                trainerResult = {\n                    totalSize: 0,\n                    records: []\n                };\n            }\n        } catch (error) {\n            console.log('Failed to get all trainers - ERROR DETAILS:', error);\n            console.log('Error type:', typeof error);\n            console.log('Error message:', error?.message);\n            console.log('Error code:', error?.errorCode);\n            console.log('Error name:', error?.name);\n            console.log('Full error object:', JSON.stringify(error, null, 2));\n            // Try a simplified fallback query\n            console.log('Attempting simplified fallback query...');\n            try {\n                const simpleQuery = `\n          SELECT Id, Name, First_Revised_EGLD__c, Onboarding_Trainer_Stage__c\n          FROM Onboarding_Trainer__c\n          ORDER BY Name LIMIT 20\n        `;\n                const simpleResult = await conn.query(simpleQuery);\n                console.log('Simplified query successful, found trainers:', simpleResult.records.map((t)=>t.Name));\n                // Try to find match with simplified data\n                const matchingTrainer = simpleResult.records.find((trainer)=>{\n                    const normalizeNameForComparison = (name)=>{\n                        return name.toLowerCase().replace(/-/g, ' ').replace(/\\s+/g, ' ').trim();\n                    };\n                    const trainerNameNormalized = normalizeNameForComparison(trainer.Name);\n                    const actualNameNormalized = normalizeNameForComparison(actualTrainerName);\n                    return trainerNameNormalized === actualNameNormalized || trainer.Name.toLowerCase() === actualTrainerName.toLowerCase();\n                });\n                if (matchingTrainer) {\n                    console.log('Found match in simplified query:', matchingTrainer.Name);\n                    trainerResult = {\n                        totalSize: 1,\n                        records: [\n                            matchingTrainer\n                        ]\n                    };\n                } else {\n                    trainerResult = {\n                        totalSize: 0,\n                        records: []\n                    };\n                }\n            } catch (fallbackError) {\n                console.log('Simplified fallback query also failed:', fallbackError);\n                trainerResult = {\n                    totalSize: 0,\n                    records: []\n                };\n            }\n        }\n        // The search logic is now handled above\n        if (!trainerResult || trainerResult.totalSize === 0) {\n            // Debug: Let's see what trainers actually exist\n            let allTrainersResult = null;\n            try {\n                allTrainersResult = await conn.query(`\n          SELECT Id, Name\n          FROM Onboarding_Trainer__c\n          ORDER BY Name\n          LIMIT 20\n        `);\n            } catch (error) {\n                console.log('Failed to get all trainers for debugging:', error);\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: `No OnboardingTrainer found with name: ${trainerName}`,\n                searchedFor: trainerName,\n                searchedVariations: [\n                    `\"${trainerName}\"`,\n                    `\"${actualTrainerName}\"`,\n                    `\"${trainerName.replace(/-/g, ' ')}\"`,\n                    `\"${trainerName.toLowerCase()}\"`,\n                    `\"${actualTrainerName.toLowerCase()}\"`\n                ],\n                suggestion: 'Try using the exact OnboardingTrainer.Name from Salesforce',\n                availableTrainers: allTrainersResult?.records?.map((t)=>t.Name) || [],\n                totalTrainersInSystem: allTrainersResult?.totalSize || 0\n            }, {\n                status: 404\n            });\n        }\n        const trainer = trainerResult.records[0];\n        // Get the Account by ID (Account_Name__c actually contains the Account ID)\n        let account = null;\n        if (trainer.Account_Name__c) {\n            try {\n                // Account_Name__c contains the Account ID, not the name\n                const accountResult = await conn.query(`SELECT Id, Name, Business_Store_Name__c FROM Account WHERE Id = '${trainer.Account_Name__c}'`);\n                if (accountResult.totalSize > 0) {\n                    account = accountResult.records[0];\n                }\n            } catch (error) {\n                console.log('Failed to get account by ID:', error);\n            }\n        }\n        // Get detailed account data with custom fields (if account exists)\n        let accountData = null;\n        if (account) {\n            try {\n                const detailedAccountQuery = `\n          SELECT Id, Name, Business_Store_Name__c\n          FROM Account\n          WHERE Id = '${account.Id}'\n        `;\n                const detailedResult = await conn.query(detailedAccountQuery);\n                if (detailedResult.totalSize > 0) {\n                    const acc = detailedResult.records[0];\n                    accountData = {\n                        id: acc.Id,\n                        name: acc.Name,\n                        businessStoreName: acc.Business_Store_Name__c\n                    };\n                }\n            } catch (error) {\n                console.log('Detailed account query failed:', error);\n            }\n        }\n        // Get OrderItems and Shipment data associated with this Account\n        let orderItems = [];\n        let hardwareFulfillmentDate = null;\n        let trackingLink = null;\n        if (account) {\n            try {\n                // First get Orders for this Account with Type field and Hardware Fulfillment Date\n                const ordersQuery = `\n          SELECT Id, Type, Hardware_Fulfillment_Date__c\n          FROM Order\n          WHERE AccountId = '${account.Id}'\n          LIMIT 10\n        `;\n                const ordersResult = await conn.query(ordersQuery);\n                if (ordersResult.totalSize > 0) {\n                    // Create a map of order IDs to order types and hardware fulfillment dates\n                    const orderTypeMap = {};\n                    ordersResult.records.forEach((order)=>{\n                        orderTypeMap[order.Id] = order.Type || 'N/A';\n                        if (order.Hardware_Fulfillment_Date__c && !hardwareFulfillmentDate) {\n                            hardwareFulfillmentDate = order.Hardware_Fulfillment_Date__c;\n                        }\n                    });\n                    const orderIds = ordersResult.records.map((order)=>`'${order.Id}'`).join(',');\n                    // Now get OrderItems for these Orders\n                    const orderItemsQuery = `\n            SELECT Id, Product2Id, Product2.Name, TotalPrice, UnitPrice, Quantity, OrderId\n            FROM OrderItem\n            WHERE OrderId IN (${orderIds})\n            LIMIT 50\n          `;\n                    const orderItemsResult = await conn.query(orderItemsQuery);\n                    if (orderItemsResult.totalSize > 0) {\n                        orderItems = orderItemsResult.records.map((item)=>({\n                                id: item.Id,\n                                product2Id: item.Product2Id,\n                                productName: item.Product2?.Name || 'Unknown Product',\n                                totalPrice: item.TotalPrice,\n                                unitPrice: item.UnitPrice,\n                                quantity: item.Quantity,\n                                orderId: item.OrderId,\n                                orderType: orderTypeMap[item.OrderId] || 'N/A'\n                            }));\n                    }\n                }\n                // Get Shipment tracking link\n                try {\n                    const shipmentQuery = `\n            SELECT Id, Tracking_Link__c\n            FROM Shipment__c\n            WHERE Account__c = '${account.Id}'\n            ORDER BY CreatedDate DESC\n            LIMIT 1\n          `;\n                    const shipmentResult = await conn.query(shipmentQuery);\n                    if (shipmentResult.totalSize > 0) {\n                        trackingLink = shipmentResult.records[0].Tracking_Link__c;\n                    }\n                } catch (shipmentError) {\n                    console.log('Failed to fetch Shipment tracking:', shipmentError);\n                // Continue without tracking link - not a critical failure\n                }\n            } catch (error) {\n                console.log('Failed to fetch OrderItems:', error);\n            // Continue without order items - not a critical failure\n            }\n        }\n        // Return the specific trainer data (not all trainers)\n        const onboardingTrainerData = {\n            totalCount: 1,\n            trainers: [\n                {\n                    id: trainer.Id,\n                    name: trainer.Name,\n                    firstRevisedEGLD: trainer.First_Revised_EGLD__c,\n                    onboardingTrainerStage: trainer.Onboarding_Trainer_Stage__c,\n                    installationDate: trainer.Installation_Date__c,\n                    phoneNumber: trainer.Phone_Number__c,\n                    merchantPICContactNumber: trainer.Merchant_PIC_Contact_Number__c,\n                    operationManagerContact: trainer.Operation_Manager_Contact__r ? {\n                        id: trainer.Operation_Manager_Contact__c,\n                        name: trainer.Operation_Manager_Contact__r.Name,\n                        phone: trainer.Operation_Manager_Contact__r.Phone\n                    } : null,\n                    businessOwnerContact: trainer.Business_Owner_Contact__r ? {\n                        id: trainer.Business_Owner_Contact__c,\n                        name: trainer.Business_Owner_Contact__r.Name,\n                        phone: trainer.Business_Owner_Contact__r.Phone\n                    } : null,\n                    accountId: trainer.Account_Name__c,\n                    accountName: account?.Name || trainer.Account_Name__c,\n                    shippingStreet: trainer.Shipping_Street__c,\n                    shippingCity: trainer.Shipping_City__c,\n                    shippingState: trainer.Shipping_State__c,\n                    shippingZipPostalCode: trainer.Shipping_Zip_Postal_Code__c,\n                    shippingCountry: trainer.Shipping_Country__c,\n                    subIndustry: trainer.Sub_Industry__c,\n                    preferredLanguage: trainer.Preferred_Language__c,\n                    plannedGoLiveDate: trainer.Planned_Go_Live_Date__c,\n                    requiredFeaturesByMerchant: trainer.Required_Features_by_Merchant__c,\n                    onboardingServicesBought: trainer.Onboarding_Services_Bought__c,\n                    syncedQuoteTotalAmount: trainer.Synced_Quote_Total_Amount__c,\n                    pendingPayment: trainer.Pending_Payment__c,\n                    welcomeCallStatus: trainer.Welcome_Call_Status__c,\n                    firstCallTimestamp: trainer.First_Call_Timestamp__c,\n                    msmName: trainer.MSM_Name__r ? trainer.MSM_Name__r.Name : trainer.MSM_Name__c,\n                    productSetupStatus: trainer.Product_Setup_Status__c,\n                    completedProductSetup: trainer.Completed_product_setup__c,\n                    hardwareDeliveryStatus: trainer.Hardware_Delivery_Status__c,\n                    hardwareInstallationStatus: trainer.Hardware_Installation_Status__c,\n                    actualInstallationDate: trainer.Actual_Installation_Date__c,\n                    installationIssuesElaboration: trainer.Installation_Issues_Elaboration__c,\n                    trainingStatus: trainer.Training_Status__c,\n                    // trainingDate: trainer.Training_Date__c, // This field might not exist\n                    // backOfficeTrainingDate: trainer.BackOffice_Training_Date__c, // Field doesn't exist\n                    // posTrainingDate: trainer.POS_Training_Date__c, // Field doesn't exist\n                    csmName: trainer.CSM_Name__r ? trainer.CSM_Name__r.Name : trainer.CSM_Name__c,\n                    hardwareFulfillmentDate: hardwareFulfillmentDate,\n                    trackingLink: trackingLink,\n                    menuCollectionFormLink: trainer.Menu_Collection_Form_Link__c,\n                    boAccountName: trainer.BO_Account_Name__c,\n                    videoProofLink: trainer.Video_Proof_Link__c,\n                    createdDate: trainer.CreatedDate,\n                    lastModifiedDate: trainer.LastModifiedDate\n                }\n            ]\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: `Successfully loaded data for trainer: ${trainer.Name}`,\n            trainerName: trainerName,\n            account: accountData,\n            onboardingTrainerData: onboardingTrainerData,\n            orderItems: orderItems\n        });\n    } catch (error) {\n        console.error('Merchant data fetch error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            message: `Failed to fetch trainer data: ${error.message}`,\n            trainerName: trainerName\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/salesforce/merchant/[merchantId]/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = global;\nconst prisma = globalForPrisma.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log: [\n        'query',\n        'error',\n        'warn'\n    ]\n});\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUU3QyxNQUFNQyxrQkFBa0JDO0FBRWpCLE1BQU1DLFNBQ1hGLGdCQUFnQkUsTUFBTSxJQUN0QixJQUFJSCx3REFBWUEsQ0FBQztJQUNmSSxLQUFLO1FBQUM7UUFBUztRQUFTO0tBQU87QUFDakMsR0FBRTtBQUVKLElBQUlDLElBQXFDLEVBQUVKLGdCQUFnQkUsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsiL1VzZXJzL25lem9iZW5hcmRpL0FJX3N0dWZmL09uYm9hcmRpbmdQb3J0YWwvbGliL3ByaXNtYS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCdcblxuY29uc3QgZ2xvYmFsRm9yUHJpc21hID0gZ2xvYmFsIGFzIHVua25vd24gYXMgeyBwcmlzbWE6IFByaXNtYUNsaWVudCB9XG5cbmV4cG9ydCBjb25zdCBwcmlzbWEgPVxuICBnbG9iYWxGb3JQcmlzbWEucHJpc21hIHx8XG4gIG5ldyBQcmlzbWFDbGllbnQoe1xuICAgIGxvZzogWydxdWVyeScsICdlcnJvcicsICd3YXJuJ10sXG4gIH0pXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSBnbG9iYWxGb3JQcmlzbWEucHJpc21hID0gcHJpc21hIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsImdsb2JhbEZvclByaXNtYSIsImdsb2JhbCIsInByaXNtYSIsImxvZyIsInByb2Nlc3MiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/prisma.ts\n");

/***/ }),

/***/ "(rsc)/./lib/salesforce.ts":
/*!***************************!*\
  !*** ./lib/salesforce.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSalesforceConnection: () => (/* binding */ getSalesforceConnection),\n/* harmony export */   syncToSalesforce: () => (/* binding */ syncToSalesforce),\n/* harmony export */   testSalesforceConnection: () => (/* binding */ testSalesforceConnection)\n/* harmony export */ });\n/* harmony import */ var jsforce__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsforce */ \"(rsc)/./node_modules/jsforce/index.js\");\n/* harmony import */ var jsforce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsforce__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./prisma */ \"(rsc)/./lib/prisma.ts\");\n\n\nlet connection = null;\nlet connectionError = null;\nasync function getSalesforceConnection() {\n    // Return cached connection if available\n    if (connection && connection.accessToken) {\n        try {\n            // Test the connection with a simple query\n            await connection.query('SELECT Id FROM Account LIMIT 1');\n            return connection;\n        } catch (error) {\n            console.log('Cached connection invalid, reconnecting...');\n            connection = null;\n        }\n    }\n    // Check if we have the required credentials\n    const hasUsernamePassword = process.env.SF_USERNAME && process.env.SF_PASSWORD && process.env.SF_TOKEN;\n    const hasOAuth = process.env.SF_CLIENT_ID && process.env.SF_CLIENT_SECRET;\n    if (!hasUsernamePassword && !hasOAuth) {\n        connectionError = 'No Salesforce credentials provided. Please set SF_USERNAME/SF_PASSWORD/SF_TOKEN or SF_CLIENT_ID/SF_CLIENT_SECRET';\n        console.warn(connectionError);\n        return null;\n    }\n    try {\n        // Default to sandbox URL for development\n        const loginUrl = process.env.SF_LOGIN_URL || 'https://test.salesforce.com';\n        console.log(`🔗 Connecting to Salesforce at: ${loginUrl}`);\n        connection = new (jsforce__WEBPACK_IMPORTED_MODULE_0___default().Connection)({\n            loginUrl: loginUrl\n        });\n        if (hasUsernamePassword) {\n            // Username/Password flow\n            console.log('Connecting to Salesforce with username/password...');\n            await connection.login(process.env.SF_USERNAME, process.env.SF_PASSWORD + process.env.SF_TOKEN);\n        } else if (hasOAuth) {\n            // OAuth flow (for production)\n            console.log('Connecting to Salesforce with OAuth...');\n            await connection.login(process.env.SF_CLIENT_ID, process.env.SF_CLIENT_SECRET);\n        }\n        console.log('Salesforce connection established successfully');\n        connectionError = null;\n        return connection;\n    } catch (error) {\n        connectionError = `Salesforce connection failed: ${error}`;\n        console.error('Salesforce connection error:', error);\n        connection = null;\n        return null;\n    }\n}\nasync function syncToSalesforce(merchant) {\n    try {\n        const conn = await getSalesforceConnection();\n        // Skip sync if no connection (missing credentials)\n        if (!conn) {\n            console.log('⏭️ Skipping Salesforce sync - no connection available');\n            return {\n                success: false,\n                message: 'No Salesforce connection'\n            };\n        }\n        // Prepare Salesforce data mapping\n        const sfData = {\n            Name: merchant.companyName,\n            External_Id__c: merchant.id\n        };\n        // Only include fields that have values\n        if (merchant.address) sfData.BillingStreet = merchant.address;\n        if (merchant.phone) sfData.Phone = merchant.phone;\n        if (merchant.onboardingStage) sfData.Onboarding_Stage__c = merchant.onboardingStage;\n        if (merchant.installationDate) sfData.Installation_Date__c = merchant.installationDate;\n        if (merchant.trainingDate) sfData.Training_Date__c = merchant.trainingDate;\n        if (merchant.salesforceId) {\n            // Update existing record\n            console.log('🔄 Updating Salesforce Account:', merchant.salesforceId);\n            const result = await conn.sobject('Account').update({\n                Id: merchant.salesforceId,\n                ...sfData\n            });\n            if (result.success) {\n                console.log('Salesforce Account updated successfully');\n                return {\n                    success: true,\n                    message: 'Account updated',\n                    salesforceId: merchant.salesforceId\n                };\n            } else {\n                throw new Error(`Update failed: ${result.errors?.join(', ')}`);\n            }\n        } else {\n            // Create new record\n            console.log('➕ Creating new Salesforce Account for merchant:', merchant.id);\n            const result = await conn.sobject('Account').create(sfData);\n            if (result.success && result.id) {\n                // Update merchant with Salesforce ID\n                await _prisma__WEBPACK_IMPORTED_MODULE_1__.prisma.merchant.update({\n                    where: {\n                        id: merchant.id\n                    },\n                    data: {\n                        salesforceId: result.id\n                    }\n                });\n                console.log('Created Salesforce Account with ID:', result.id);\n                return {\n                    success: true,\n                    message: 'Account created',\n                    salesforceId: result.id\n                };\n            } else {\n                throw new Error(`Creation failed: ${result.errors?.join(', ')}`);\n            }\n        }\n    } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n        console.error('Salesforce sync failed:', errorMessage);\n        return {\n            success: false,\n            message: errorMessage\n        };\n    }\n}\nasync function testSalesforceConnection() {\n    try {\n        const conn = await getSalesforceConnection();\n        if (!conn) {\n            return {\n                success: false,\n                message: connectionError || 'No Salesforce credentials provided',\n                environment: 'Not connected'\n            };\n        }\n        // Test with a simple query and get org info\n        const [accountResult, orgResult] = await Promise.all([\n            conn.query('SELECT Id, Name FROM Account LIMIT 5'),\n            conn.query('SELECT Id, Name, OrganizationType, IsSandbox FROM Organization LIMIT 1')\n        ]);\n        const org = orgResult.records[0];\n        const environment = org?.IsSandbox ? 'Sandbox' : 'Production';\n        // Test custom fields query - first get the specific account ID\n        let customFieldsData = null;\n        let onboardingTrainerData = null;\n        const accountId = accountResult.records[0]?.Id;\n        if (accountId) {\n            // First, let's describe the Account object to see what fields are available\n            let availableFields = [];\n            try {\n                const accountDescribe = await conn.sobject('Account').describe();\n                availableFields = accountDescribe.fields.map((field)=>field.name);\n                console.log('Available Account fields:', availableFields.filter((f)=>f.includes('__c')).slice(0, 20));\n            } catch (describeError) {\n                console.log('Could not describe Account object:', describeError);\n            }\n            // Test each field individually to see which ones exist\n            const fieldsToTest = [\n                'Business_Store_Name__c',\n                'Onboarding_Trainer__c',\n                'Onboarding_Services_Bought__c',\n                'Go_Live_Stage_Timestamp__c',\n                'Planned_Go_Live_Date__c',\n                'Finalised_Go_Live_Date__c',\n                'Onboarding_Completed_Stage_Timestamp__c',\n                'Latest_Stage_Date__c',\n                'Latest_SF_Stage__c',\n                'Onboarding_Trainer_Stage__c'\n            ];\n            const existingFields = [];\n            const fieldTestResults = [];\n            for (const field of fieldsToTest){\n                try {\n                    await conn.query(`SELECT Id, ${field} FROM Account WHERE Id = '${accountId}' LIMIT 1`);\n                    existingFields.push(field);\n                    fieldTestResults.push({\n                        field,\n                        exists: true\n                    });\n                } catch (error) {\n                    fieldTestResults.push({\n                        field,\n                        exists: false,\n                        error: error.message\n                    });\n                }\n            }\n            // Now query with only the existing fields\n            if (existingFields.length > 0) {\n                try {\n                    const customFieldsQuery = `\n            SELECT Id, Name${existingFields.length > 0 ? ', ' + existingFields.join(', ') : ''}\n            FROM Account\n            WHERE Id = '${accountId}'\n          `;\n                    const customFieldsResult = await conn.query(customFieldsQuery);\n                    const account = customFieldsResult.records[0];\n                    customFieldsData = {\n                        account: {\n                            id: account.Id,\n                            name: account.Name,\n                            businessStoreName: account.Business_Store_Name__c,\n                            onboardingTrainer: account.Onboarding_Trainer__c,\n                            servicesBought: account.Onboarding_Services_Bought__c,\n                            goLiveStageTimestamp: account.Go_Live_Stage_Timestamp__c,\n                            plannedGoLiveDate: account.Planned_Go_Live_Date__c,\n                            finalisedGoLiveDate: account.Finalised_Go_Live_Date__c,\n                            onboardingCompletedTimestamp: account.Onboarding_Completed_Stage_Timestamp__c,\n                            latestStageDate: account.Latest_Stage_Date__c,\n                            latestSFStage: account.Latest_SF_Stage__c,\n                            onboardingTrainerStage: account.Onboarding_Trainer_Stage__c\n                        },\n                        fieldTestResults,\n                        existingFields,\n                        availableCustomFields: availableFields.filter((f)=>f.includes('__c')).slice(0, 20)\n                    };\n                } catch (queryError) {\n                    customFieldsData = {\n                        error: `Query failed: ${queryError}`,\n                        fieldTestResults,\n                        availableCustomFields: availableFields.filter((f)=>f.includes('__c')).slice(0, 20)\n                    };\n                }\n            } else {\n                customFieldsData = {\n                    error: 'None of the specified custom fields exist on this Account',\n                    fieldTestResults,\n                    availableCustomFields: availableFields.filter((f)=>f.includes('__c')).slice(0, 20)\n                };\n            }\n        } else {\n            customFieldsData = {\n                error: 'No Account found to test custom fields'\n            };\n        }\n        // Test Onboarding Trainer data\n        try {\n            const onboardingTrainerQuery = `\n        SELECT Id, Name, First_Revised_EGLD__c, Training_Date__c, CreatedDate, LastModifiedDate\n        FROM Onboarding_Trainer__c\n        ORDER BY CreatedDate DESC\n        LIMIT 10\n      `;\n            const onboardingTrainerResult = await conn.query(onboardingTrainerQuery);\n            onboardingTrainerData = {\n                totalCount: onboardingTrainerResult.totalSize,\n                trainers: onboardingTrainerResult.records.map((trainer)=>({\n                        id: trainer.Id,\n                        name: trainer.Name,\n                        firstRevisedEGLD: trainer.First_Revised_EGLD__c,\n                        trainingDate: trainer.Training_Date__c,\n                        createdDate: trainer.CreatedDate,\n                        lastModifiedDate: trainer.LastModifiedDate\n                    }))\n            };\n        } catch (trainerError) {\n            console.log('Onboarding Trainer query failed:', trainerError);\n            onboardingTrainerData = {\n                error: `Onboarding Trainer access failed: ${trainerError}`\n            };\n        }\n        return {\n            success: true,\n            message: `Connected to Salesforce ${environment}`,\n            environment: environment,\n            orgName: org?.Name,\n            accountCount: accountResult.totalSize,\n            loginUrl: process.env.SF_LOGIN_URL || 'https://test.salesforce.com',\n            accounts: accountResult.records.map((acc)=>({\n                    id: acc.Id,\n                    name: acc.Name\n                })),\n            customFieldsData: customFieldsData,\n            onboardingTrainerData: onboardingTrainerData\n        };\n    } catch (error) {\n        return {\n            success: false,\n            message: `Connection failed: ${error}`,\n            environment: 'Connection failed'\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/salesforce.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry","vendor-chunks/jsforce","vendor-chunks/tr46","vendor-chunks/tldts","vendor-chunks/mime-db","vendor-chunks/xmlbuilder","vendor-chunks/csv-parse","vendor-chunks/readable-stream","vendor-chunks/faye","vendor-chunks/tough-cookie","vendor-chunks/websocket-driver","vendor-chunks/csv-stringify","vendor-chunks/node-fetch","vendor-chunks/sax","vendor-chunks/whatwg-url","vendor-chunks/xml2js","vendor-chunks/tldts-core","vendor-chunks/@sindresorhus","vendor-chunks/debug","vendor-chunks/form-data","vendor-chunks/websocket-extensions","vendor-chunks/get-intrinsic","vendor-chunks/faye-websocket","vendor-chunks/http-parser-js","vendor-chunks/https-proxy-agent","vendor-chunks/string_decoder","vendor-chunks/agent-base","vendor-chunks/asynckit","vendor-chunks/tunnel-agent","vendor-chunks/asap","vendor-chunks/webidl-conversions","vendor-chunks/combined-stream","vendor-chunks/mime-types","vendor-chunks/multistream","vendor-chunks/ms","vendor-chunks/supports-color","vendor-chunks/has-symbols","vendor-chunks/delayed-stream","vendor-chunks/function-bind","vendor-chunks/safe-buffer","vendor-chunks/sequin","vendor-chunks/es-set-tostringtag","vendor-chunks/get-proto","vendor-chunks/call-bind-apply-helpers","vendor-chunks/inherits","vendor-chunks/dunder-proto","vendor-chunks/math-intrinsics","vendor-chunks/csprng","vendor-chunks/es-errors","vendor-chunks/has-flag","vendor-chunks/gopd","vendor-chunks/es-define-property","vendor-chunks/hasown","vendor-chunks/has-tostringtag","vendor-chunks/util-deprecate","vendor-chunks/es-object-atoms"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fsalesforce%2Fmerchant%2F%5BmerchantId%5D%2Froute&page=%2Fapi%2Fsalesforce%2Fmerchant%2F%5BmerchantId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsalesforce%2Fmerchant%2F%5BmerchantId%5D%2Froute.ts&appDir=%2FUsers%2Fnezobenardi%2FAI_stuff%2FOnboardingPortal%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fnezobenardi%2FAI_stuff%2FOnboardingPortal&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();