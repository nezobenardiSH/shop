/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/jsforce";
exports.ids = ["vendor-chunks/jsforce"];
exports.modules = {

/***/ "(rsc)/./node_modules/jsforce/index.js":
/*!***************************************!*\
  !*** ./node_modules/jsforce/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./lib */ \"(rsc)/./node_modules/jsforce/lib/index.js\")[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSx5R0FBeUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uZXpvYmVuYXJkaS9BSV9zdHVmZi9PbmJvYXJkaW5nUG9ydGFsL25vZGVfbW9kdWxlcy9qc2ZvcmNlL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWInKS5kZWZhdWx0O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/VERSION.js":
/*!*********************************************!*\
  !*** ./node_modules/jsforce/lib/VERSION.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports[\"default\"] = '3.10.7';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvVkVSU0lPTi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBZSIsInNvdXJjZXMiOlsiL1VzZXJzL25lem9iZW5hcmRpL0FJX3N0dWZmL09uYm9hcmRpbmdQb3J0YWwvbm9kZV9tb2R1bGVzL2pzZm9yY2UvbGliL1ZFUlNJT04uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlZmF1bHQgPSAnMy4xMC43JztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/VERSION.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/api/analytics.js":
/*!***************************************************!*\
  !*** ./node_modules/jsforce/lib/api/analytics.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Analytics = exports.Dashboard = exports.Report = exports.ReportInstance = void 0;\n/**\n * @file Manages Salesforce Analytics API\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\nconst jsforce_1 = __webpack_require__(/*! ../jsforce */ \"(rsc)/./node_modules/jsforce/lib/jsforce.js\");\n/*----------------------------------------------------------------------------------*/\n/**\n * Report object class in Analytics API\n */\nclass ReportInstance {\n    _report;\n    _conn;\n    id;\n    /**\n     *\n     */\n    constructor(report, id) {\n        this._report = report;\n        this._conn = report._conn;\n        this.id = id;\n    }\n    /**\n     * Retrieve report result asynchronously executed\n     */\n    retrieve() {\n        const url = [\n            this._conn._baseUrl(),\n            'analytics',\n            'reports',\n            this._report.id,\n            'instances',\n            this.id,\n        ].join('/');\n        return this._conn.request(url);\n    }\n}\nexports.ReportInstance = ReportInstance;\n/*----------------------------------------------------------------------------------*/\n/**\n * Report object class in Analytics API\n */\nclass Report {\n    _conn;\n    id;\n    /**\n     *\n     */\n    constructor(conn, id) {\n        this._conn = conn;\n        this.id = id;\n    }\n    /**\n     * Describe report metadata\n     */\n    describe() {\n        const url = [\n            this._conn._baseUrl(),\n            'analytics',\n            'reports',\n            this.id,\n            'describe',\n        ].join('/');\n        return this._conn.request(url);\n    }\n    /**\n     * Destroy a report\n     */\n    destroy() {\n        const url = [this._conn._baseUrl(), 'analytics', 'reports', this.id].join('/');\n        return this._conn.request({ method: 'DELETE', url });\n    }\n    /**\n     * Synonym of Analytics~Report#destroy()\n     */\n    delete = this.destroy;\n    /**\n     * Synonym of Analytics~Report#destroy()\n     */\n    del = this.destroy;\n    /**\n     * Clones a given report\n     */\n    clone(name) {\n        const url = [this._conn._baseUrl(), 'analytics', 'reports'].join('/') +\n            '?cloneId=' +\n            this.id;\n        const config = { reportMetadata: { name } };\n        return this._conn.request({\n            method: 'POST',\n            url,\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(config),\n        });\n    }\n    /**\n     * Explain plan for executing report\n     */\n    explain() {\n        const url = '/query/?explain=' + this.id;\n        return this._conn.request(url);\n    }\n    /**\n     * Run report synchronously\n     */\n    execute(options = {}) {\n        const url = [this._conn._baseUrl(), 'analytics', 'reports', this.id].join('/') +\n            '?includeDetails=' +\n            (options.details ? 'true' : 'false');\n        return this._conn.request({\n            url,\n            ...(options.metadata\n                ? {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(options.metadata),\n                }\n                : { method: 'GET' }),\n        });\n    }\n    /**\n     * Synonym of Analytics~Report#execute()\n     */\n    run = this.execute;\n    /**\n     * Synonym of Analytics~Report#execute()\n     */\n    exec = this.execute;\n    /**\n     * Run report asynchronously\n     */\n    executeAsync(options = {}) {\n        const url = [\n            this._conn._baseUrl(),\n            'analytics',\n            'reports',\n            this.id,\n            'instances',\n        ].join('/') + (options.details ? '?includeDetails=true' : '');\n        return this._conn.request({\n            method: 'POST',\n            url,\n            ...(options.metadata\n                ? {\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(options.metadata),\n                }\n                : { body: '' }),\n        });\n    }\n    /**\n     * Get report instance for specified instance ID\n     */\n    instance(id) {\n        return new ReportInstance(this, id);\n    }\n    /**\n     * List report instances which had been executed asynchronously\n     */\n    instances() {\n        const url = [\n            this._conn._baseUrl(),\n            'analytics',\n            'reports',\n            this.id,\n            'instances',\n        ].join('/');\n        return this._conn.request(url);\n    }\n}\nexports.Report = Report;\n/*----------------------------------------------------------------------------------*/\n/**\n * Dashboard object class in the Analytics API\n */\nclass Dashboard {\n    _conn;\n    id;\n    /**\n     *\n     */\n    constructor(conn, id) {\n        this._conn = conn;\n        this.id = id;\n    }\n    /**\n     * Describe dashboard metadata\n     *\n     * @method Analytics~Dashboard#describe\n     * @param {Callback.<Analytics-DashboardMetadata>} [callback] - Callback function\n     * @returns {Promise.<Analytics-DashboardMetadata>}\n     */\n    describe() {\n        const url = [\n            this._conn._baseUrl(),\n            'analytics',\n            'dashboards',\n            this.id,\n            'describe',\n        ].join('/');\n        return this._conn.request(url);\n    }\n    /**\n     * Get details about dashboard components\n     */\n    components(componentIds) {\n        const url = [\n            this._conn._baseUrl(),\n            'analytics',\n            'dashboards',\n            this.id,\n        ].join('/');\n        const config = {\n            componentIds: Array.isArray(componentIds)\n                ? componentIds\n                : typeof componentIds === 'string'\n                    ? [componentIds]\n                    : undefined,\n        };\n        return this._conn.request({\n            method: 'POST',\n            url,\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(config),\n        });\n    }\n    /**\n     * Get dashboard status\n     */\n    status() {\n        const url = [\n            this._conn._baseUrl(),\n            'analytics',\n            'dashboards',\n            this.id,\n            'status',\n        ].join('/');\n        return this._conn.request(url);\n    }\n    /**\n     * Refresh a dashboard\n     */\n    refresh() {\n        const url = [\n            this._conn._baseUrl(),\n            'analytics',\n            'dashboards',\n            this.id,\n        ].join('/');\n        return this._conn.request({\n            method: 'PUT',\n            url,\n            body: '',\n        });\n    }\n    /**\n     * Clone a dashboard\n     */\n    clone(config, folderId) {\n        const url = [this._conn._baseUrl(), 'analytics', 'dashboards'].join('/') +\n            '?cloneId=' +\n            this.id;\n        if (typeof config === 'string') {\n            config = { name: config, folderId };\n        }\n        return this._conn.request({\n            method: 'POST',\n            url,\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(config),\n        });\n    }\n    /**\n     * Destroy a dashboard\n     */\n    destroy() {\n        const url = [\n            this._conn._baseUrl(),\n            'analytics',\n            'dashboards',\n            this.id,\n        ].join('/');\n        return this._conn.request({ method: 'DELETE', url });\n    }\n    /**\n     * Synonym of Analytics~Dashboard#destroy()\n     */\n    delete = this.destroy;\n    /**\n     * Synonym of Analytics~Dashboard#destroy()\n     */\n    del = this.destroy;\n}\nexports.Dashboard = Dashboard;\n/*----------------------------------------------------------------------------------*/\n/**\n * API class for Analytics API\n */\nclass Analytics {\n    _conn;\n    /**\n     *\n     */\n    constructor(conn) {\n        this._conn = conn;\n    }\n    /**\n     * Get report object of Analytics API\n     */\n    report(id) {\n        return new Report(this._conn, id);\n    }\n    /**\n     * Get recent report list\n     */\n    reports() {\n        const url = [this._conn._baseUrl(), 'analytics', 'reports'].join('/');\n        return this._conn.request(url);\n    }\n    /**\n     * Get dashboard object of Analytics API\n     */\n    dashboard(id) {\n        return new Dashboard(this._conn, id);\n    }\n    /**\n     * Get recent dashboard list\n     */\n    dashboards() {\n        const url = [this._conn._baseUrl(), 'analytics', 'dashboards'].join('/');\n        return this._conn.request(url);\n    }\n}\nexports.Analytics = Analytics;\n/*--------------------------------------------*/\n/*\n * Register hook in connection instantiation for dynamically adding this API module features\n */\n(0, jsforce_1.registerModule)('analytics', (conn) => new Analytics(conn));\nexports[\"default\"] = Analytics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/api/analytics.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/api/apex.js":
/*!**********************************************!*\
  !*** ./node_modules/jsforce/lib/api/apex.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Apex = void 0;\n/**\n * @file Manages Salesforce Apex REST endpoint calls\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\nconst jsforce_1 = __webpack_require__(/*! ../jsforce */ \"(rsc)/./node_modules/jsforce/lib/jsforce.js\");\n/**\n * API class for Apex REST endpoint call\n */\nclass Apex {\n    _conn;\n    /**\n     *\n     */\n    constructor(conn) {\n        this._conn = conn;\n    }\n    /* @private */\n    _baseUrl() {\n        return `${this._conn.instanceUrl}/services/apexrest`;\n    }\n    /**\n     * @private\n     */\n    _createRequestParams(method, path, body, options = {}) {\n        const headers = typeof options.headers === 'object' ? options.headers : {};\n        if (!/^(GET|DELETE)$/i.test(method)) {\n            headers['content-type'] = 'application/json';\n        }\n        const params = {\n            method,\n            url: this._baseUrl() + path,\n            headers,\n        };\n        if (body) {\n            params.body = JSON.stringify(body);\n        }\n        return params;\n    }\n    /**\n     * Call Apex REST service in GET request\n     */\n    get(path, options) {\n        return this._conn.request(this._createRequestParams('GET', path, undefined, options));\n    }\n    /**\n     * Call Apex REST service in POST request\n     */\n    post(path, body, options) {\n        const params = this._createRequestParams('POST', path, body, options);\n        return this._conn.request(params);\n    }\n    /**\n     * Call Apex REST service in PUT request\n     */\n    put(path, body, options) {\n        const params = this._createRequestParams('PUT', path, body, options);\n        return this._conn.request(params);\n    }\n    /**\n     * Call Apex REST service in PATCH request\n     */\n    patch(path, body, options) {\n        const params = this._createRequestParams('PATCH', path, body, options);\n        return this._conn.request(params);\n    }\n    /**\n     * Call Apex REST service in DELETE request\n     */\n    delete(path, options) {\n        return this._conn.request(this._createRequestParams('DELETE', path, undefined, options));\n    }\n    /**\n     * Synonym of Apex#delete()\n     */\n    del = this.delete;\n}\nexports.Apex = Apex;\n/*--------------------------------------------*/\n/*\n * Register hook in connection instantiation for dynamically adding this API module features\n */\n(0, jsforce_1.registerModule)('apex', (conn) => new Apex(conn));\nexports[\"default\"] = Apex;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvYXBpL2FwZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsK0RBQVk7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsdUJBQXVCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlEO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsiL1VzZXJzL25lem9iZW5hcmRpL0FJX3N0dWZmL09uYm9hcmRpbmdQb3J0YWwvbm9kZV9tb2R1bGVzL2pzZm9yY2UvbGliL2FwaS9hcGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BcGV4ID0gdm9pZCAwO1xuLyoqXG4gKiBAZmlsZSBNYW5hZ2VzIFNhbGVzZm9yY2UgQXBleCBSRVNUIGVuZHBvaW50IGNhbGxzXG4gKiBAYXV0aG9yIFNoaW5pY2hpIFRvbWl0YSA8c2hpbmljaGkudG9taXRhQGdtYWlsLmNvbT5cbiAqL1xuY29uc3QganNmb3JjZV8xID0gcmVxdWlyZShcIi4uL2pzZm9yY2VcIik7XG4vKipcbiAqIEFQSSBjbGFzcyBmb3IgQXBleCBSRVNUIGVuZHBvaW50IGNhbGxcbiAqL1xuY2xhc3MgQXBleCB7XG4gICAgX2Nvbm47XG4gICAgLyoqXG4gICAgICpcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb25uKSB7XG4gICAgICAgIHRoaXMuX2Nvbm4gPSBjb25uO1xuICAgIH1cbiAgICAvKiBAcHJpdmF0ZSAqL1xuICAgIF9iYXNlVXJsKCkge1xuICAgICAgICByZXR1cm4gYCR7dGhpcy5fY29ubi5pbnN0YW5jZVVybH0vc2VydmljZXMvYXBleHJlc3RgO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIF9jcmVhdGVSZXF1ZXN0UGFyYW1zKG1ldGhvZCwgcGF0aCwgYm9keSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSB0eXBlb2Ygb3B0aW9ucy5oZWFkZXJzID09PSAnb2JqZWN0JyA/IG9wdGlvbnMuaGVhZGVycyA6IHt9O1xuICAgICAgICBpZiAoIS9eKEdFVHxERUxFVEUpJC9pLnRlc3QobWV0aG9kKSkge1xuICAgICAgICAgICAgaGVhZGVyc1snY29udGVudC10eXBlJ10gPSAnYXBwbGljYXRpb24vanNvbic7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcGFyYW1zID0ge1xuICAgICAgICAgICAgbWV0aG9kLFxuICAgICAgICAgICAgdXJsOiB0aGlzLl9iYXNlVXJsKCkgKyBwYXRoLFxuICAgICAgICAgICAgaGVhZGVycyxcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGJvZHkpIHtcbiAgICAgICAgICAgIHBhcmFtcy5ib2R5ID0gSlNPTi5zdHJpbmdpZnkoYm9keSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBhcmFtcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2FsbCBBcGV4IFJFU1Qgc2VydmljZSBpbiBHRVQgcmVxdWVzdFxuICAgICAqL1xuICAgIGdldChwYXRoLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb25uLnJlcXVlc3QodGhpcy5fY3JlYXRlUmVxdWVzdFBhcmFtcygnR0VUJywgcGF0aCwgdW5kZWZpbmVkLCBvcHRpb25zKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENhbGwgQXBleCBSRVNUIHNlcnZpY2UgaW4gUE9TVCByZXF1ZXN0XG4gICAgICovXG4gICAgcG9zdChwYXRoLCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHBhcmFtcyA9IHRoaXMuX2NyZWF0ZVJlcXVlc3RQYXJhbXMoJ1BPU1QnLCBwYXRoLCBib2R5LCBvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdChwYXJhbXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYWxsIEFwZXggUkVTVCBzZXJ2aWNlIGluIFBVVCByZXF1ZXN0XG4gICAgICovXG4gICAgcHV0KHBhdGgsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgcGFyYW1zID0gdGhpcy5fY3JlYXRlUmVxdWVzdFBhcmFtcygnUFVUJywgcGF0aCwgYm9keSwgb3B0aW9ucyk7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb25uLnJlcXVlc3QocGFyYW1zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2FsbCBBcGV4IFJFU1Qgc2VydmljZSBpbiBQQVRDSCByZXF1ZXN0XG4gICAgICovXG4gICAgcGF0Y2gocGF0aCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBwYXJhbXMgPSB0aGlzLl9jcmVhdGVSZXF1ZXN0UGFyYW1zKCdQQVRDSCcsIHBhdGgsIGJvZHksIG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHBhcmFtcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENhbGwgQXBleCBSRVNUIHNlcnZpY2UgaW4gREVMRVRFIHJlcXVlc3RcbiAgICAgKi9cbiAgICBkZWxldGUocGF0aCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHRoaXMuX2NyZWF0ZVJlcXVlc3RQYXJhbXMoJ0RFTEVURScsIHBhdGgsIHVuZGVmaW5lZCwgb3B0aW9ucykpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTeW5vbnltIG9mIEFwZXgjZGVsZXRlKClcbiAgICAgKi9cbiAgICBkZWwgPSB0aGlzLmRlbGV0ZTtcbn1cbmV4cG9ydHMuQXBleCA9IEFwZXg7XG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qXG4gKiBSZWdpc3RlciBob29rIGluIGNvbm5lY3Rpb24gaW5zdGFudGlhdGlvbiBmb3IgZHluYW1pY2FsbHkgYWRkaW5nIHRoaXMgQVBJIG1vZHVsZSBmZWF0dXJlc1xuICovXG4oMCwganNmb3JjZV8xLnJlZ2lzdGVyTW9kdWxlKSgnYXBleCcsIChjb25uKSA9PiBuZXcgQXBleChjb25uKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBBcGV4O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/api/apex.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/api/bulk.js":
/*!**********************************************!*\
  !*** ./node_modules/jsforce/lib/api/bulk.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Bulk = exports.Batch = exports.Job = void 0;\n/**\n * @file Manages Salesforce Bulk API related operations\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst multistream_1 = __importDefault(__webpack_require__(/*! multistream */ \"(rsc)/./node_modules/multistream/index.js\"));\nconst record_stream_1 = __webpack_require__(/*! ../record-stream */ \"(rsc)/./node_modules/jsforce/lib/record-stream.js\");\nconst http_api_1 = __importDefault(__webpack_require__(/*! ../http-api */ \"(rsc)/./node_modules/jsforce/lib/http-api.js\"));\nconst jsforce_1 = __webpack_require__(/*! ../jsforce */ \"(rsc)/./node_modules/jsforce/lib/jsforce.js\");\nconst stream_2 = __webpack_require__(/*! ../util/stream */ \"(rsc)/./node_modules/jsforce/lib/util/stream.js\");\nconst is_1 = __importDefault(__webpack_require__(/*! @sindresorhus/is */ \"(rsc)/./node_modules/@sindresorhus/is/dist/index.js\"));\n/**\n * Class for Bulk API Job\n */\nclass Job extends events_1.EventEmitter {\n    type;\n    operation;\n    options;\n    id;\n    state;\n    _bulk;\n    _batches;\n    _jobInfo;\n    _error;\n    /**\n     *\n     */\n    constructor(bulk, type, operation, options, jobId) {\n        super();\n        this._bulk = bulk;\n        this.type = type;\n        this.operation = operation;\n        this.options = options || {};\n        this.id = jobId ?? null;\n        this.state = this.id ? 'Open' : 'Unknown';\n        this._batches = {};\n        // default error handler to keep the latest error\n        this.on('error', (error) => (this._error = error));\n    }\n    /**\n     * Return latest jobInfo from cache\n     */\n    info() {\n        // if cache is not available, check the latest\n        if (!this._jobInfo) {\n            this._jobInfo = this.check();\n        }\n        return this._jobInfo;\n    }\n    /**\n     * Open new job and get jobinfo\n     */\n    open() {\n        const bulk = this._bulk;\n        const options = this.options;\n        // if sobject type / operation is not provided\n        if (!this.type || !this.operation) {\n            throw new Error('type / operation is required to open a new job');\n        }\n        // if not requested opening job\n        if (!this._jobInfo) {\n            let operation = this.operation.toLowerCase();\n            if (operation === 'harddelete') {\n                operation = 'hardDelete';\n            }\n            if (operation === 'queryall') {\n                operation = 'queryAll';\n            }\n            const body = `\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<jobInfo  xmlns=\"http://www.force.com/2009/06/asyncapi/dataload\">\n  <operation>${operation}</operation>\n  <object>${this.type}</object>\n  ${options.extIdField\n                ? `<externalIdFieldName>${options.extIdField}</externalIdFieldName>`\n                : ''}\n  ${options.concurrencyMode\n                ? `<concurrencyMode>${options.concurrencyMode}</concurrencyMode>`\n                : ''}\n  ${options.assignmentRuleId\n                ? `<assignmentRuleId>${options.assignmentRuleId}</assignmentRuleId>`\n                : ''}\n  <contentType>CSV</contentType>\n</jobInfo>\n      `.trim();\n            this._jobInfo = (async () => {\n                try {\n                    const res = await bulk._request({\n                        method: 'POST',\n                        path: '/job',\n                        body,\n                        headers: {\n                            'Content-Type': 'application/xml; charset=utf-8',\n                        },\n                        responseType: 'application/xml',\n                    });\n                    this.emit('open', res.jobInfo);\n                    this.id = res.jobInfo.id;\n                    this.state = res.jobInfo.state;\n                    return res.jobInfo;\n                }\n                catch (err) {\n                    this.emit('error', err);\n                    throw err;\n                }\n            })();\n        }\n        return this._jobInfo;\n    }\n    /**\n     * Create a new batch instance in the job\n     */\n    createBatch() {\n        const batch = new Batch(this);\n        batch.on('queue', () => {\n            this._batches[batch.id] = batch;\n        });\n        return batch;\n    }\n    /**\n     * Get a batch instance specified by given batch ID\n     */\n    batch(batchId) {\n        let batch = this._batches[batchId];\n        if (!batch) {\n            batch = new Batch(this, batchId);\n            this._batches[batchId] = batch;\n        }\n        return batch;\n    }\n    /**\n     * Check the latest job status from server\n     */\n    check() {\n        const bulk = this._bulk;\n        const logger = bulk._logger;\n        this._jobInfo = (async () => {\n            const jobId = await this.ready();\n            const res = await bulk._request({\n                method: 'GET',\n                path: '/job/' + jobId,\n                responseType: 'application/xml',\n            });\n            logger.debug(res.jobInfo);\n            this.id = res.jobInfo.id;\n            this.type = res.jobInfo.object;\n            this.operation = res.jobInfo.operation;\n            this.state = res.jobInfo.state;\n            return res.jobInfo;\n        })();\n        return this._jobInfo;\n    }\n    /**\n     * Wait till the job is assigned to server\n     */\n    ready() {\n        return this.id\n            ? Promise.resolve(this.id)\n            : this.open().then(({ id }) => id);\n    }\n    /**\n     * List all registered batch info in job\n     */\n    async list() {\n        const bulk = this._bulk;\n        const logger = bulk._logger;\n        const jobId = await this.ready();\n        const res = await bulk._request({\n            method: 'GET',\n            path: '/job/' + jobId + '/batch',\n            responseType: 'application/xml',\n        });\n        logger.debug(res.batchInfoList.batchInfo);\n        const batchInfoList = Array.isArray(res.batchInfoList.batchInfo)\n            ? res.batchInfoList.batchInfo\n            : [res.batchInfoList.batchInfo];\n        return batchInfoList;\n    }\n    /**\n     * Close opened job\n     */\n    async close() {\n        if (!this.id) {\n            return;\n        }\n        try {\n            const jobInfo = await this._changeState('Closed');\n            this.id = null;\n            this.emit('close', jobInfo);\n            return jobInfo;\n        }\n        catch (err) {\n            this.emit('error', err);\n            throw err;\n        }\n    }\n    /**\n     * Set the status to abort\n     */\n    async abort() {\n        if (!this.id) {\n            return;\n        }\n        try {\n            const jobInfo = await this._changeState('Aborted');\n            this.id = null;\n            this.emit('abort', jobInfo);\n            return jobInfo;\n        }\n        catch (err) {\n            this.emit('error', err);\n            throw err;\n        }\n    }\n    /**\n     * @private\n     */\n    async _changeState(state) {\n        const bulk = this._bulk;\n        const logger = bulk._logger;\n        this._jobInfo = (async () => {\n            const jobId = await this.ready();\n            const body = ` \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <jobInfo xmlns=\"http://www.force.com/2009/06/asyncapi/dataload\">\n  <state>${state}</state>\n</jobInfo>\n      `.trim();\n            const res = await bulk._request({\n                method: 'POST',\n                path: '/job/' + jobId,\n                body: body,\n                headers: {\n                    'Content-Type': 'application/xml; charset=utf-8',\n                },\n                responseType: 'application/xml',\n            });\n            logger.debug(res.jobInfo);\n            this.state = res.jobInfo.state;\n            return res.jobInfo;\n        })();\n        return this._jobInfo;\n    }\n}\nexports.Job = Job;\n/*--------------------------------------------*/\nclass PollingTimeoutError extends Error {\n    jobId;\n    batchId;\n    /**\n     *\n     */\n    constructor(message, jobId, batchId) {\n        super(message);\n        this.name = 'PollingTimeout';\n        this.jobId = jobId;\n        this.batchId = batchId;\n    }\n}\n/*--------------------------------------------*/\n/**\n * Batch (extends Writable)\n */\nclass Batch extends stream_1.Writable {\n    job;\n    id;\n    _bulk;\n    _uploadStream;\n    _downloadStream;\n    _dataStream;\n    _result;\n    _error;\n    /**\n     *\n     */\n    constructor(job, id) {\n        super({ objectMode: true });\n        this.job = job;\n        this.id = id;\n        this._bulk = job._bulk;\n        // default error handler to keep the latest error\n        this.on('error', (error) => (this._error = error));\n        //\n        // setup data streams\n        //\n        const converterOptions = { nullValue: '#N/A' };\n        const uploadStream = (this._uploadStream = new record_stream_1.Serializable());\n        const uploadDataStream = uploadStream.stream('csv', converterOptions);\n        const downloadStream = (this._downloadStream = new record_stream_1.Parsable());\n        const downloadDataStream = downloadStream.stream('csv', converterOptions);\n        this.on('finish', () => uploadStream.end());\n        uploadDataStream.once('readable', async () => {\n            try {\n                // ensure the job is opened in server or job id is already assigned\n                await this.job.ready();\n                // pipe upload data to batch API request stream\n                uploadDataStream.pipe(this._createRequestStream());\n            }\n            catch (err) {\n                this.emit('error', err);\n            }\n        });\n        // duplex data stream, opened access to API programmers by Batch#stream()\n        this._dataStream = (0, stream_2.concatStreamsAsDuplex)(uploadDataStream, downloadDataStream);\n    }\n    /**\n     * Connect batch API and create stream instance of request/response\n     *\n     * @private\n     */\n    _createRequestStream() {\n        const bulk = this._bulk;\n        const logger = bulk._logger;\n        const req = bulk._request({\n            method: 'POST',\n            path: '/job/' + this.job.id + '/batch',\n            headers: {\n                'Content-Type': 'text/csv',\n            },\n            responseType: 'application/xml',\n        });\n        (async () => {\n            try {\n                const res = await req;\n                logger.debug(res.batchInfo);\n                this.id = res.batchInfo.id;\n                this.emit('queue', res.batchInfo);\n            }\n            catch (err) {\n                this.emit('error', err);\n            }\n        })();\n        return req.stream();\n    }\n    /**\n     * Implementation of Writable\n     */\n    _write(record_, enc, cb) {\n        const { Id, type, attributes, ...rrec } = record_;\n        let record;\n        switch (this.job.operation) {\n            case 'insert':\n                record = rrec;\n                break;\n            case 'delete':\n            case 'hardDelete':\n                record = { Id };\n                break;\n            default:\n                record = { Id, ...rrec };\n        }\n        this._uploadStream.write(record, enc, cb);\n    }\n    /**\n     * Returns duplex stream which accepts CSV data input and batch result output\n     */\n    stream() {\n        return this._dataStream;\n    }\n    /**\n     * Execute batch operation\n     */\n    execute(input) {\n        // if batch is already executed\n        if (this._result) {\n            throw new Error('Batch already executed.');\n        }\n        this._result = new Promise((resolve, reject) => {\n            this.once('response', resolve);\n            this.once('error', reject);\n        });\n        if (is_1.default.nodeStream(input)) {\n            // if input has stream.Readable interface\n            input.pipe(this._dataStream);\n        }\n        else {\n            const recordData = structuredClone(input);\n            if (Array.isArray(recordData)) {\n                for (const record of recordData) {\n                    for (const key of Object.keys(record)) {\n                        if (typeof record[key] === 'boolean') {\n                            record[key] = String(record[key]);\n                        }\n                    }\n                    this.write(record);\n                }\n                this.end();\n            }\n            else if (typeof recordData === 'string') {\n                this._dataStream.write(recordData, 'utf8');\n                this._dataStream.end();\n            }\n        }\n        // return Batch instance for chaining\n        return this;\n    }\n    run = this.execute;\n    exec = this.execute;\n    /**\n     * Promise/A+ interface\n     * Delegate to promise, return promise instance for batch result\n     */\n    then(onResolved, onReject) {\n        if (!this._result) {\n            this.execute();\n        }\n        return this._result.then(onResolved, onReject);\n    }\n    /**\n     * Check the latest batch status in server\n     */\n    async check() {\n        const bulk = this._bulk;\n        const logger = bulk._logger;\n        const jobId = this.job.id;\n        const batchId = this.id;\n        if (!jobId || !batchId) {\n            throw new Error('Batch not started.');\n        }\n        const res = await bulk._request({\n            method: 'GET',\n            path: '/job/' + jobId + '/batch/' + batchId,\n            responseType: 'application/xml',\n        });\n        logger.debug(res.batchInfo);\n        return res.batchInfo;\n    }\n    /**\n     * Polling the batch result and retrieve\n     */\n    poll(interval, timeout) {\n        const jobId = this.job.id;\n        const batchId = this.id;\n        if (!jobId || !batchId) {\n            throw new Error('Batch not started.');\n        }\n        const startTime = new Date().getTime();\n        const endTime = startTime + timeout;\n        if (timeout === 0) {\n            throw new PollingTimeoutError(`Skipping polling because of timeout = 0ms. Job Id = ${jobId} | Batch Id = ${batchId}`, jobId, batchId);\n        }\n        const poll = async () => {\n            const now = new Date().getTime();\n            if (endTime < now) {\n                const err = new PollingTimeoutError('Polling time out. Job Id = ' + jobId + ' , batch Id = ' + batchId, jobId, batchId);\n                this.emit('error', err);\n                return;\n            }\n            let res;\n            try {\n                res = await this.check();\n            }\n            catch (err) {\n                this.emit('error', err);\n                return;\n            }\n            if (res.state === 'Failed') {\n                if (parseInt(res.numberRecordsProcessed, 10) > 0) {\n                    this.retrieve();\n                }\n                else {\n                    this.emit('error', new Error(res.stateMessage));\n                }\n            }\n            else if (res.state === 'Completed') {\n                this.retrieve();\n            }\n            else if (res.state === 'NotProcessed') {\n                this.emit('error', new Error('Job has been aborted'));\n            }\n            else {\n                this.emit('inProgress', res);\n                setTimeout(poll, interval);\n            }\n        };\n        setTimeout(poll, interval);\n    }\n    /**\n     * Retrieve batch result\n     */\n    async retrieve() {\n        const bulk = this._bulk;\n        const jobId = this.job.id;\n        const job = this.job;\n        const batchId = this.id;\n        if (!jobId || !batchId) {\n            throw new Error('Batch not started.');\n        }\n        try {\n            const resp = await bulk._request({\n                method: 'GET',\n                path: '/job/' + jobId + '/batch/' + batchId + '/result',\n            });\n            let results;\n            if (job.operation === 'query' || job.operation === 'queryAll') {\n                const res = resp;\n                const resultId = res['result-list'].result;\n                results = (Array.isArray(resultId)\n                    ? resultId\n                    : [resultId]).map((id) => ({ id, batchId, jobId }));\n            }\n            else {\n                const res = resp;\n                results = res.map((ret) => ({\n                    id: ret.Id || null,\n                    success: ret.Success === 'true',\n                    created: ret.Created === 'true',\n                    errors: ret.Error ? [ret.Error] : [],\n                }));\n            }\n            this.emit('response', results);\n            return results;\n        }\n        catch (err) {\n            this.emit('error', err);\n            throw err;\n        }\n    }\n    /**\n     * Fetch query batch result as a record stream\n     *\n     * @param {String} resultId - Result id\n     * @returns {RecordStream} - Record stream, convertible to CSV data stream\n     */\n    result(resultId) {\n        const jobId = this.job.id;\n        const batchId = this.id;\n        if (!jobId || !batchId) {\n            throw new Error('Batch not started.');\n        }\n        const resultStream = new record_stream_1.Parsable();\n        const resultDataStream = resultStream.stream('csv');\n        this._bulk\n            ._request({\n            method: 'GET',\n            path: '/job/' + jobId + '/batch/' + batchId + '/result/' + resultId,\n            responseType: 'application/octet-stream',\n        })\n            .stream()\n            .pipe(resultDataStream);\n        return resultStream;\n    }\n}\nexports.Batch = Batch;\n/*--------------------------------------------*/\n/**\n *\n */\nclass BulkApi extends http_api_1.default {\n    beforeSend(request) {\n        request.headers = {\n            ...request.headers,\n            'X-SFDC-SESSION': this._conn.accessToken ?? '',\n        };\n    }\n    isSessionExpired(response) {\n        return (response.statusCode === 400 &&\n            response.body.includes('<exceptionCode>InvalidSessionId</exceptionCode>'));\n    }\n    hasErrorInResponseBody(body) {\n        return !!body.error;\n    }\n    parseError(body) {\n        return {\n            errorCode: body.error.exceptionCode,\n            message: body.error.exceptionMessage,\n        };\n    }\n}\n/*--------------------------------------------*/\n/**\n * Class for Bulk API\n *\n * @class\n */\nclass Bulk {\n    _conn;\n    _logger;\n    /**\n     * Polling interval in milliseconds\n     *\n     * Default: 1000 (1 second)\n     */\n    pollInterval = 1000;\n    /**\n     * Polling timeout in milliseconds\n     *\n     * Default: 30000 (30 seconds)\n     */\n    pollTimeout = 30000;\n    /**\n     *\n     */\n    constructor(conn) {\n        this._conn = conn;\n        this._logger = conn._logger;\n    }\n    /**\n     *\n     */\n    _request(request_) {\n        const conn = this._conn;\n        const { path, responseType, ...rreq } = request_;\n        const baseUrl = [conn.instanceUrl, 'services/async', conn.version].join('/');\n        const request = {\n            ...rreq,\n            url: baseUrl + path,\n        };\n        return new BulkApi(this._conn, { responseType }).request(request);\n    }\n    load(type, operation, optionsOrInput, input) {\n        let options = {};\n        if (typeof optionsOrInput === 'string' ||\n            Array.isArray(optionsOrInput) ||\n            is_1.default.nodeStream(optionsOrInput)) {\n            // when options is not plain hash object, it is omitted\n            input = optionsOrInput;\n        }\n        else {\n            options = optionsOrInput;\n        }\n        const job = this.createJob(type, operation, options);\n        const batch = job.createBatch();\n        const cleanup = () => job.close();\n        const cleanupOnError = (err) => {\n            if (err.name !== 'PollingTimeout') {\n                cleanup();\n            }\n        };\n        batch.on('response', cleanup);\n        batch.on('error', cleanupOnError);\n        batch.on('queue', () => {\n            batch?.poll(this.pollInterval, this.pollTimeout);\n        });\n        return batch.execute(input);\n    }\n    /**\n     * Execute bulk query and get record stream\n     */\n    async query(soql) {\n        const m = soql.replace(/\\([\\s\\S]+\\)/g, '').match(/FROM\\s+(\\w+)/i);\n        if (!m) {\n            throw new Error('No sobject type found in query, maybe caused by invalid SOQL.');\n        }\n        const type = m[1];\n        const recordStream = new record_stream_1.Parsable();\n        const dataStream = recordStream.stream('csv');\n        const results = await this.load(type, 'query', soql);\n        const streams = results.map((result) => this.job(result.jobId).batch(result.batchId).result(result.id).stream());\n        (0, multistream_1.default)(streams).pipe(dataStream);\n        return recordStream;\n    }\n    /**\n     * Create a new job instance\n     */\n    createJob(type, operation, options = {}) {\n        return new Job(this, type, operation, options);\n    }\n    /**\n     * Get a job instance specified by given job ID\n     *\n     * @param {String} jobId - Job ID\n     * @returns {Bulk~Job}\n     */\n    job(jobId) {\n        return new Job(this, null, null, null, jobId);\n    }\n}\nexports.Bulk = Bulk;\n/*--------------------------------------------*/\n/*\n * Register hook in connection instantiation for dynamically adding this API module features\n */\n(0, jsforce_1.registerModule)('bulk', (conn) => new Bulk(conn));\nexports[\"default\"] = Bulk;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvYXBpL2J1bGsuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxZQUFZLEdBQUcsYUFBYSxHQUFHLFdBQVc7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqQyxpQkFBaUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqQyxzQ0FBc0MsbUJBQU8sQ0FBQyw4REFBYTtBQUMzRCx3QkFBd0IsbUJBQU8sQ0FBQywyRUFBa0I7QUFDbEQsbUNBQW1DLG1CQUFPLENBQUMsaUVBQWE7QUFDeEQsa0JBQWtCLG1CQUFPLENBQUMsK0RBQVk7QUFDdEMsaUJBQWlCLG1CQUFPLENBQUMsdUVBQWdCO0FBQ3pDLDZCQUE2QixtQkFBTyxDQUFDLDZFQUFrQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFVBQVU7QUFDekIsWUFBWSxVQUFVO0FBQ3RCLElBQUk7QUFDSiwwQ0FBMEMsbUJBQW1CO0FBQzdEO0FBQ0EsSUFBSTtBQUNKLHNDQUFzQyx3QkFBd0I7QUFDOUQ7QUFDQSxJQUFJO0FBQ0osdUNBQXVDLHlCQUF5QjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThEO0FBQzlELHlCQUF5QjtBQUN6QjtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsSUFBSTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRDtBQUN0RCxpQkFBaUI7QUFDakI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixrQkFBa0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGdDQUFnQztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUdBQWlHLE9BQU8sZUFBZSxRQUFRO0FBQy9IO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxvQkFBb0I7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsaUJBQWlCLGNBQWM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDhCQUE4QjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGNBQWM7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsiL1VzZXJzL25lem9iZW5hcmRpL0FJX3N0dWZmL09uYm9hcmRpbmdQb3J0YWwvbm9kZV9tb2R1bGVzL2pzZm9yY2UvbGliL2FwaS9idWxrLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CdWxrID0gZXhwb3J0cy5CYXRjaCA9IGV4cG9ydHMuSm9iID0gdm9pZCAwO1xuLyoqXG4gKiBAZmlsZSBNYW5hZ2VzIFNhbGVzZm9yY2UgQnVsayBBUEkgcmVsYXRlZCBvcGVyYXRpb25zXG4gKiBAYXV0aG9yIFNoaW5pY2hpIFRvbWl0YSA8c2hpbmljaGkudG9taXRhQGdtYWlsLmNvbT5cbiAqL1xuY29uc3QgZXZlbnRzXzEgPSByZXF1aXJlKFwiZXZlbnRzXCIpO1xuY29uc3Qgc3RyZWFtXzEgPSByZXF1aXJlKFwic3RyZWFtXCIpO1xuY29uc3QgbXVsdGlzdHJlYW1fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwibXVsdGlzdHJlYW1cIikpO1xuY29uc3QgcmVjb3JkX3N0cmVhbV8xID0gcmVxdWlyZShcIi4uL3JlY29yZC1zdHJlYW1cIik7XG5jb25zdCBodHRwX2FwaV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9odHRwLWFwaVwiKSk7XG5jb25zdCBqc2ZvcmNlXzEgPSByZXF1aXJlKFwiLi4vanNmb3JjZVwiKTtcbmNvbnN0IHN0cmVhbV8yID0gcmVxdWlyZShcIi4uL3V0aWwvc3RyZWFtXCIpO1xuY29uc3QgaXNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiQHNpbmRyZXNvcmh1cy9pc1wiKSk7XG4vKipcbiAqIENsYXNzIGZvciBCdWxrIEFQSSBKb2JcbiAqL1xuY2xhc3MgSm9iIGV4dGVuZHMgZXZlbnRzXzEuRXZlbnRFbWl0dGVyIHtcbiAgICB0eXBlO1xuICAgIG9wZXJhdGlvbjtcbiAgICBvcHRpb25zO1xuICAgIGlkO1xuICAgIHN0YXRlO1xuICAgIF9idWxrO1xuICAgIF9iYXRjaGVzO1xuICAgIF9qb2JJbmZvO1xuICAgIF9lcnJvcjtcbiAgICAvKipcbiAgICAgKlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGJ1bGssIHR5cGUsIG9wZXJhdGlvbiwgb3B0aW9ucywgam9iSWQpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5fYnVsayA9IGJ1bGs7XG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgICAgIHRoaXMub3BlcmF0aW9uID0gb3BlcmF0aW9uO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgICAgICB0aGlzLmlkID0gam9iSWQgPz8gbnVsbDtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMuaWQgPyAnT3BlbicgOiAnVW5rbm93bic7XG4gICAgICAgIHRoaXMuX2JhdGNoZXMgPSB7fTtcbiAgICAgICAgLy8gZGVmYXVsdCBlcnJvciBoYW5kbGVyIHRvIGtlZXAgdGhlIGxhdGVzdCBlcnJvclxuICAgICAgICB0aGlzLm9uKCdlcnJvcicsIChlcnJvcikgPT4gKHRoaXMuX2Vycm9yID0gZXJyb3IpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJuIGxhdGVzdCBqb2JJbmZvIGZyb20gY2FjaGVcbiAgICAgKi9cbiAgICBpbmZvKCkge1xuICAgICAgICAvLyBpZiBjYWNoZSBpcyBub3QgYXZhaWxhYmxlLCBjaGVjayB0aGUgbGF0ZXN0XG4gICAgICAgIGlmICghdGhpcy5fam9iSW5mbykge1xuICAgICAgICAgICAgdGhpcy5fam9iSW5mbyA9IHRoaXMuY2hlY2soKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fam9iSW5mbztcbiAgICB9XG4gICAgLyoqXG4gICAgICogT3BlbiBuZXcgam9iIGFuZCBnZXQgam9iaW5mb1xuICAgICAqL1xuICAgIG9wZW4oKSB7XG4gICAgICAgIGNvbnN0IGJ1bGsgPSB0aGlzLl9idWxrO1xuICAgICAgICBjb25zdCBvcHRpb25zID0gdGhpcy5vcHRpb25zO1xuICAgICAgICAvLyBpZiBzb2JqZWN0IHR5cGUgLyBvcGVyYXRpb24gaXMgbm90IHByb3ZpZGVkXG4gICAgICAgIGlmICghdGhpcy50eXBlIHx8ICF0aGlzLm9wZXJhdGlvbikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd0eXBlIC8gb3BlcmF0aW9uIGlzIHJlcXVpcmVkIHRvIG9wZW4gYSBuZXcgam9iJyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gaWYgbm90IHJlcXVlc3RlZCBvcGVuaW5nIGpvYlxuICAgICAgICBpZiAoIXRoaXMuX2pvYkluZm8pIHtcbiAgICAgICAgICAgIGxldCBvcGVyYXRpb24gPSB0aGlzLm9wZXJhdGlvbi50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgaWYgKG9wZXJhdGlvbiA9PT0gJ2hhcmRkZWxldGUnKSB7XG4gICAgICAgICAgICAgICAgb3BlcmF0aW9uID0gJ2hhcmREZWxldGUnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG9wZXJhdGlvbiA9PT0gJ3F1ZXJ5YWxsJykge1xuICAgICAgICAgICAgICAgIG9wZXJhdGlvbiA9ICdxdWVyeUFsbCc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBib2R5ID0gYFxuPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+XG48am9iSW5mbyAgeG1sbnM9XCJodHRwOi8vd3d3LmZvcmNlLmNvbS8yMDA5LzA2L2FzeW5jYXBpL2RhdGFsb2FkXCI+XG4gIDxvcGVyYXRpb24+JHtvcGVyYXRpb259PC9vcGVyYXRpb24+XG4gIDxvYmplY3Q+JHt0aGlzLnR5cGV9PC9vYmplY3Q+XG4gICR7b3B0aW9ucy5leHRJZEZpZWxkXG4gICAgICAgICAgICAgICAgPyBgPGV4dGVybmFsSWRGaWVsZE5hbWU+JHtvcHRpb25zLmV4dElkRmllbGR9PC9leHRlcm5hbElkRmllbGROYW1lPmBcbiAgICAgICAgICAgICAgICA6ICcnfVxuICAke29wdGlvbnMuY29uY3VycmVuY3lNb2RlXG4gICAgICAgICAgICAgICAgPyBgPGNvbmN1cnJlbmN5TW9kZT4ke29wdGlvbnMuY29uY3VycmVuY3lNb2RlfTwvY29uY3VycmVuY3lNb2RlPmBcbiAgICAgICAgICAgICAgICA6ICcnfVxuICAke29wdGlvbnMuYXNzaWdubWVudFJ1bGVJZFxuICAgICAgICAgICAgICAgID8gYDxhc3NpZ25tZW50UnVsZUlkPiR7b3B0aW9ucy5hc3NpZ25tZW50UnVsZUlkfTwvYXNzaWdubWVudFJ1bGVJZD5gXG4gICAgICAgICAgICAgICAgOiAnJ31cbiAgPGNvbnRlbnRUeXBlPkNTVjwvY29udGVudFR5cGU+XG48L2pvYkluZm8+XG4gICAgICBgLnRyaW0oKTtcbiAgICAgICAgICAgIHRoaXMuX2pvYkluZm8gPSAoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGJ1bGsuX3JlcXVlc3Qoe1xuICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXRoOiAnL2pvYicsXG4gICAgICAgICAgICAgICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veG1sOyBjaGFyc2V0PXV0Zi04JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZVR5cGU6ICdhcHBsaWNhdGlvbi94bWwnLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbWl0KCdvcGVuJywgcmVzLmpvYkluZm8pO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmlkID0gcmVzLmpvYkluZm8uaWQ7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUgPSByZXMuam9iSW5mby5zdGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qb2JJbmZvO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZW1pdCgnZXJyb3InLCBlcnIpO1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fam9iSW5mbztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGJhdGNoIGluc3RhbmNlIGluIHRoZSBqb2JcbiAgICAgKi9cbiAgICBjcmVhdGVCYXRjaCgpIHtcbiAgICAgICAgY29uc3QgYmF0Y2ggPSBuZXcgQmF0Y2godGhpcyk7XG4gICAgICAgIGJhdGNoLm9uKCdxdWV1ZScsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2JhdGNoZXNbYmF0Y2guaWRdID0gYmF0Y2g7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gYmF0Y2g7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBhIGJhdGNoIGluc3RhbmNlIHNwZWNpZmllZCBieSBnaXZlbiBiYXRjaCBJRFxuICAgICAqL1xuICAgIGJhdGNoKGJhdGNoSWQpIHtcbiAgICAgICAgbGV0IGJhdGNoID0gdGhpcy5fYmF0Y2hlc1tiYXRjaElkXTtcbiAgICAgICAgaWYgKCFiYXRjaCkge1xuICAgICAgICAgICAgYmF0Y2ggPSBuZXcgQmF0Y2godGhpcywgYmF0Y2hJZCk7XG4gICAgICAgICAgICB0aGlzLl9iYXRjaGVzW2JhdGNoSWRdID0gYmF0Y2g7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJhdGNoO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGVjayB0aGUgbGF0ZXN0IGpvYiBzdGF0dXMgZnJvbSBzZXJ2ZXJcbiAgICAgKi9cbiAgICBjaGVjaygpIHtcbiAgICAgICAgY29uc3QgYnVsayA9IHRoaXMuX2J1bGs7XG4gICAgICAgIGNvbnN0IGxvZ2dlciA9IGJ1bGsuX2xvZ2dlcjtcbiAgICAgICAgdGhpcy5fam9iSW5mbyA9IChhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBqb2JJZCA9IGF3YWl0IHRoaXMucmVhZHkoKTtcbiAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGJ1bGsuX3JlcXVlc3Qoe1xuICAgICAgICAgICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgICAgICAgICAgcGF0aDogJy9qb2IvJyArIGpvYklkLFxuICAgICAgICAgICAgICAgIHJlc3BvbnNlVHlwZTogJ2FwcGxpY2F0aW9uL3htbCcsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGxvZ2dlci5kZWJ1ZyhyZXMuam9iSW5mbyk7XG4gICAgICAgICAgICB0aGlzLmlkID0gcmVzLmpvYkluZm8uaWQ7XG4gICAgICAgICAgICB0aGlzLnR5cGUgPSByZXMuam9iSW5mby5vYmplY3Q7XG4gICAgICAgICAgICB0aGlzLm9wZXJhdGlvbiA9IHJlcy5qb2JJbmZvLm9wZXJhdGlvbjtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSByZXMuam9iSW5mby5zdGF0ZTtcbiAgICAgICAgICAgIHJldHVybiByZXMuam9iSW5mbztcbiAgICAgICAgfSkoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2pvYkluZm87XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdhaXQgdGlsbCB0aGUgam9iIGlzIGFzc2lnbmVkIHRvIHNlcnZlclxuICAgICAqL1xuICAgIHJlYWR5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pZFxuICAgICAgICAgICAgPyBQcm9taXNlLnJlc29sdmUodGhpcy5pZClcbiAgICAgICAgICAgIDogdGhpcy5vcGVuKCkudGhlbigoeyBpZCB9KSA9PiBpZCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3QgYWxsIHJlZ2lzdGVyZWQgYmF0Y2ggaW5mbyBpbiBqb2JcbiAgICAgKi9cbiAgICBhc3luYyBsaXN0KCkge1xuICAgICAgICBjb25zdCBidWxrID0gdGhpcy5fYnVsaztcbiAgICAgICAgY29uc3QgbG9nZ2VyID0gYnVsay5fbG9nZ2VyO1xuICAgICAgICBjb25zdCBqb2JJZCA9IGF3YWl0IHRoaXMucmVhZHkoKTtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgYnVsay5fcmVxdWVzdCh7XG4gICAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICAgICAgcGF0aDogJy9qb2IvJyArIGpvYklkICsgJy9iYXRjaCcsXG4gICAgICAgICAgICByZXNwb25zZVR5cGU6ICdhcHBsaWNhdGlvbi94bWwnLFxuICAgICAgICB9KTtcbiAgICAgICAgbG9nZ2VyLmRlYnVnKHJlcy5iYXRjaEluZm9MaXN0LmJhdGNoSW5mbyk7XG4gICAgICAgIGNvbnN0IGJhdGNoSW5mb0xpc3QgPSBBcnJheS5pc0FycmF5KHJlcy5iYXRjaEluZm9MaXN0LmJhdGNoSW5mbylcbiAgICAgICAgICAgID8gcmVzLmJhdGNoSW5mb0xpc3QuYmF0Y2hJbmZvXG4gICAgICAgICAgICA6IFtyZXMuYmF0Y2hJbmZvTGlzdC5iYXRjaEluZm9dO1xuICAgICAgICByZXR1cm4gYmF0Y2hJbmZvTGlzdDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2xvc2Ugb3BlbmVkIGpvYlxuICAgICAqL1xuICAgIGFzeW5jIGNsb3NlKCkge1xuICAgICAgICBpZiAoIXRoaXMuaWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3Qgam9iSW5mbyA9IGF3YWl0IHRoaXMuX2NoYW5nZVN0YXRlKCdDbG9zZWQnKTtcbiAgICAgICAgICAgIHRoaXMuaWQgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5lbWl0KCdjbG9zZScsIGpvYkluZm8pO1xuICAgICAgICAgICAgcmV0dXJuIGpvYkluZm87XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgdGhpcy5lbWl0KCdlcnJvcicsIGVycik7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBzdGF0dXMgdG8gYWJvcnRcbiAgICAgKi9cbiAgICBhc3luYyBhYm9ydCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGpvYkluZm8gPSBhd2FpdCB0aGlzLl9jaGFuZ2VTdGF0ZSgnQWJvcnRlZCcpO1xuICAgICAgICAgICAgdGhpcy5pZCA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmVtaXQoJ2Fib3J0Jywgam9iSW5mbyk7XG4gICAgICAgICAgICByZXR1cm4gam9iSW5mbztcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIGFzeW5jIF9jaGFuZ2VTdGF0ZShzdGF0ZSkge1xuICAgICAgICBjb25zdCBidWxrID0gdGhpcy5fYnVsaztcbiAgICAgICAgY29uc3QgbG9nZ2VyID0gYnVsay5fbG9nZ2VyO1xuICAgICAgICB0aGlzLl9qb2JJbmZvID0gKGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGpvYklkID0gYXdhaXQgdGhpcy5yZWFkeSgpO1xuICAgICAgICAgICAgY29uc3QgYm9keSA9IGAgXG48P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz5cbiAgPGpvYkluZm8geG1sbnM9XCJodHRwOi8vd3d3LmZvcmNlLmNvbS8yMDA5LzA2L2FzeW5jYXBpL2RhdGFsb2FkXCI+XG4gIDxzdGF0ZT4ke3N0YXRlfTwvc3RhdGU+XG48L2pvYkluZm8+XG4gICAgICBgLnRyaW0oKTtcbiAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGJ1bGsuX3JlcXVlc3Qoe1xuICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgICAgIHBhdGg6ICcvam9iLycgKyBqb2JJZCxcbiAgICAgICAgICAgICAgICBib2R5OiBib2R5LFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94bWw7IGNoYXJzZXQ9dXRmLTgnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcmVzcG9uc2VUeXBlOiAnYXBwbGljYXRpb24veG1sJyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbG9nZ2VyLmRlYnVnKHJlcy5qb2JJbmZvKTtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSByZXMuam9iSW5mby5zdGF0ZTtcbiAgICAgICAgICAgIHJldHVybiByZXMuam9iSW5mbztcbiAgICAgICAgfSkoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2pvYkluZm87XG4gICAgfVxufVxuZXhwb3J0cy5Kb2IgPSBKb2I7XG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmNsYXNzIFBvbGxpbmdUaW1lb3V0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgam9iSWQ7XG4gICAgYmF0Y2hJZDtcbiAgICAvKipcbiAgICAgKlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGpvYklkLCBiYXRjaElkKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnUG9sbGluZ1RpbWVvdXQnO1xuICAgICAgICB0aGlzLmpvYklkID0gam9iSWQ7XG4gICAgICAgIHRoaXMuYmF0Y2hJZCA9IGJhdGNoSWQ7XG4gICAgfVxufVxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIEJhdGNoIChleHRlbmRzIFdyaXRhYmxlKVxuICovXG5jbGFzcyBCYXRjaCBleHRlbmRzIHN0cmVhbV8xLldyaXRhYmxlIHtcbiAgICBqb2I7XG4gICAgaWQ7XG4gICAgX2J1bGs7XG4gICAgX3VwbG9hZFN0cmVhbTtcbiAgICBfZG93bmxvYWRTdHJlYW07XG4gICAgX2RhdGFTdHJlYW07XG4gICAgX3Jlc3VsdDtcbiAgICBfZXJyb3I7XG4gICAgLyoqXG4gICAgICpcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihqb2IsIGlkKSB7XG4gICAgICAgIHN1cGVyKHsgb2JqZWN0TW9kZTogdHJ1ZSB9KTtcbiAgICAgICAgdGhpcy5qb2IgPSBqb2I7XG4gICAgICAgIHRoaXMuaWQgPSBpZDtcbiAgICAgICAgdGhpcy5fYnVsayA9IGpvYi5fYnVsaztcbiAgICAgICAgLy8gZGVmYXVsdCBlcnJvciBoYW5kbGVyIHRvIGtlZXAgdGhlIGxhdGVzdCBlcnJvclxuICAgICAgICB0aGlzLm9uKCdlcnJvcicsIChlcnJvcikgPT4gKHRoaXMuX2Vycm9yID0gZXJyb3IpKTtcbiAgICAgICAgLy9cbiAgICAgICAgLy8gc2V0dXAgZGF0YSBzdHJlYW1zXG4gICAgICAgIC8vXG4gICAgICAgIGNvbnN0IGNvbnZlcnRlck9wdGlvbnMgPSB7IG51bGxWYWx1ZTogJyNOL0EnIH07XG4gICAgICAgIGNvbnN0IHVwbG9hZFN0cmVhbSA9ICh0aGlzLl91cGxvYWRTdHJlYW0gPSBuZXcgcmVjb3JkX3N0cmVhbV8xLlNlcmlhbGl6YWJsZSgpKTtcbiAgICAgICAgY29uc3QgdXBsb2FkRGF0YVN0cmVhbSA9IHVwbG9hZFN0cmVhbS5zdHJlYW0oJ2NzdicsIGNvbnZlcnRlck9wdGlvbnMpO1xuICAgICAgICBjb25zdCBkb3dubG9hZFN0cmVhbSA9ICh0aGlzLl9kb3dubG9hZFN0cmVhbSA9IG5ldyByZWNvcmRfc3RyZWFtXzEuUGFyc2FibGUoKSk7XG4gICAgICAgIGNvbnN0IGRvd25sb2FkRGF0YVN0cmVhbSA9IGRvd25sb2FkU3RyZWFtLnN0cmVhbSgnY3N2JywgY29udmVydGVyT3B0aW9ucyk7XG4gICAgICAgIHRoaXMub24oJ2ZpbmlzaCcsICgpID0+IHVwbG9hZFN0cmVhbS5lbmQoKSk7XG4gICAgICAgIHVwbG9hZERhdGFTdHJlYW0ub25jZSgncmVhZGFibGUnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIC8vIGVuc3VyZSB0aGUgam9iIGlzIG9wZW5lZCBpbiBzZXJ2ZXIgb3Igam9iIGlkIGlzIGFscmVhZHkgYXNzaWduZWRcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmpvYi5yZWFkeSgpO1xuICAgICAgICAgICAgICAgIC8vIHBpcGUgdXBsb2FkIGRhdGEgdG8gYmF0Y2ggQVBJIHJlcXVlc3Qgc3RyZWFtXG4gICAgICAgICAgICAgICAgdXBsb2FkRGF0YVN0cmVhbS5waXBlKHRoaXMuX2NyZWF0ZVJlcXVlc3RTdHJlYW0oKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5lbWl0KCdlcnJvcicsIGVycik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBkdXBsZXggZGF0YSBzdHJlYW0sIG9wZW5lZCBhY2Nlc3MgdG8gQVBJIHByb2dyYW1tZXJzIGJ5IEJhdGNoI3N0cmVhbSgpXG4gICAgICAgIHRoaXMuX2RhdGFTdHJlYW0gPSAoMCwgc3RyZWFtXzIuY29uY2F0U3RyZWFtc0FzRHVwbGV4KSh1cGxvYWREYXRhU3RyZWFtLCBkb3dubG9hZERhdGFTdHJlYW0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb25uZWN0IGJhdGNoIEFQSSBhbmQgY3JlYXRlIHN0cmVhbSBpbnN0YW5jZSBvZiByZXF1ZXN0L3Jlc3BvbnNlXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIF9jcmVhdGVSZXF1ZXN0U3RyZWFtKCkge1xuICAgICAgICBjb25zdCBidWxrID0gdGhpcy5fYnVsaztcbiAgICAgICAgY29uc3QgbG9nZ2VyID0gYnVsay5fbG9nZ2VyO1xuICAgICAgICBjb25zdCByZXEgPSBidWxrLl9yZXF1ZXN0KHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgcGF0aDogJy9qb2IvJyArIHRoaXMuam9iLmlkICsgJy9iYXRjaCcsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICd0ZXh0L2NzdicsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVzcG9uc2VUeXBlOiAnYXBwbGljYXRpb24veG1sJyxcbiAgICAgICAgfSk7XG4gICAgICAgIChhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHJlcTtcbiAgICAgICAgICAgICAgICBsb2dnZXIuZGVidWcocmVzLmJhdGNoSW5mbyk7XG4gICAgICAgICAgICAgICAgdGhpcy5pZCA9IHJlcy5iYXRjaEluZm8uaWQ7XG4gICAgICAgICAgICAgICAgdGhpcy5lbWl0KCdxdWV1ZScsIHJlcy5iYXRjaEluZm8pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIHRoaXMuZW1pdCgnZXJyb3InLCBlcnIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KSgpO1xuICAgICAgICByZXR1cm4gcmVxLnN0cmVhbSgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBJbXBsZW1lbnRhdGlvbiBvZiBXcml0YWJsZVxuICAgICAqL1xuICAgIF93cml0ZShyZWNvcmRfLCBlbmMsIGNiKSB7XG4gICAgICAgIGNvbnN0IHsgSWQsIHR5cGUsIGF0dHJpYnV0ZXMsIC4uLnJyZWMgfSA9IHJlY29yZF87XG4gICAgICAgIGxldCByZWNvcmQ7XG4gICAgICAgIHN3aXRjaCAodGhpcy5qb2Iub3BlcmF0aW9uKSB7XG4gICAgICAgICAgICBjYXNlICdpbnNlcnQnOlxuICAgICAgICAgICAgICAgIHJlY29yZCA9IHJyZWM7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdkZWxldGUnOlxuICAgICAgICAgICAgY2FzZSAnaGFyZERlbGV0ZSc6XG4gICAgICAgICAgICAgICAgcmVjb3JkID0geyBJZCB9O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZWNvcmQgPSB7IElkLCAuLi5ycmVjIH07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fdXBsb2FkU3RyZWFtLndyaXRlKHJlY29yZCwgZW5jLCBjYik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgZHVwbGV4IHN0cmVhbSB3aGljaCBhY2NlcHRzIENTViBkYXRhIGlucHV0IGFuZCBiYXRjaCByZXN1bHQgb3V0cHV0XG4gICAgICovXG4gICAgc3RyZWFtKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZGF0YVN0cmVhbTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRXhlY3V0ZSBiYXRjaCBvcGVyYXRpb25cbiAgICAgKi9cbiAgICBleGVjdXRlKGlucHV0KSB7XG4gICAgICAgIC8vIGlmIGJhdGNoIGlzIGFscmVhZHkgZXhlY3V0ZWRcbiAgICAgICAgaWYgKHRoaXMuX3Jlc3VsdCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdCYXRjaCBhbHJlYWR5IGV4ZWN1dGVkLicpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3Jlc3VsdCA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRoaXMub25jZSgncmVzcG9uc2UnLCByZXNvbHZlKTtcbiAgICAgICAgICAgIHRoaXMub25jZSgnZXJyb3InLCByZWplY3QpO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGlzXzEuZGVmYXVsdC5ub2RlU3RyZWFtKGlucHV0KSkge1xuICAgICAgICAgICAgLy8gaWYgaW5wdXQgaGFzIHN0cmVhbS5SZWFkYWJsZSBpbnRlcmZhY2VcbiAgICAgICAgICAgIGlucHV0LnBpcGUodGhpcy5fZGF0YVN0cmVhbSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCByZWNvcmREYXRhID0gc3RydWN0dXJlZENsb25lKGlucHV0KTtcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHJlY29yZERhdGEpKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCByZWNvcmQgb2YgcmVjb3JkRGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhyZWNvcmQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHJlY29yZFtrZXldID09PSAnYm9vbGVhbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWNvcmRba2V5XSA9IFN0cmluZyhyZWNvcmRba2V5XSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy53cml0ZShyZWNvcmQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmVuZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIHJlY29yZERhdGEgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZGF0YVN0cmVhbS53cml0ZShyZWNvcmREYXRhLCAndXRmOCcpO1xuICAgICAgICAgICAgICAgIHRoaXMuX2RhdGFTdHJlYW0uZW5kKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gcmV0dXJuIEJhdGNoIGluc3RhbmNlIGZvciBjaGFpbmluZ1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgcnVuID0gdGhpcy5leGVjdXRlO1xuICAgIGV4ZWMgPSB0aGlzLmV4ZWN1dGU7XG4gICAgLyoqXG4gICAgICogUHJvbWlzZS9BKyBpbnRlcmZhY2VcbiAgICAgKiBEZWxlZ2F0ZSB0byBwcm9taXNlLCByZXR1cm4gcHJvbWlzZSBpbnN0YW5jZSBmb3IgYmF0Y2ggcmVzdWx0XG4gICAgICovXG4gICAgdGhlbihvblJlc29sdmVkLCBvblJlamVjdCkge1xuICAgICAgICBpZiAoIXRoaXMuX3Jlc3VsdCkge1xuICAgICAgICAgICAgdGhpcy5leGVjdXRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3Jlc3VsdC50aGVuKG9uUmVzb2x2ZWQsIG9uUmVqZWN0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hlY2sgdGhlIGxhdGVzdCBiYXRjaCBzdGF0dXMgaW4gc2VydmVyXG4gICAgICovXG4gICAgYXN5bmMgY2hlY2soKSB7XG4gICAgICAgIGNvbnN0IGJ1bGsgPSB0aGlzLl9idWxrO1xuICAgICAgICBjb25zdCBsb2dnZXIgPSBidWxrLl9sb2dnZXI7XG4gICAgICAgIGNvbnN0IGpvYklkID0gdGhpcy5qb2IuaWQ7XG4gICAgICAgIGNvbnN0IGJhdGNoSWQgPSB0aGlzLmlkO1xuICAgICAgICBpZiAoIWpvYklkIHx8ICFiYXRjaElkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0JhdGNoIG5vdCBzdGFydGVkLicpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGJ1bGsuX3JlcXVlc3Qoe1xuICAgICAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgICAgIHBhdGg6ICcvam9iLycgKyBqb2JJZCArICcvYmF0Y2gvJyArIGJhdGNoSWQsXG4gICAgICAgICAgICByZXNwb25zZVR5cGU6ICdhcHBsaWNhdGlvbi94bWwnLFxuICAgICAgICB9KTtcbiAgICAgICAgbG9nZ2VyLmRlYnVnKHJlcy5iYXRjaEluZm8pO1xuICAgICAgICByZXR1cm4gcmVzLmJhdGNoSW5mbztcbiAgICB9XG4gICAgLyoqXG4gICAgICogUG9sbGluZyB0aGUgYmF0Y2ggcmVzdWx0IGFuZCByZXRyaWV2ZVxuICAgICAqL1xuICAgIHBvbGwoaW50ZXJ2YWwsIHRpbWVvdXQpIHtcbiAgICAgICAgY29uc3Qgam9iSWQgPSB0aGlzLmpvYi5pZDtcbiAgICAgICAgY29uc3QgYmF0Y2hJZCA9IHRoaXMuaWQ7XG4gICAgICAgIGlmICgham9iSWQgfHwgIWJhdGNoSWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQmF0Y2ggbm90IHN0YXJ0ZWQuJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc3RhcnRUaW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgICAgIGNvbnN0IGVuZFRpbWUgPSBzdGFydFRpbWUgKyB0aW1lb3V0O1xuICAgICAgICBpZiAodGltZW91dCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFBvbGxpbmdUaW1lb3V0RXJyb3IoYFNraXBwaW5nIHBvbGxpbmcgYmVjYXVzZSBvZiB0aW1lb3V0ID0gMG1zLiBKb2IgSWQgPSAke2pvYklkfSB8IEJhdGNoIElkID0gJHtiYXRjaElkfWAsIGpvYklkLCBiYXRjaElkKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwb2xsID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgICAgICAgICBpZiAoZW5kVGltZSA8IG5vdykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGVyciA9IG5ldyBQb2xsaW5nVGltZW91dEVycm9yKCdQb2xsaW5nIHRpbWUgb3V0LiBKb2IgSWQgPSAnICsgam9iSWQgKyAnICwgYmF0Y2ggSWQgPSAnICsgYmF0Y2hJZCwgam9iSWQsIGJhdGNoSWQpO1xuICAgICAgICAgICAgICAgIHRoaXMuZW1pdCgnZXJyb3InLCBlcnIpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCByZXM7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJlcyA9IGF3YWl0IHRoaXMuY2hlY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocmVzLnN0YXRlID09PSAnRmFpbGVkJykge1xuICAgICAgICAgICAgICAgIGlmIChwYXJzZUludChyZXMubnVtYmVyUmVjb3Jkc1Byb2Nlc3NlZCwgMTApID4gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJldHJpZXZlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmVtaXQoJ2Vycm9yJywgbmV3IEVycm9yKHJlcy5zdGF0ZU1lc3NhZ2UpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChyZXMuc3RhdGUgPT09ICdDb21wbGV0ZWQnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZXRyaWV2ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocmVzLnN0YXRlID09PSAnTm90UHJvY2Vzc2VkJykge1xuICAgICAgICAgICAgICAgIHRoaXMuZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IoJ0pvYiBoYXMgYmVlbiBhYm9ydGVkJykpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5lbWl0KCdpblByb2dyZXNzJywgcmVzKTtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KHBvbGwsIGludGVydmFsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgc2V0VGltZW91dChwb2xsLCBpbnRlcnZhbCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIGJhdGNoIHJlc3VsdFxuICAgICAqL1xuICAgIGFzeW5jIHJldHJpZXZlKCkge1xuICAgICAgICBjb25zdCBidWxrID0gdGhpcy5fYnVsaztcbiAgICAgICAgY29uc3Qgam9iSWQgPSB0aGlzLmpvYi5pZDtcbiAgICAgICAgY29uc3Qgam9iID0gdGhpcy5qb2I7XG4gICAgICAgIGNvbnN0IGJhdGNoSWQgPSB0aGlzLmlkO1xuICAgICAgICBpZiAoIWpvYklkIHx8ICFiYXRjaElkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0JhdGNoIG5vdCBzdGFydGVkLicpO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXNwID0gYXdhaXQgYnVsay5fcmVxdWVzdCh7XG4gICAgICAgICAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgICAgICAgICBwYXRoOiAnL2pvYi8nICsgam9iSWQgKyAnL2JhdGNoLycgKyBiYXRjaElkICsgJy9yZXN1bHQnLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBsZXQgcmVzdWx0cztcbiAgICAgICAgICAgIGlmIChqb2Iub3BlcmF0aW9uID09PSAncXVlcnknIHx8IGpvYi5vcGVyYXRpb24gPT09ICdxdWVyeUFsbCcpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXMgPSByZXNwO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdElkID0gcmVzWydyZXN1bHQtbGlzdCddLnJlc3VsdDtcbiAgICAgICAgICAgICAgICByZXN1bHRzID0gKEFycmF5LmlzQXJyYXkocmVzdWx0SWQpXG4gICAgICAgICAgICAgICAgICAgID8gcmVzdWx0SWRcbiAgICAgICAgICAgICAgICAgICAgOiBbcmVzdWx0SWRdKS5tYXAoKGlkKSA9PiAoeyBpZCwgYmF0Y2hJZCwgam9iSWQgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzID0gcmVzcDtcbiAgICAgICAgICAgICAgICByZXN1bHRzID0gcmVzLm1hcCgocmV0KSA9PiAoe1xuICAgICAgICAgICAgICAgICAgICBpZDogcmV0LklkIHx8IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IHJldC5TdWNjZXNzID09PSAndHJ1ZScsXG4gICAgICAgICAgICAgICAgICAgIGNyZWF0ZWQ6IHJldC5DcmVhdGVkID09PSAndHJ1ZScsXG4gICAgICAgICAgICAgICAgICAgIGVycm9yczogcmV0LkVycm9yID8gW3JldC5FcnJvcl0gOiBbXSxcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmVtaXQoJ3Jlc3BvbnNlJywgcmVzdWx0cyk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBGZXRjaCBxdWVyeSBiYXRjaCByZXN1bHQgYXMgYSByZWNvcmQgc3RyZWFtXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gcmVzdWx0SWQgLSBSZXN1bHQgaWRcbiAgICAgKiBAcmV0dXJucyB7UmVjb3JkU3RyZWFtfSAtIFJlY29yZCBzdHJlYW0sIGNvbnZlcnRpYmxlIHRvIENTViBkYXRhIHN0cmVhbVxuICAgICAqL1xuICAgIHJlc3VsdChyZXN1bHRJZCkge1xuICAgICAgICBjb25zdCBqb2JJZCA9IHRoaXMuam9iLmlkO1xuICAgICAgICBjb25zdCBiYXRjaElkID0gdGhpcy5pZDtcbiAgICAgICAgaWYgKCFqb2JJZCB8fCAhYmF0Y2hJZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdCYXRjaCBub3Qgc3RhcnRlZC4nKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXN1bHRTdHJlYW0gPSBuZXcgcmVjb3JkX3N0cmVhbV8xLlBhcnNhYmxlKCk7XG4gICAgICAgIGNvbnN0IHJlc3VsdERhdGFTdHJlYW0gPSByZXN1bHRTdHJlYW0uc3RyZWFtKCdjc3YnKTtcbiAgICAgICAgdGhpcy5fYnVsa1xuICAgICAgICAgICAgLl9yZXF1ZXN0KHtcbiAgICAgICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgICAgICBwYXRoOiAnL2pvYi8nICsgam9iSWQgKyAnL2JhdGNoLycgKyBiYXRjaElkICsgJy9yZXN1bHQvJyArIHJlc3VsdElkLFxuICAgICAgICAgICAgcmVzcG9uc2VUeXBlOiAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJyxcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5zdHJlYW0oKVxuICAgICAgICAgICAgLnBpcGUocmVzdWx0RGF0YVN0cmVhbSk7XG4gICAgICAgIHJldHVybiByZXN1bHRTdHJlYW07XG4gICAgfVxufVxuZXhwb3J0cy5CYXRjaCA9IEJhdGNoO1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqXG4gKi9cbmNsYXNzIEJ1bGtBcGkgZXh0ZW5kcyBodHRwX2FwaV8xLmRlZmF1bHQge1xuICAgIGJlZm9yZVNlbmQocmVxdWVzdCkge1xuICAgICAgICByZXF1ZXN0LmhlYWRlcnMgPSB7XG4gICAgICAgICAgICAuLi5yZXF1ZXN0LmhlYWRlcnMsXG4gICAgICAgICAgICAnWC1TRkRDLVNFU1NJT04nOiB0aGlzLl9jb25uLmFjY2Vzc1Rva2VuID8/ICcnLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpc1Nlc3Npb25FeHBpcmVkKHJlc3BvbnNlKSB7XG4gICAgICAgIHJldHVybiAocmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gNDAwICYmXG4gICAgICAgICAgICByZXNwb25zZS5ib2R5LmluY2x1ZGVzKCc8ZXhjZXB0aW9uQ29kZT5JbnZhbGlkU2Vzc2lvbklkPC9leGNlcHRpb25Db2RlPicpKTtcbiAgICB9XG4gICAgaGFzRXJyb3JJblJlc3BvbnNlQm9keShib2R5KSB7XG4gICAgICAgIHJldHVybiAhIWJvZHkuZXJyb3I7XG4gICAgfVxuICAgIHBhcnNlRXJyb3IoYm9keSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZXJyb3JDb2RlOiBib2R5LmVycm9yLmV4Y2VwdGlvbkNvZGUsXG4gICAgICAgICAgICBtZXNzYWdlOiBib2R5LmVycm9yLmV4Y2VwdGlvbk1lc3NhZ2UsXG4gICAgICAgIH07XG4gICAgfVxufVxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIENsYXNzIGZvciBCdWxrIEFQSVxuICpcbiAqIEBjbGFzc1xuICovXG5jbGFzcyBCdWxrIHtcbiAgICBfY29ubjtcbiAgICBfbG9nZ2VyO1xuICAgIC8qKlxuICAgICAqIFBvbGxpbmcgaW50ZXJ2YWwgaW4gbWlsbGlzZWNvbmRzXG4gICAgICpcbiAgICAgKiBEZWZhdWx0OiAxMDAwICgxIHNlY29uZClcbiAgICAgKi9cbiAgICBwb2xsSW50ZXJ2YWwgPSAxMDAwO1xuICAgIC8qKlxuICAgICAqIFBvbGxpbmcgdGltZW91dCBpbiBtaWxsaXNlY29uZHNcbiAgICAgKlxuICAgICAqIERlZmF1bHQ6IDMwMDAwICgzMCBzZWNvbmRzKVxuICAgICAqL1xuICAgIHBvbGxUaW1lb3V0ID0gMzAwMDA7XG4gICAgLyoqXG4gICAgICpcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb25uKSB7XG4gICAgICAgIHRoaXMuX2Nvbm4gPSBjb25uO1xuICAgICAgICB0aGlzLl9sb2dnZXIgPSBjb25uLl9sb2dnZXI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqXG4gICAgICovXG4gICAgX3JlcXVlc3QocmVxdWVzdF8pIHtcbiAgICAgICAgY29uc3QgY29ubiA9IHRoaXMuX2Nvbm47XG4gICAgICAgIGNvbnN0IHsgcGF0aCwgcmVzcG9uc2VUeXBlLCAuLi5ycmVxIH0gPSByZXF1ZXN0XztcbiAgICAgICAgY29uc3QgYmFzZVVybCA9IFtjb25uLmluc3RhbmNlVXJsLCAnc2VydmljZXMvYXN5bmMnLCBjb25uLnZlcnNpb25dLmpvaW4oJy8nKTtcbiAgICAgICAgY29uc3QgcmVxdWVzdCA9IHtcbiAgICAgICAgICAgIC4uLnJyZXEsXG4gICAgICAgICAgICB1cmw6IGJhc2VVcmwgKyBwYXRoLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gbmV3IEJ1bGtBcGkodGhpcy5fY29ubiwgeyByZXNwb25zZVR5cGUgfSkucmVxdWVzdChyZXF1ZXN0KTtcbiAgICB9XG4gICAgbG9hZCh0eXBlLCBvcGVyYXRpb24sIG9wdGlvbnNPcklucHV0LCBpbnB1dCkge1xuICAgICAgICBsZXQgb3B0aW9ucyA9IHt9O1xuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnNPcklucHV0ID09PSAnc3RyaW5nJyB8fFxuICAgICAgICAgICAgQXJyYXkuaXNBcnJheShvcHRpb25zT3JJbnB1dCkgfHxcbiAgICAgICAgICAgIGlzXzEuZGVmYXVsdC5ub2RlU3RyZWFtKG9wdGlvbnNPcklucHV0KSkge1xuICAgICAgICAgICAgLy8gd2hlbiBvcHRpb25zIGlzIG5vdCBwbGFpbiBoYXNoIG9iamVjdCwgaXQgaXMgb21pdHRlZFxuICAgICAgICAgICAgaW5wdXQgPSBvcHRpb25zT3JJbnB1dDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG9wdGlvbnMgPSBvcHRpb25zT3JJbnB1dDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBqb2IgPSB0aGlzLmNyZWF0ZUpvYih0eXBlLCBvcGVyYXRpb24sIG9wdGlvbnMpO1xuICAgICAgICBjb25zdCBiYXRjaCA9IGpvYi5jcmVhdGVCYXRjaCgpO1xuICAgICAgICBjb25zdCBjbGVhbnVwID0gKCkgPT4gam9iLmNsb3NlKCk7XG4gICAgICAgIGNvbnN0IGNsZWFudXBPbkVycm9yID0gKGVycikgPT4ge1xuICAgICAgICAgICAgaWYgKGVyci5uYW1lICE9PSAnUG9sbGluZ1RpbWVvdXQnKSB7XG4gICAgICAgICAgICAgICAgY2xlYW51cCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICBiYXRjaC5vbigncmVzcG9uc2UnLCBjbGVhbnVwKTtcbiAgICAgICAgYmF0Y2gub24oJ2Vycm9yJywgY2xlYW51cE9uRXJyb3IpO1xuICAgICAgICBiYXRjaC5vbigncXVldWUnLCAoKSA9PiB7XG4gICAgICAgICAgICBiYXRjaD8ucG9sbCh0aGlzLnBvbGxJbnRlcnZhbCwgdGhpcy5wb2xsVGltZW91dCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gYmF0Y2guZXhlY3V0ZShpbnB1dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEV4ZWN1dGUgYnVsayBxdWVyeSBhbmQgZ2V0IHJlY29yZCBzdHJlYW1cbiAgICAgKi9cbiAgICBhc3luYyBxdWVyeShzb3FsKSB7XG4gICAgICAgIGNvbnN0IG0gPSBzb3FsLnJlcGxhY2UoL1xcKFtcXHNcXFNdK1xcKS9nLCAnJykubWF0Y2goL0ZST01cXHMrKFxcdyspL2kpO1xuICAgICAgICBpZiAoIW0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gc29iamVjdCB0eXBlIGZvdW5kIGluIHF1ZXJ5LCBtYXliZSBjYXVzZWQgYnkgaW52YWxpZCBTT1FMLicpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHR5cGUgPSBtWzFdO1xuICAgICAgICBjb25zdCByZWNvcmRTdHJlYW0gPSBuZXcgcmVjb3JkX3N0cmVhbV8xLlBhcnNhYmxlKCk7XG4gICAgICAgIGNvbnN0IGRhdGFTdHJlYW0gPSByZWNvcmRTdHJlYW0uc3RyZWFtKCdjc3YnKTtcbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IHRoaXMubG9hZCh0eXBlLCAncXVlcnknLCBzb3FsKTtcbiAgICAgICAgY29uc3Qgc3RyZWFtcyA9IHJlc3VsdHMubWFwKChyZXN1bHQpID0+IHRoaXMuam9iKHJlc3VsdC5qb2JJZCkuYmF0Y2gocmVzdWx0LmJhdGNoSWQpLnJlc3VsdChyZXN1bHQuaWQpLnN0cmVhbSgpKTtcbiAgICAgICAgKDAsIG11bHRpc3RyZWFtXzEuZGVmYXVsdCkoc3RyZWFtcykucGlwZShkYXRhU3RyZWFtKTtcbiAgICAgICAgcmV0dXJuIHJlY29yZFN0cmVhbTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGpvYiBpbnN0YW5jZVxuICAgICAqL1xuICAgIGNyZWF0ZUpvYih0eXBlLCBvcGVyYXRpb24sIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gbmV3IEpvYih0aGlzLCB0eXBlLCBvcGVyYXRpb24sIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYSBqb2IgaW5zdGFuY2Ugc3BlY2lmaWVkIGJ5IGdpdmVuIGpvYiBJRFxuICAgICAqXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IGpvYklkIC0gSm9iIElEXG4gICAgICogQHJldHVybnMge0J1bGt+Sm9ifVxuICAgICAqL1xuICAgIGpvYihqb2JJZCkge1xuICAgICAgICByZXR1cm4gbmV3IEpvYih0aGlzLCBudWxsLCBudWxsLCBudWxsLCBqb2JJZCk7XG4gICAgfVxufVxuZXhwb3J0cy5CdWxrID0gQnVsaztcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLypcbiAqIFJlZ2lzdGVyIGhvb2sgaW4gY29ubmVjdGlvbiBpbnN0YW50aWF0aW9uIGZvciBkeW5hbWljYWxseSBhZGRpbmcgdGhpcyBBUEkgbW9kdWxlIGZlYXR1cmVzXG4gKi9cbigwLCBqc2ZvcmNlXzEucmVnaXN0ZXJNb2R1bGUpKCdidWxrJywgKGNvbm4pID0+IG5ldyBCdWxrKGNvbm4pKTtcbmV4cG9ydHMuZGVmYXVsdCA9IEJ1bGs7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/api/bulk.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/api/bulk2.js":
/*!***********************************************!*\
  !*** ./node_modules/jsforce/lib/api/bulk2.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IngestJobV2 = exports.QueryJobV2 = exports.BulkV2 = void 0;\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst record_stream_1 = __webpack_require__(/*! ../record-stream */ \"(rsc)/./node_modules/jsforce/lib/record-stream.js\");\nconst http_api_1 = __importDefault(__webpack_require__(/*! ../http-api */ \"(rsc)/./node_modules/jsforce/lib/http-api.js\"));\nconst jsforce_1 = __webpack_require__(/*! ../jsforce */ \"(rsc)/./node_modules/jsforce/lib/jsforce.js\");\nconst logger_1 = __webpack_require__(/*! ../util/logger */ \"(rsc)/./node_modules/jsforce/lib/util/logger.js\");\nconst stream_2 = __webpack_require__(/*! ../util/stream */ \"(rsc)/./node_modules/jsforce/lib/util/stream.js\");\nconst is_1 = __importDefault(__webpack_require__(/*! @sindresorhus/is */ \"(rsc)/./node_modules/@sindresorhus/is/dist/index.js\"));\nclass JobPollingTimeoutError extends Error {\n    jobId;\n    /**\n     *\n     */\n    constructor(message, jobId) {\n        super(message);\n        this.name = 'JobPollingTimeout';\n        this.jobId = jobId;\n    }\n}\nclass BulkApiV2 extends http_api_1.default {\n    hasErrorInResponseBody(body) {\n        return (Array.isArray(body) &&\n            typeof body[0] === 'object' &&\n            'errorCode' in body[0]);\n    }\n    isSessionExpired(response) {\n        return (response.statusCode === 401 &&\n            response.body.includes('INVALID_SESSION_ID'));\n    }\n    parseError(body) {\n        return {\n            errorCode: body[0].errorCode,\n            message: body[0].message,\n        };\n    }\n}\nclass BulkV2 {\n    connection;\n    logger;\n    /**\n     * Polling interval in milliseconds\n     *\n     * Default: 1000 (1 second)\n     */\n    pollInterval = 1000;\n    /**\n     * Polling timeout in milliseconds\n     *\n     * Default: 30000 (30 seconds)\n     */\n    pollTimeout = 30000;\n    constructor(connection) {\n        this.connection = connection;\n        this.logger = this.connection._logLevel\n            ? (0, logger_1.getLogger)('bulk2').createInstance(this.connection._logLevel)\n            : (0, logger_1.getLogger)('bulk2');\n    }\n    /**\n     * Create an instance of an ingest job object.\n     *\n     * @params {NewIngestJobOptions} options object\n     * @returns {IngestJobV2} An ingest job instance\n     * @example\n     * // Upsert records to the Account object.\n     *\n     * const job = connection.bulk2.createJob({\n     *   operation: 'insert'\n     *   object: 'Account',\n     * });\n     *\n     * // create the job in the org\n     * await job.open()\n     *\n     * // upload data\n     * await job.uploadData(csvFile)\n     *\n     * // finished uploading data, mark it as ready for processing\n     * await job.close()\n     */\n    createJob(options) {\n        return new IngestJobV2(this.connection, {\n            bodyParams: options,\n            pollingOptions: this,\n        });\n    }\n    job(type = 'ingest', options) {\n        if (type === 'ingest') {\n            return new IngestJobV2(this.connection, {\n                id: options.id,\n                pollingOptions: this,\n            });\n        }\n        else {\n            return new QueryJobV2(this.connection, {\n                id: options.id,\n                pollingOptions: this,\n            });\n        }\n    }\n    /**\n     * Create, upload, and start bulkload job\n     */\n    async loadAndWaitForResults(options) {\n        if (!options.pollTimeout)\n            options.pollTimeout = this.pollTimeout;\n        if (!options.pollInterval)\n            options.pollInterval = this.pollInterval;\n        const { pollInterval, pollTimeout, input, ...createJobOpts } = options;\n        const job = this.createJob(createJobOpts);\n        try {\n            await job.open();\n            await job.uploadData(input);\n            await job.close();\n            await job.poll(pollInterval, pollTimeout);\n            return await job.getAllResults();\n        }\n        catch (error) {\n            const err = error;\n            this.logger.error(`bulk load failed due to: ${err.message}`);\n            if (err.name !== 'JobPollingTimeoutError') {\n                // fires off one last attempt to clean up and ignores the result | error\n                job.delete().catch((ignored) => ignored);\n            }\n            throw err;\n        }\n    }\n    /**\n     * Execute bulk query and get a record stream.\n     *\n     * Default timeout: 10000ms\n     *\n     * @param soql SOQL query\n     * @param options\n     *\n     * @returns {RecordStream} - Record stream, convertible to a CSV data stream\n     */\n    async query(soql, options) {\n        const queryJob = new QueryJobV2(this.connection, {\n            bodyParams: {\n                query: soql,\n                operation: options?.scanAll ? 'queryAll' : 'query',\n                columnDelimiter: options?.columnDelimiter,\n                lineEnding: options?.lineEnding,\n            },\n            pollingOptions: this,\n        });\n        const recordStream = new record_stream_1.Parsable();\n        const dataStream = recordStream.stream('csv');\n        try {\n            await queryJob.open();\n            await queryJob.poll(options?.pollInterval, options?.pollTimeout);\n            const queryRecordsStream = await queryJob\n                .result()\n                .then((s) => s.stream());\n            queryRecordsStream.pipe(dataStream);\n        }\n        catch (error) {\n            const err = error;\n            this.logger.error(`bulk query failed due to: ${err.message}`);\n            if (err.name !== 'JobPollingTimeoutError') {\n                // fires off one last attempt to clean up and ignores the result | error\n                queryJob.delete().catch((ignored) => ignored);\n            }\n            throw err;\n        }\n        return recordStream;\n    }\n}\nexports.BulkV2 = BulkV2;\nclass QueryJobV2 extends events_1.EventEmitter {\n    connection;\n    logger;\n    _id;\n    bodyParams;\n    pollingOptions;\n    error;\n    jobInfo;\n    locator;\n    constructor(conn, options) {\n        super();\n        this.connection = conn;\n        this.logger = this.connection._logLevel\n            ? (0, logger_1.getLogger)('bulk2:QueryJobV2').createInstance(this.connection._logLevel)\n            : (0, logger_1.getLogger)('bulk2:QueryJobV2');\n        if ('id' in options) {\n            this._id = options.id;\n        }\n        else {\n            this.bodyParams = options.bodyParams;\n        }\n        this.pollingOptions = options.pollingOptions;\n        // default error handler to keep the latest error\n        this.on('error', (error) => (this.error = error));\n    }\n    /**\n     * Get the query job ID.\n     *\n     * @returns {string} query job Id.\n     */\n    get id() {\n        return this.jobInfo ? this.jobInfo.id : this._id;\n    }\n    /**\n     * Get the query job info.\n     *\n     * @returns {Promise<QueryJobInfoV2>} query job information.\n     */\n    getInfo() {\n        if (this.jobInfo) {\n            return this.jobInfo;\n        }\n        throw new Error('No internal job info. Make sure to call `await job.check`.');\n    }\n    /**\n     * Creates a query job\n     *\n     * @returns {Promise<QueryJobInfoV2>} job information.\n     */\n    async open() {\n        if (!this.bodyParams) {\n            throw new Error('Missing required body params to open a new query job.');\n        }\n        try {\n            this.jobInfo = await this.createQueryRequest({\n                method: 'POST',\n                body: JSON.stringify(this.bodyParams),\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8',\n                },\n                responseType: 'application/json',\n            });\n            this.logger.debug(`Successfully created job ${this.id}`);\n            this.emit('open', this.jobInfo);\n        }\n        catch (err) {\n            this.emit('error', err);\n            throw err;\n        }\n        return this.jobInfo;\n    }\n    /**\n     * Abort the job\n     *\n     * The 'aborted' event is emitted when the job successfully aborts.\n     * @returns {Promise<QueryJobInfoV2>} job information.\n     */\n    async abort() {\n        try {\n            const state = 'Aborted';\n            this.jobInfo = await this.createQueryRequest({\n                method: 'PATCH',\n                path: `/${this.id}`,\n                body: JSON.stringify({ state }),\n                headers: { 'Content-Type': 'application/json; charset=utf-8' },\n                responseType: 'application/json',\n            });\n            this.logger.debug(`Successfully aborted job ${this.id}`);\n            return this.jobInfo;\n        }\n        catch (err) {\n            this.emit('error', err);\n            throw err;\n        }\n    }\n    /**\n     * Poll for the state of the processing for the job.\n     *\n     * @param interval Polling interval in milliseconds\n     * @param timeout Polling timeout in milliseconds\n     * @returns {Promise<Record[]>} A promise that resolves when the job finished being processed.\n     */\n    async poll(interval = this.pollingOptions.pollInterval, timeout = this.pollingOptions.pollTimeout) {\n        const jobId = this.id;\n        const startTime = Date.now();\n        const endTime = startTime + timeout;\n        this.logger.debug('Start polling for job status');\n        this.logger.debug(`Polling options: timeout:${timeout}ms | interval: ${interval}ms.`);\n        if (timeout === 0) {\n            throw new JobPollingTimeoutError(`Skipping polling because of timeout = 0ms. Job Id = ${jobId}`, jobId);\n        }\n        while (endTime > Date.now()) {\n            try {\n                const res = await this.check();\n                switch (res.state) {\n                    case 'Aborted':\n                        throw new Error('Job has been aborted');\n                    case 'UploadComplete':\n                    case 'InProgress':\n                        this.emit('inProgress', res);\n                        await delay(interval);\n                        break;\n                    case 'Failed':\n                        // unlike ingest jobs, the API doesn't return an error msg:\n                        // https://developer.salesforce.com/docs/atlas.en-us.api_asynch.meta/api_asynch/query_get_one_job.htm\n                        this.logger.debug(res);\n                        throw new Error('Query job failed to complete');\n                    case 'JobComplete':\n                        this.logger.debug(`Job ${this.id} was successfully processed.`);\n                        this.emit('jobComplete', res);\n                        return;\n                }\n            }\n            catch (err) {\n                this.emit('error', err);\n                throw err;\n            }\n        }\n        const timeoutError = new JobPollingTimeoutError(`Polling timed out after ${timeout}ms. Job Id = ${jobId}`, jobId);\n        this.emit('error', timeoutError);\n        throw timeoutError;\n    }\n    /**\n     * Check the latest job status\n     *\n     * @returns {Promise<QueryJobInfoV2>} job information.\n     */\n    async check() {\n        try {\n            const jobInfo = await this.createQueryRequest({\n                method: 'GET',\n                path: `/${this.id}`,\n                responseType: 'application/json',\n            });\n            this.jobInfo = jobInfo;\n            return jobInfo;\n        }\n        catch (err) {\n            this.emit('error', err);\n            throw err;\n        }\n    }\n    /**\n     * Get the results for a query job as a record stream\n     *\n     * This method assumes the job finished being processed\n     * @returns {RecordStream} - Record stream, convertible to a CSV data stream\n     */\n    async result() {\n        const resultStream = new record_stream_1.Parsable();\n        const resultDataStream = resultStream.stream('csv');\n        const resultsPath = `/${this.id}/results`;\n        while (this.locator !== 'null') {\n            const resPromise = this.createQueryRequest({\n                method: 'GET',\n                path: this.locator\n                    // resultsPath starts with '/'\n                    ? `${resultsPath}?locator=${this.locator}`\n                    : resultsPath,\n                headers: {\n                    Accept: 'text/csv',\n                },\n            });\n            resPromise.stream().pipe(resultDataStream);\n            await resPromise;\n        }\n        return resultStream;\n    }\n    /**\n     * Deletes a query job.\n     */\n    async delete() {\n        return this.createQueryRequest({\n            method: 'DELETE',\n            path: `/${this.id}`,\n        });\n    }\n    createQueryRequest(request) {\n        const { path, responseType } = request;\n        const basePath = `services/data/v${this.connection.version}/jobs/query`;\n        const url = new URL(path ? basePath + path : basePath, this.connection.instanceUrl).toString();\n        const httpApi = new BulkApiV2(this.connection, { responseType });\n        httpApi.on('response', (response) => {\n            this.locator = response.headers['sforce-locator'];\n            this.logger.debug(`sforce-locator: ${this.locator}`);\n        });\n        return httpApi.request({\n            ...request,\n            url,\n        });\n    }\n}\nexports.QueryJobV2 = QueryJobV2;\n/**\n * Class for Bulk API V2 Ingest Job\n */\nclass IngestJobV2 extends events_1.EventEmitter {\n    connection;\n    logger;\n    _id;\n    bodyParams;\n    jobData;\n    pollingOptions;\n    bulkJobSuccessfulResults;\n    bulkJobFailedResults;\n    bulkJobUnprocessedRecords;\n    error;\n    jobInfo;\n    /**\n     *\n     */\n    constructor(conn, options) {\n        super();\n        this.connection = conn;\n        this.logger = this.connection._logLevel\n            ? (0, logger_1.getLogger)('bulk2:IngestJobV2').createInstance(this.connection._logLevel)\n            : (0, logger_1.getLogger)('bulk2:IngestJobV2');\n        this.pollingOptions = options.pollingOptions;\n        if ('id' in options) {\n            this._id = options.id;\n        }\n        else {\n            this.bodyParams = options.bodyParams;\n        }\n        this.jobData = new JobDataV2({\n            createRequest: (request) => this.createIngestRequest(request),\n            job: this,\n        });\n        // default error handler to keep the latest error\n        this.on('error', (error) => (this.error = error));\n    }\n    /**\n     * Get the query job ID.\n     *\n     * @returns {string} query job Id.\n     */\n    get id() {\n        return this.jobInfo ? this.jobInfo.id : this._id;\n    }\n    /**\n     * Get the query job info.\n     *\n     * @returns {Promise<QueryJobInfoV2>} ingest job information.\n     */\n    getInfo() {\n        if (this.jobInfo) {\n            return this.jobInfo;\n        }\n        throw new Error('No internal job info. Make sure to call `await job.check`.');\n    }\n    /**\n     * Create a job representing a bulk operation in the org\n     *\n     * @returns {Promise<QueryJobInfoV2>} job information.\n     */\n    async open() {\n        if (!this.bodyParams) {\n            throw new Error('Missing required body params to open a new ingest job.');\n        }\n        try {\n            this.jobInfo = await this.createIngestRequest({\n                method: 'POST',\n                body: JSON.stringify(this.bodyParams),\n                headers: {\n                    'Content-Type': 'application/json; charset=utf-8',\n                },\n                responseType: 'application/json',\n            });\n            this.logger.debug(`Successfully created job ${this.id}`);\n            this.emit('open');\n        }\n        catch (err) {\n            this.emit('error', err);\n            throw err;\n        }\n        return this.jobInfo;\n    }\n    /** Upload data for a job in CSV format\n     *\n     *  @param input CSV as a string, or array of records or readable stream\n     */\n    async uploadData(input) {\n        await this.jobData.execute(input).result;\n        this.logger.debug(`Successfully uploaded data to job ${this.id}`);\n    }\n    /**\n     * Close opened job\n     *\n     * This method will notify the org  that the upload of job data is complete and is ready for processing.\n     */\n    async close() {\n        try {\n            const state = 'UploadComplete';\n            this.jobInfo = await this.createIngestRequest({\n                method: 'PATCH',\n                path: `/${this.id}`,\n                body: JSON.stringify({ state }),\n                headers: { 'Content-Type': 'application/json; charset=utf-8' },\n                responseType: 'application/json',\n            });\n            this.logger.debug(`Successfully closed job ${this.id}`);\n            this.emit('close');\n        }\n        catch (err) {\n            this.emit('error', err);\n            throw err;\n        }\n    }\n    /**\n     * Set the status to abort\n     */\n    async abort() {\n        try {\n            const state = 'Aborted';\n            this.jobInfo = await this.createIngestRequest({\n                method: 'PATCH',\n                path: `/${this.id}`,\n                body: JSON.stringify({ state }),\n                headers: { 'Content-Type': 'application/json; charset=utf-8' },\n                responseType: 'application/json',\n            });\n            this.logger.debug(`Successfully aborted job ${this.id}`);\n            this.emit('aborted');\n        }\n        catch (err) {\n            this.emit('error', err);\n            throw err;\n        }\n    }\n    /**\n     * Poll for the state of the processing for the job.\n     *\n     * This method will only throw after a timeout. To capture a\n     * job failure while polling you must set a listener for the\n     * `failed` event before calling it:\n     *\n     * job.on('failed', (err) => console.error(err))\n     * await job.poll()\n     *\n     * @param interval Polling interval in milliseconds\n     * @param timeout Polling timeout in milliseconds\n     * @returns {Promise<void>} A promise that resolves when the job finishes successfully\n     */\n    async poll(interval = this.pollingOptions.pollInterval, timeout = this.pollingOptions.pollTimeout) {\n        const jobId = this.id;\n        const startTime = Date.now();\n        const endTime = startTime + timeout;\n        if (timeout === 0) {\n            throw new JobPollingTimeoutError(`Skipping polling because of timeout = 0ms. Job Id = ${jobId}`, jobId);\n        }\n        this.logger.debug('Start polling for job status');\n        this.logger.debug(`Polling options: timeout:${timeout}ms | interval: ${interval}ms.`);\n        while (endTime > Date.now()) {\n            try {\n                const res = await this.check();\n                switch (res.state) {\n                    case 'Open':\n                        throw new Error('Job is still open. Make sure close the job by `close` method on the job instance before polling.');\n                    case 'Aborted':\n                        throw new Error('Job has been aborted');\n                    case 'UploadComplete':\n                    case 'InProgress':\n                        this.emit('inProgress', res);\n                        await delay(interval);\n                        break;\n                    case 'Failed':\n                        this.logger.debug(res);\n                        throw new Error(`Ingest job failed to complete due to: ${res.errorMessage}`);\n                    case 'JobComplete':\n                        this.logger.debug(`Job ${this.id} was successfully processed.`);\n                        this.emit('jobComplete', res);\n                        return;\n                }\n            }\n            catch (err) {\n                this.emit('error', err);\n                throw err;\n            }\n        }\n        const timeoutError = new JobPollingTimeoutError(`Polling timed out after ${timeout}ms. Job Id = ${jobId}`, jobId);\n        this.emit('error', timeoutError);\n        throw timeoutError;\n    }\n    /**\n     * Check the latest batch status in server\n     */\n    async check() {\n        try {\n            const jobInfo = await this.createIngestRequest({\n                method: 'GET',\n                path: `/${this.id}`,\n                responseType: 'application/json',\n            });\n            this.jobInfo = jobInfo;\n            return jobInfo;\n        }\n        catch (err) {\n            this.emit('error', err);\n            throw err;\n        }\n    }\n    /** Return all record results\n     *\n     * This method will return successful, failed and unprocessed records\n     *\n     * @returns Promise<IngestJobV2Results>\n     */\n    async getAllResults() {\n        const [successfulResults, failedResults, unprocessedRecords,] = await Promise.all([\n            this.getSuccessfulResults(),\n            this.getFailedResults(),\n            this.getUnprocessedRecords(),\n        ]);\n        return { successfulResults, failedResults, unprocessedRecords };\n    }\n    async getSuccessfulResults(raw) {\n        const reqOpts = {\n            method: 'GET',\n            path: `/${this.id}/successfulResults`,\n        };\n        if (raw) {\n            return this.createIngestRequest({\n                ...reqOpts,\n                responseType: 'text/plain',\n            });\n        }\n        if (this.bulkJobSuccessfulResults) {\n            return this.bulkJobSuccessfulResults;\n        }\n        const results = await this.createIngestRequest({\n            method: 'GET',\n            path: `/${this.id}/successfulResults`,\n            responseType: 'text/csv',\n        });\n        this.bulkJobSuccessfulResults = results ?? [];\n        return this.bulkJobSuccessfulResults;\n    }\n    async getFailedResults(raw) {\n        const reqOpts = {\n            method: 'GET',\n            path: `/${this.id}/failedResults`,\n        };\n        if (raw) {\n            return this.createIngestRequest({\n                ...reqOpts,\n                responseType: 'text/plain',\n            });\n        }\n        if (this.bulkJobFailedResults) {\n            return this.bulkJobFailedResults;\n        }\n        const results = await this.createIngestRequest({\n            ...reqOpts,\n            responseType: 'text/csv',\n        });\n        this.bulkJobFailedResults = results ?? [];\n        return this.bulkJobFailedResults;\n    }\n    async getUnprocessedRecords(raw) {\n        const reqOpts = {\n            method: 'GET',\n            path: `/${this.id}/unprocessedrecords`,\n        };\n        if (raw) {\n            return this.createIngestRequest({\n                ...reqOpts,\n                responseType: 'text/plain',\n            });\n        }\n        if (this.bulkJobUnprocessedRecords) {\n            return this.bulkJobUnprocessedRecords;\n        }\n        const results = await this.createIngestRequest({\n            ...reqOpts,\n            responseType: 'text/csv',\n        });\n        this.bulkJobUnprocessedRecords = results ?? [];\n        return this.bulkJobUnprocessedRecords;\n    }\n    /**\n     * Deletes an ingest job.\n     */\n    async delete() {\n        return this.createIngestRequest({\n            method: 'DELETE',\n            path: `/${this.id}`,\n        });\n    }\n    createIngestRequest(request) {\n        const { path, responseType } = request;\n        const basePath = `/services/data/v${this.connection.version}/jobs/ingest`;\n        const url = new URL(path ? basePath + path : basePath, this.connection.instanceUrl).toString();\n        return new BulkApiV2(this.connection, { responseType }).request({\n            ...request,\n            url,\n        });\n    }\n}\nexports.IngestJobV2 = IngestJobV2;\nclass JobDataV2 extends stream_1.Writable {\n    job;\n    uploadStream;\n    downloadStream;\n    dataStream;\n    result;\n    /**\n     *\n     */\n    constructor(options) {\n        super({ objectMode: true });\n        const createRequest = options.createRequest;\n        this.job = options.job;\n        this.uploadStream = new record_stream_1.Serializable();\n        this.downloadStream = new record_stream_1.Parsable();\n        const converterOptions = { nullValue: '#N/A' };\n        const uploadDataStream = this.uploadStream.stream('csv', converterOptions);\n        const downloadDataStream = this.downloadStream.stream('csv', converterOptions);\n        this.dataStream = (0, stream_2.concatStreamsAsDuplex)(uploadDataStream, downloadDataStream);\n        this.on('finish', () => this.uploadStream.end());\n        uploadDataStream.once('readable', () => {\n            try {\n                // pipe upload data to batch API request stream\n                const req = createRequest({\n                    method: 'PUT',\n                    path: `/${this.job.id}/batches`,\n                    headers: {\n                        'Content-Type': 'text/csv',\n                    },\n                    responseType: 'application/json',\n                });\n                (async () => {\n                    try {\n                        const res = await req;\n                        this.emit('response', res);\n                    }\n                    catch (err) {\n                        this.emit('error', err);\n                    }\n                })();\n                uploadDataStream.pipe(req.stream());\n            }\n            catch (err) {\n                this.emit('error', err);\n            }\n        });\n    }\n    _write(record_, enc, cb) {\n        const { Id, type, attributes, ...rrec } = record_;\n        let record;\n        switch (this.job.getInfo().operation) {\n            case 'insert':\n                record = rrec;\n                break;\n            case 'delete':\n            case 'hardDelete':\n                record = { Id };\n                break;\n            default:\n                record = { Id, ...rrec };\n        }\n        this.uploadStream.write(record, enc, cb);\n    }\n    /**\n     * Returns duplex stream which accepts CSV data input and batch result output\n     */\n    stream() {\n        return this.dataStream;\n    }\n    /**\n     * Execute batch operation\n     */\n    execute(input) {\n        if (this.result) {\n            throw new Error('Data can only be uploaded to a job once.');\n        }\n        this.result = new Promise((resolve, reject) => {\n            this.once('response', () => resolve());\n            this.once('error', reject);\n        });\n        if (is_1.default.nodeStream(input)) {\n            // if input has stream.Readable interface\n            input.pipe(this.dataStream);\n        }\n        else {\n            const recordData = structuredClone(input);\n            if (Array.isArray(recordData)) {\n                for (const record of recordData) {\n                    for (const key of Object.keys(record)) {\n                        if (typeof record[key] === 'boolean') {\n                            record[key] = String(record[key]);\n                        }\n                    }\n                    this.write(record);\n                }\n                this.end();\n            }\n            else if (typeof recordData === 'string') {\n                this.dataStream.write(recordData, 'utf8');\n                this.dataStream.end();\n            }\n        }\n        return this;\n    }\n}\nfunction delay(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n/*--------------------------------------------*/\n/*\n * Register hook in connection instantiation for dynamically adding this API module features\n */\n(0, jsforce_1.registerModule)('bulk2', (conn) => new BulkV2(conn));\nexports[\"default\"] = BulkV2;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/api/bulk2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/api/chatter.js":
/*!*************************************************!*\
  !*** ./node_modules/jsforce/lib/api/chatter.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Chatter = exports.Resource = void 0;\n/**\n * @file Manages Salesforce Chatter REST API calls\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\nconst jsforce_1 = __webpack_require__(/*! ../jsforce */ \"(rsc)/./node_modules/jsforce/lib/jsforce.js\");\nconst function_1 = __webpack_require__(/*! ../util/function */ \"(rsc)/./node_modules/jsforce/lib/util/function.js\");\n/*--------------------------------------------*/\n/**\n * A class representing chatter API request\n */\nclass Request {\n    _chatter;\n    _request;\n    _promise;\n    constructor(chatter, request) {\n        this._chatter = chatter;\n        this._request = request;\n    }\n    /**\n     * Retrieve parameters in batch request form\n     */\n    batchParams() {\n        const { method, url, body } = this._request;\n        return {\n            method,\n            url: this._chatter._normalizeUrl(url),\n            ...(typeof body !== 'undefined' ? { richInput: body } : {}),\n        };\n    }\n    /**\n     * Retrieve parameters in batch request form\n     *\n     * @method Chatter~Request#promise\n     * @returns {Promise.<Chatter~RequestResult>}\n     */\n    promise() {\n        return (this._promise || (this._promise = this._chatter._request(this._request)));\n    }\n    /**\n     * Returns Node.js Stream object for request\n     *\n     * @method Chatter~Request#stream\n     * @returns {stream.Stream}\n     */\n    stream() {\n        return this._chatter._request(this._request).stream();\n    }\n    /**\n     * Promise/A+ interface\n     * http://promises-aplus.github.io/promises-spec/\n     *\n     * Delegate to deferred promise, return promise instance for batch result\n     */\n    then(onResolve, onReject) {\n        return this.promise().then(onResolve, onReject);\n    }\n}\nfunction apppendQueryParamsToUrl(url, queryParams) {\n    if (queryParams) {\n        const qstring = Object.keys(queryParams)\n            .map((name) => `${name}=${encodeURIComponent(String(queryParams[name] ?? ''))}`)\n            .join('&');\n        url += (url.indexOf('?') > 0 ? '&' : '?') + qstring;\n    }\n    return url;\n}\n/*------------------------------*/\nclass Resource extends Request {\n    _url;\n    /**\n     *\n     */\n    constructor(chatter, url, queryParams) {\n        super(chatter, {\n            method: 'GET',\n            url: apppendQueryParamsToUrl(url, queryParams),\n        });\n        this._url = this._request.url;\n    }\n    /**\n     * Create a new resource\n     */\n    create(data) {\n        return this._chatter.request({\n            method: 'POST',\n            url: this._url,\n            body: data,\n        });\n    }\n    /**\n     * Retrieve resource content\n     */\n    retrieve() {\n        return this._chatter.request({\n            method: 'GET',\n            url: this._url,\n        });\n    }\n    /**\n     * Update specified resource\n     */\n    update(data) {\n        return this._chatter.request({\n            method: 'POST',\n            url: this._url,\n            body: data,\n        });\n    }\n    /**\n     * Delete specified resource\n     */\n    destroy() {\n        return this._chatter.request({\n            method: 'DELETE',\n            url: this._url,\n        });\n    }\n    /**\n     * Synonym of Resource#destroy()\n     */\n    delete = this.destroy;\n    /**\n     * Synonym of Resource#destroy()\n     */\n    del = this.destroy;\n}\nexports.Resource = Resource;\n/*------------------------------*/\n/**\n * API class for Chatter REST API call\n */\nclass Chatter {\n    _conn;\n    /**\n     *\n     */\n    constructor(conn) {\n        this._conn = conn;\n    }\n    /**\n     * Sending request to API endpoint\n     * @private\n     */\n    _request(req_) {\n        const { method, url: url_, headers: headers_, body: body_ } = req_;\n        let headers = headers_ ?? {};\n        let body;\n        if (/^(put|post|patch)$/i.test(method)) {\n            if ((0, function_1.isObject)(body_)) {\n                headers = {\n                    ...headers_,\n                    'Content-Type': 'application/json',\n                };\n                body = JSON.stringify(body_);\n            }\n            else {\n                body = body_;\n            }\n        }\n        const url = this._normalizeUrl(url_);\n        return this._conn.request({\n            method,\n            url,\n            headers,\n            body,\n        });\n    }\n    /**\n     * Convert path to site root relative url\n     * @private\n     */\n    _normalizeUrl(url) {\n        if (url.startsWith('/chatter/') || url.startsWith('/connect/')) {\n            return '/services/data/v' + this._conn.version + url;\n        }\n        else if (/^\\/v[\\d]+\\.[\\d]+\\//.test(url)) {\n            return '/services/data' + url;\n        }\n        else if (!url.startsWith('/services/') && url.startsWith('/')) {\n            return '/services/data/v' + this._conn.version + '/chatter' + url;\n        }\n        else {\n            return url;\n        }\n    }\n    /**\n     * Make a request for chatter API resource\n     */\n    request(req) {\n        return new Request(this, req);\n    }\n    /**\n     * Make a resource request to chatter API\n     */\n    resource(url, queryParams) {\n        return new Resource(this, url, queryParams);\n    }\n    /**\n     * Make a batch request to chatter API\n     */\n    async batch(requests) {\n        const deferreds = requests.map((request) => {\n            const deferred = defer();\n            request._promise = deferred.promise;\n            return deferred;\n        });\n        const res = await this.request({\n            method: 'POST',\n            url: this._normalizeUrl('/connect/batch'),\n            body: {\n                batchRequests: requests.map((request) => request.batchParams()),\n            },\n        });\n        res.results.forEach((result, i) => {\n            const deferred = deferreds[i];\n            if (result.statusCode >= 400) {\n                deferred.reject(result.result);\n            }\n            else {\n                deferred.resolve(result.result);\n            }\n        });\n        return res;\n    }\n}\nexports.Chatter = Chatter;\nfunction defer() {\n    let resolve_ = () => { };\n    let reject_ = () => { };\n    const promise = new Promise((resolve, reject) => {\n        resolve_ = resolve;\n        reject_ = reject;\n    });\n    return {\n        promise,\n        resolve: resolve_,\n        reject: reject_,\n    };\n}\n/*--------------------------------------------*/\n/*\n * Register hook in connection instantiation for dynamically adding this API module features\n */\n(0, jsforce_1.registerModule)('chatter', (conn) => new Chatter(conn));\nexports[\"default\"] = Chatter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/api/chatter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/api/metadata.js":
/*!**************************************************!*\
  !*** ./node_modules/jsforce/lib/api/metadata.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DeployResultLocator = exports.RetrieveResultLocator = exports.AsyncResultLocator = exports.MetadataApi = void 0;\n/**\n * @file Manages Salesforce Metadata API\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst form_data_1 = __importDefault(__webpack_require__(/*! form-data */ \"(rsc)/./node_modules/form-data/lib/form_data.js\"));\nconst jsforce_1 = __webpack_require__(/*! ../jsforce */ \"(rsc)/./node_modules/jsforce/lib/jsforce.js\");\nconst soap_1 = __importDefault(__webpack_require__(/*! ../soap */ \"(rsc)/./node_modules/jsforce/lib/soap.js\"));\nconst function_1 = __webpack_require__(/*! ../util/function */ \"(rsc)/./node_modules/jsforce/lib/util/function.js\");\nconst schema_1 = __webpack_require__(/*! ./metadata/schema */ \"(rsc)/./node_modules/jsforce/lib/api/metadata/schema.js\");\n__exportStar(__webpack_require__(/*! ./metadata/schema */ \"(rsc)/./node_modules/jsforce/lib/api/metadata/schema.js\"), exports);\n/**\n *\n */\nfunction deallocateTypeWithMetadata(metadata) {\n    const { $, ...md } = metadata;\n    return md;\n}\nfunction assignTypeWithMetadata(metadata, type) {\n    const convert = (md) => ({ ['@xsi:type']: type, ...md });\n    return Array.isArray(metadata) ? metadata.map(convert) : convert(metadata);\n}\n/**\n * Class for Salesforce Metadata API\n */\nclass MetadataApi {\n    _conn;\n    /**\n     * Polling interval in milliseconds\n     */\n    pollInterval = 1000;\n    /**\n     * Polling timeout in milliseconds\n     */\n    pollTimeout = 10000;\n    /**\n     *\n     */\n    constructor(conn) {\n        this._conn = conn;\n    }\n    /**\n     * Call Metadata API SOAP endpoint\n     *\n     * @private\n     */\n    async _invoke(method, message, schema) {\n        const soapEndpoint = new soap_1.default(this._conn, {\n            xmlns: 'http://soap.sforce.com/2006/04/metadata',\n            endpointUrl: `${this._conn.instanceUrl}/services/Soap/m/${this._conn.version}`,\n        });\n        const res = await soapEndpoint.invoke(method, message, schema ? { result: schema } : undefined, schema_1.ApiSchemas);\n        return res.result;\n    }\n    create(type, metadata) {\n        const isArray = Array.isArray(metadata);\n        metadata = assignTypeWithMetadata(metadata, type);\n        const schema = isArray ? [schema_1.ApiSchemas.SaveResult] : schema_1.ApiSchemas.SaveResult;\n        return this._invoke('createMetadata', { metadata }, schema);\n    }\n    async read(type, fullNames) {\n        const ReadResultSchema = type in schema_1.ApiSchemas\n            ? {\n                type: schema_1.ApiSchemas.ReadResult.type,\n                props: {\n                    records: [type],\n                },\n            }\n            : schema_1.ApiSchemas.ReadResult;\n        const res = await this._invoke('readMetadata', { type, fullNames }, ReadResultSchema);\n        return Array.isArray(fullNames)\n            ? res.records.map(deallocateTypeWithMetadata)\n            : deallocateTypeWithMetadata(res.records[0]);\n    }\n    update(type, metadata) {\n        const isArray = Array.isArray(metadata);\n        metadata = assignTypeWithMetadata(metadata, type);\n        const schema = isArray ? [schema_1.ApiSchemas.SaveResult] : schema_1.ApiSchemas.SaveResult;\n        return this._invoke('updateMetadata', { metadata }, schema);\n    }\n    upsert(type, metadata) {\n        const isArray = Array.isArray(metadata);\n        metadata = assignTypeWithMetadata(metadata, type);\n        const schema = isArray\n            ? [schema_1.ApiSchemas.UpsertResult]\n            : schema_1.ApiSchemas.UpsertResult;\n        return this._invoke('upsertMetadata', { metadata }, schema);\n    }\n    delete(type, fullNames) {\n        const schema = Array.isArray(fullNames)\n            ? [schema_1.ApiSchemas.SaveResult]\n            : schema_1.ApiSchemas.SaveResult;\n        return this._invoke('deleteMetadata', { type, fullNames }, schema);\n    }\n    /**\n     * Rename fullname of a metadata component in the organization\n     */\n    rename(type, oldFullName, newFullName) {\n        return this._invoke('renameMetadata', { type, oldFullName, newFullName }, schema_1.ApiSchemas.SaveResult);\n    }\n    /**\n     * Retrieves the metadata which describes your organization, including Apex classes and triggers,\n     * custom objects, custom fields on standard objects, tab sets that define an app,\n     * and many other components.\n     */\n    describe(asOfVersion) {\n        if (!asOfVersion) {\n            asOfVersion = this._conn.version;\n        }\n        return this._invoke('describeMetadata', { asOfVersion }, schema_1.ApiSchemas.DescribeMetadataResult);\n    }\n    /**\n     * Retrieves property information about metadata components in your organization\n     */\n    list(queries, asOfVersion) {\n        if (!asOfVersion) {\n            asOfVersion = this._conn.version;\n        }\n        return this._invoke('listMetadata', { queries, asOfVersion }, [\n            schema_1.ApiSchemas.FileProperties,\n        ]);\n    }\n    /**\n     * Checks the status of asynchronous metadata calls\n     */\n    checkStatus(asyncProcessId) {\n        const res = this._invoke('checkStatus', { asyncProcessId }, schema_1.ApiSchemas.AsyncResult);\n        return new AsyncResultLocator(this, res);\n    }\n    /**\n     * Retrieves XML file representations of components in an organization\n     */\n    retrieve(request) {\n        const res = this._invoke('retrieve', { request }, schema_1.ApiSchemas.RetrieveResult);\n        return new RetrieveResultLocator(this, res);\n    }\n    /**\n     * Checks the status of declarative metadata call retrieve() and returns the zip file contents\n     */\n    checkRetrieveStatus(asyncProcessId) {\n        return this._invoke('checkRetrieveStatus', { asyncProcessId }, schema_1.ApiSchemas.RetrieveResult);\n    }\n    /**\n     * Will deploy a recently validated deploy request\n     *\n     * @param options.id = the deploy ID that's been validated already from a previous checkOnly deploy request\n     * @param options.rest = a boolean whether or not to use the REST API\n     * @returns the deploy ID of the recent validation request\n     */\n    async deployRecentValidation(options) {\n        const { id, rest } = options;\n        let response;\n        if (rest) {\n            const messageBody = JSON.stringify({\n                validatedDeployRequestId: id,\n            });\n            const requestInfo = {\n                method: 'POST',\n                url: `${this._conn._baseUrl()}/metadata/deployRequest`,\n                body: messageBody,\n                headers: {\n                    'content-type': 'application/json',\n                },\n            };\n            const requestOptions = { headers: 'json' };\n            // This is the deploy ID of the deployRecentValidation response, not\n            // the already validated deploy ID (i.e., validateddeployrequestid).\n            // REST returns an object with an id property, SOAP returns the id as a string directly.\n            response = (await this._conn.request(requestInfo, requestOptions)).id;\n        }\n        else {\n            response = await this._invoke('deployRecentValidation', {\n                validationId: id,\n            });\n        }\n        return response;\n    }\n    /**\n     * Deploy components into an organization using zipped file representations\n     * using the REST Metadata API instead of SOAP\n     */\n    deployRest(zipInput, options = {}) {\n        const form = new form_data_1.default();\n        form.append('file', zipInput, {\n            contentType: 'application/zip',\n            filename: 'package.xml',\n        });\n        // Add the deploy options\n        form.append('entity_content', JSON.stringify({ deployOptions: options }), {\n            contentType: 'application/json',\n        });\n        const request = {\n            url: '/metadata/deployRequest',\n            method: 'POST',\n            headers: { ...form.getHeaders() },\n            body: form.getBuffer(),\n        };\n        const res = this._conn.request(request);\n        return new DeployResultLocator(this, res);\n    }\n    /**\n     * Deploy components into an organization using zipped file representations\n     */\n    deploy(zipInput, options = {}) {\n        const res = (async () => {\n            const zipContentB64 = await new Promise((resolve, reject) => {\n                if ((0, function_1.isObject)(zipInput) &&\n                    'pipe' in zipInput &&\n                    typeof zipInput.pipe === 'function') {\n                    const bufs = [];\n                    zipInput.on('data', (d) => bufs.push(d));\n                    zipInput.on('error', reject);\n                    zipInput.on('end', () => {\n                        resolve(Buffer.concat(bufs).toString('base64'));\n                    });\n                    // zipInput.resume();\n                }\n                else if (zipInput instanceof Buffer) {\n                    resolve(zipInput.toString('base64'));\n                }\n                else if (zipInput instanceof String || typeof zipInput === 'string') {\n                    resolve(zipInput);\n                }\n                else {\n                    throw 'Unexpected zipInput type';\n                }\n            });\n            return this._invoke('deploy', {\n                ZipFile: zipContentB64,\n                DeployOptions: options,\n            }, schema_1.ApiSchemas.DeployResult);\n        })();\n        return new DeployResultLocator(this, res);\n    }\n    /**\n     * Checks the status of declarative metadata call deploy(), using either\n     * SOAP or REST APIs. SOAP is the default.\n     */\n    async checkDeployStatus(asyncProcessId, includeDetails = false, rest = false) {\n        if (rest) {\n            const url = `/metadata/deployRequest/${asyncProcessId}${includeDetails ? '?includeDetails=true' : ''}`;\n            return (await this._conn.requestGet(url)).deployResult;\n        }\n        else {\n            return this._invoke('checkDeployStatus', {\n                asyncProcessId,\n                includeDetails,\n            }, schema_1.ApiSchemas.DeployResult);\n        }\n    }\n    async cancelDeploy(id) {\n        return this._invoke('cancelDeploy', { id });\n    }\n}\nexports.MetadataApi = MetadataApi;\n/*--------------------------------------------*/\n/**\n * The locator class for Metadata API asynchronous call result\n */\nclass AsyncResultLocator extends events_1.EventEmitter {\n    _meta;\n    _promise;\n    _id;\n    /**\n     *\n     */\n    constructor(meta, promise) {\n        super();\n        this._meta = meta;\n        this._promise = promise;\n    }\n    /**\n     * Promise/A+ interface\n     * http://promises-aplus.github.io/promises-spec/\n     *\n     * @method Metadata~AsyncResultLocator#then\n     */\n    then(onResolve, onReject) {\n        return this._promise.then(onResolve, onReject);\n    }\n    /**\n     * Check the status of async request\n     */\n    async check() {\n        const result = await this._promise;\n        this._id = result.id;\n        return this._meta.checkStatus(result.id);\n    }\n    /**\n     * Polling until async call status becomes complete or error\n     */\n    poll(interval, timeout) {\n        const startTime = new Date().getTime();\n        const poll = async () => {\n            try {\n                const now = new Date().getTime();\n                if (startTime + timeout < now) {\n                    let errMsg = 'Polling time out.';\n                    if (this._id) {\n                        errMsg += ' Process Id = ' + this._id;\n                    }\n                    this.emit('error', new Error(errMsg));\n                    return;\n                }\n                const result = await this.check();\n                if (result.done) {\n                    this.emit('complete', result);\n                }\n                else {\n                    this.emit('progress', result);\n                    setTimeout(poll, interval);\n                }\n            }\n            catch (err) {\n                this.emit('error', err);\n            }\n        };\n        setTimeout(poll, interval);\n    }\n    /**\n     * Check and wait until the async requests become in completed status\n     */\n    complete() {\n        return new Promise((resolve, reject) => {\n            this.on('complete', resolve);\n            this.on('error', reject);\n            this.poll(this._meta.pollInterval, this._meta.pollTimeout);\n        });\n    }\n}\nexports.AsyncResultLocator = AsyncResultLocator;\n/*--------------------------------------------*/\n/**\n * The locator class to track retreive() Metadata API call result\n */\nclass RetrieveResultLocator extends AsyncResultLocator {\n    /**\n     * Check and wait until the async request becomes in completed status,\n     * and retrieve the result data.\n     */\n    async complete() {\n        const result = await super.complete();\n        return this._meta.checkRetrieveStatus(result.id);\n    }\n    /**\n     * Change the retrieved result to Node.js readable stream\n     */\n    stream() {\n        const resultStream = new stream_1.Readable();\n        let reading = false;\n        resultStream._read = async () => {\n            if (reading) {\n                return;\n            }\n            reading = true;\n            try {\n                const result = await this.complete();\n                resultStream.push(Buffer.from(result.zipFile, 'base64'));\n                resultStream.push(null);\n            }\n            catch (e) {\n                resultStream.emit('error', e);\n            }\n        };\n        return resultStream;\n    }\n}\nexports.RetrieveResultLocator = RetrieveResultLocator;\n/*--------------------------------------------*/\n/**\n * The locator class to track deploy() Metadata API call result\n *\n * @protected\n * @class Metadata~DeployResultLocator\n * @extends Metadata~AsyncResultLocator\n * @param {Metadata} meta - Metadata API object\n * @param {Promise.<Metadata~AsyncResult>} result - Promise object for async result of deploy() call\n */\nclass DeployResultLocator extends AsyncResultLocator {\n    /**\n     * Check and wait until the async request becomes in completed status,\n     * and retrieve the result data.\n     */\n    async complete(includeDetails) {\n        const result = await super.complete();\n        return this._meta.checkDeployStatus(result.id, includeDetails);\n    }\n}\nexports.DeployResultLocator = DeployResultLocator;\n/*--------------------------------------------*/\n/*\n * Register hook in connection instantiation for dynamically adding this API module features\n */\n(0, jsforce_1.registerModule)('metadata', (conn) => new MetadataApi(conn));\nexports[\"default\"] = MetadataApi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/api/metadata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/api/metadata/schema.js":
/*!*********************************************************!*\
  !*** ./node_modules/jsforce/lib/api/metadata/schema.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n/**\n * This file is generated from WSDL file by wsdl2schema.ts.\n * Do not modify directly.\n * To generate the file, run \"ts-node path/to/wsdl2schema.ts path/to/wsdl.xml path/to/schema.ts\"\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ApiSchemas = void 0;\nexports.ApiSchemas = {\n    CancelDeployResult: {\n        type: 'CancelDeployResult',\n        props: {\n            done: 'boolean',\n            id: 'string',\n        },\n    },\n    DeployResult: {\n        type: 'DeployResult',\n        props: {\n            canceledBy: '?string',\n            canceledByName: '?string',\n            checkOnly: 'boolean',\n            completedDate: '?string',\n            createdBy: 'string',\n            createdByName: 'string',\n            createdDate: 'string',\n            details: 'DeployDetails',\n            done: 'boolean',\n            errorMessage: '?string',\n            errorStatusCode: '?string',\n            id: 'string',\n            ignoreWarnings: 'boolean',\n            lastModifiedDate: '?string',\n            numberComponentErrors: 'number',\n            numberComponentsDeployed: 'number',\n            numberComponentsTotal: 'number',\n            numberTestErrors: 'number',\n            numberTestsCompleted: 'number',\n            numberTestsTotal: 'number',\n            rollbackOnError: 'boolean',\n            runTestsEnabled: 'boolean',\n            startDate: '?string',\n            stateDetail: '?string',\n            status: 'string',\n            success: 'boolean',\n        },\n    },\n    DeployDetails: {\n        type: 'DeployDetails',\n        props: {\n            componentFailures: ['DeployMessage'],\n            componentSuccesses: ['DeployMessage'],\n            retrieveResult: '?RetrieveResult',\n            runTestResult: '?RunTestsResult',\n        },\n    },\n    DeployMessage: {\n        type: 'DeployMessage',\n        props: {\n            changed: 'boolean',\n            columnNumber: '?number',\n            componentType: '?string',\n            created: 'boolean',\n            createdDate: 'string',\n            deleted: 'boolean',\n            fileName: 'string',\n            fullName: 'string',\n            id: '?string',\n            lineNumber: '?number',\n            problem: '?string',\n            problemType: '?string',\n            success: 'boolean',\n        },\n    },\n    RetrieveResult: {\n        type: 'RetrieveResult',\n        props: {\n            done: 'boolean',\n            errorMessage: '?string',\n            errorStatusCode: '?string',\n            fileProperties: ['FileProperties'],\n            id: 'string',\n            messages: ['RetrieveMessage'],\n            status: 'string',\n            success: 'boolean',\n            zipFile: 'string',\n        },\n    },\n    FileProperties: {\n        type: 'FileProperties',\n        props: {\n            createdById: 'string',\n            createdByName: 'string',\n            createdDate: 'string',\n            fileName: 'string',\n            fullName: 'string',\n            id: 'string',\n            lastModifiedById: 'string',\n            lastModifiedByName: 'string',\n            lastModifiedDate: 'string',\n            manageableState: '?string',\n            namespacePrefix: '?string',\n            type: 'string',\n        },\n    },\n    RetrieveMessage: {\n        type: 'RetrieveMessage',\n        props: {\n            fileName: 'string',\n            problem: 'string',\n        },\n    },\n    RunTestsResult: {\n        type: 'RunTestsResult',\n        props: {\n            apexLogId: '?string',\n            codeCoverage: ['CodeCoverageResult'],\n            codeCoverageWarnings: ['CodeCoverageWarning'],\n            failures: ['RunTestFailure'],\n            flowCoverage: ['FlowCoverageResult'],\n            flowCoverageWarnings: ['FlowCoverageWarning'],\n            numFailures: 'number',\n            numTestsRun: 'number',\n            successes: ['RunTestSuccess'],\n            totalTime: 'number',\n        },\n    },\n    CodeCoverageResult: {\n        type: 'CodeCoverageResult',\n        props: {\n            dmlInfo: ['CodeLocation'],\n            id: 'string',\n            locationsNotCovered: ['CodeLocation'],\n            methodInfo: ['CodeLocation'],\n            name: 'string',\n            namespace: '?string',\n            numLocations: 'number',\n            numLocationsNotCovered: 'number',\n            soqlInfo: ['CodeLocation'],\n            soslInfo: ['CodeLocation'],\n            type: 'string',\n        },\n    },\n    CodeLocation: {\n        type: 'CodeLocation',\n        props: {\n            column: 'number',\n            line: 'number',\n            numExecutions: 'number',\n            time: 'number',\n        },\n    },\n    CodeCoverageWarning: {\n        type: 'CodeCoverageWarning',\n        props: {\n            id: 'string',\n            message: 'string',\n            name: '?string',\n            namespace: '?string',\n        },\n    },\n    RunTestFailure: {\n        type: 'RunTestFailure',\n        props: {\n            id: 'string',\n            message: 'string',\n            methodName: '?string',\n            name: 'string',\n            namespace: '?string',\n            packageName: 'string',\n            seeAllData: '?boolean',\n            stackTrace: '?string',\n            time: 'number',\n            type: 'string',\n        },\n    },\n    FlowCoverageResult: {\n        type: 'FlowCoverageResult',\n        props: {\n            elementsNotCovered: ['string'],\n            flowId: 'string',\n            flowName: 'string',\n            flowNamespace: '?string',\n            numElements: 'number',\n            numElementsNotCovered: 'number',\n            processType: 'string',\n        },\n    },\n    FlowCoverageWarning: {\n        type: 'FlowCoverageWarning',\n        props: {\n            flowId: '?string',\n            flowName: '?string',\n            flowNamespace: '?string',\n            message: 'string',\n        },\n    },\n    RunTestSuccess: {\n        type: 'RunTestSuccess',\n        props: {\n            id: 'string',\n            methodName: 'string',\n            name: 'string',\n            namespace: '?string',\n            seeAllData: '?boolean',\n            time: 'number',\n        },\n    },\n    Metadata: {\n        type: 'Metadata',\n        props: {\n            fullName: '?string',\n        },\n    },\n    AccountRelationshipShareRule: {\n        type: 'AccountRelationshipShareRule',\n        props: {\n            accessLevel: 'string',\n            accountToCriteriaField: 'string',\n            description: '?string',\n            entityType: 'string',\n            masterLabel: 'string',\n            staticFormulaCriteria: '?string',\n            type: 'string',\n        },\n        extends: 'Metadata',\n    },\n    AccountSettings: {\n        type: 'AccountSettings',\n        props: {\n            enableAccountHistoryTracking: '?boolean',\n            enableAccountInsightsInMobile: '?boolean',\n            enableAccountOwnerReport: '?boolean',\n            enableAccountTeams: '?boolean',\n            enableContactHistoryTracking: '?boolean',\n            enableRelateContactToMultipleAccounts: '?boolean',\n            showViewHierarchyLink: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    ActionLinkGroupTemplate: {\n        type: 'ActionLinkGroupTemplate',\n        props: {\n            actionLinkTemplates: ['ActionLinkTemplate'],\n            category: 'string',\n            executionsAllowed: 'string',\n            hoursUntilExpiration: '?number',\n            isPublished: 'boolean',\n            name: 'string',\n        },\n        extends: 'Metadata',\n    },\n    ActionLinkTemplate: {\n        type: 'ActionLinkTemplate',\n        props: {\n            actionUrl: 'string',\n            headers: '?string',\n            isConfirmationRequired: 'boolean',\n            isGroupDefault: 'boolean',\n            label: '?string',\n            labelKey: 'string',\n            linkType: 'string',\n            method: 'string',\n            position: 'number',\n            requestBody: '?string',\n            userAlias: '?string',\n            userVisibility: 'string',\n        },\n    },\n    ActionPlanTemplate: {\n        type: 'ActionPlanTemplate',\n        props: {\n            actionPlanTemplateItem: ['ActionPlanTemplateItem'],\n            description: '?string',\n            name: 'string',\n            targetEntityType: 'string',\n            uniqueName: 'string',\n        },\n        extends: 'Metadata',\n    },\n    ActionPlanTemplateItem: {\n        type: 'ActionPlanTemplateItem',\n        props: {\n            actionPlanTemplateItemValue: ['ActionPlanTemplateItemValue'],\n            displayOrder: '?number',\n            isRequired: '?boolean',\n            name: 'string',\n            uniqueName: 'string',\n        },\n    },\n    ActionPlanTemplateItemValue: {\n        type: 'ActionPlanTemplateItemValue',\n        props: {\n            name: 'string',\n            valueFormula: '?string',\n            valueLiteral: '?string',\n        },\n    },\n    ActionsSettings: {\n        type: 'ActionsSettings',\n        props: {\n            enableDefaultQuickActionsOn: '?boolean',\n            enableMdpEnabled: '?boolean',\n            enableThirdPartyActions: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    ActivitiesSettings: {\n        type: 'ActivitiesSettings',\n        props: {\n            allowUsersToRelateMultipleContactsToTasksAndEvents: '?boolean',\n            autoRelateEventAttendees: '?boolean',\n            enableActivityReminders: '?boolean',\n            enableClickCreateEvents: '?boolean',\n            enableDragAndDropScheduling: '?boolean',\n            enableEmailTracking: '?boolean',\n            enableGroupTasks: '?boolean',\n            enableListViewScheduling: '?boolean',\n            enableLogNote: '?boolean',\n            enableMultidayEvents: '?boolean',\n            enableRecurringEvents: '?boolean',\n            enableRecurringTasks: '?boolean',\n            enableRollUpActivToContactsAcct: '?boolean',\n            enableSidebarCalendarShortcut: '?boolean',\n            enableSimpleTaskCreateUI: '?boolean',\n            enableUNSTaskDelegatedToNotifications: '?boolean',\n            enableUserListViewCalendars: '?boolean',\n            meetingRequestsLogo: '?string',\n            showCustomLogoMeetingRequests: '?boolean',\n            showEventDetailsMultiUserCalendar: '?boolean',\n            showHomePageHoverLinksForEvents: '?boolean',\n            showMyTasksHoverLinks: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    AddressSettings: {\n        type: 'AddressSettings',\n        props: {\n            countriesAndStates: 'CountriesAndStates',\n        },\n        extends: 'Metadata',\n    },\n    CountriesAndStates: {\n        type: 'CountriesAndStates',\n        props: {\n            countries: ['Country'],\n        },\n    },\n    Country: {\n        type: 'Country',\n        props: {\n            active: 'boolean',\n            integrationValue: 'string',\n            isoCode: 'string',\n            label: 'string',\n            orgDefault: 'boolean',\n            standard: 'boolean',\n            states: ['State'],\n            visible: 'boolean',\n        },\n    },\n    State: {\n        type: 'State',\n        props: {\n            active: 'boolean',\n            integrationValue: 'string',\n            isoCode: 'string',\n            label: 'string',\n            standard: 'boolean',\n            visible: 'boolean',\n        },\n    },\n    AnalyticSnapshot: {\n        type: 'AnalyticSnapshot',\n        props: {\n            description: '?string',\n            groupColumn: '?string',\n            mappings: ['AnalyticSnapshotMapping'],\n            name: 'string',\n            runningUser: '?string',\n            sourceReport: 'string',\n            targetObject: 'string',\n        },\n        extends: 'Metadata',\n    },\n    AnalyticSnapshotMapping: {\n        type: 'AnalyticSnapshotMapping',\n        props: {\n            aggregateType: '?string',\n            sourceField: 'string',\n            sourceType: 'string',\n            targetField: 'string',\n        },\n    },\n    AnalyticsSettings: {\n        type: 'AnalyticsSettings',\n        props: {\n            alwaysGenPreviews: '?boolean',\n            analyticsAdoptionMetadata: '?boolean',\n            canAccessAnalyticsViaAPI: '?boolean',\n            canAnnotateDashboards: '?boolean',\n            canEnableSavedView: '?boolean',\n            canExploreDataConversationally: '?boolean',\n            canShareAppsWithCommunities: '?boolean',\n            canSubscribeDashboardWidgets: '?boolean',\n            canViewThumbnailAssets: '?boolean',\n            enableAnalyticsSubtotals: '?boolean',\n            enableAutoCompleteCombo: '?boolean',\n            enableDashboardComponentSnapshot: '?boolean',\n            enableDashboardFlexiTable: '?boolean',\n            enableEmailReportsToPortalUsers: '?boolean',\n            enableFloatingReportHeaders: '?boolean',\n            enableInsights: '?boolean',\n            enableLightningReportBuilder: '?boolean',\n            enableLotusNotesImages: '?boolean',\n            enableMassEnableReportBuilder: '?boolean',\n            enableNewChartsEngine: '?boolean',\n            enablePowerInsights: '?boolean',\n            enableRemoveFooterForRepDisplay: '?boolean',\n            enableRemoveFooterFromRepExp: '?boolean',\n            enableReportFieldToFieldPref: '?boolean',\n            enableReportUniqueRowCountPref: '?boolean',\n            enableSFXJoinedReportsEnable: '?boolean',\n            enableSmartDataDiscovery: '?boolean',\n            enableUseOldChartsLookAndFeel: '?boolean',\n            enableWaveReplication: '?boolean',\n            enableWaveSharingInheritance: '?boolean',\n            enableWaveTemplate: '?boolean',\n            enableWaveTrendedDatasetCleanup: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    AnimationRule: {\n        type: 'AnimationRule',\n        props: {\n            animationFrequency: 'string',\n            developerName: 'string',\n            isActive: 'boolean',\n            masterLabel: 'string',\n            recordTypeContext: 'string',\n            recordTypeName: '?string',\n            sobjectType: 'string',\n            targetField: 'string',\n            targetFieldChangeToValues: 'string',\n        },\n        extends: 'Metadata',\n    },\n    ApexSettings: {\n        type: 'ApexSettings',\n        props: {\n            enableAggregateCodeCoverageOnly: '?boolean',\n            enableApexAccessRightsPref: '?boolean',\n            enableApexApprovalLockUnlock: '?boolean',\n            enableApexCtrlImplicitWithSharingPref: '?boolean',\n            enableApexPropertyGetterPref: '?boolean',\n            enableAuraApexCtrlAuthUserAccessCheckPref: '?boolean',\n            enableAuraApexCtrlGuestUserAccessCheckPref: '?boolean',\n            enableCompileOnDeploy: '?boolean',\n            enableDisableParallelApexTesting: '?boolean',\n            enableDoNotEmailDebugLog: '?boolean',\n            enableGaplessTestAutoNum: '?boolean',\n            enableMngdCtrlActionAccessPref: '?boolean',\n            enableNonCertifiedApexMdCrud: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    ApexTestSuite: {\n        type: 'ApexTestSuite',\n        props: {\n            testClassName: ['string'],\n        },\n        extends: 'Metadata',\n    },\n    AppExperienceSettings: {\n        type: 'AppExperienceSettings',\n        props: {\n            doesHideAllAppsInAppLauncher: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    AppMenu: {\n        type: 'AppMenu',\n        props: {\n            appMenuItems: ['AppMenuItem'],\n        },\n        extends: 'Metadata',\n    },\n    AppMenuItem: {\n        type: 'AppMenuItem',\n        props: {\n            name: 'string',\n            type: 'string',\n        },\n    },\n    AppointmentSchedulingPolicy: {\n        type: 'AppointmentSchedulingPolicy',\n        props: {\n            appointmentStartTimeInterval: 'string',\n            masterLabel: 'string',\n            shouldConsiderCalendarEvents: 'boolean',\n            shouldEnforceExcludedResource: 'boolean',\n            shouldEnforceRequiredResource: 'boolean',\n            shouldMatchSkill: 'boolean',\n            shouldMatchSkillLevel: 'boolean',\n            shouldRespectVisitingHours: 'boolean',\n            shouldUsePrimaryMembers: 'boolean',\n            shouldUseSecondaryMembers: 'boolean',\n        },\n        extends: 'Metadata',\n    },\n    ApprovalProcess: {\n        type: 'ApprovalProcess',\n        props: {\n            active: 'boolean',\n            allowRecall: '?boolean',\n            allowedSubmitters: ['ApprovalSubmitter'],\n            approvalPageFields: '?ApprovalPageField',\n            approvalStep: ['ApprovalStep'],\n            description: '?string',\n            emailTemplate: '?string',\n            enableMobileDeviceAccess: '?boolean',\n            entryCriteria: '?ApprovalEntryCriteria',\n            finalApprovalActions: '?ApprovalAction',\n            finalApprovalRecordLock: '?boolean',\n            finalRejectionActions: '?ApprovalAction',\n            finalRejectionRecordLock: '?boolean',\n            initialSubmissionActions: '?ApprovalAction',\n            label: 'string',\n            nextAutomatedApprover: '?NextAutomatedApprover',\n            postTemplate: '?string',\n            recallActions: '?ApprovalAction',\n            recordEditability: 'string',\n            showApprovalHistory: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    ApprovalSubmitter: {\n        type: 'ApprovalSubmitter',\n        props: {\n            submitter: '?string',\n            type: 'string',\n        },\n    },\n    ApprovalPageField: {\n        type: 'ApprovalPageField',\n        props: {\n            field: ['string'],\n        },\n    },\n    ApprovalStep: {\n        type: 'ApprovalStep',\n        props: {\n            allowDelegate: '?boolean',\n            approvalActions: '?ApprovalAction',\n            assignedApprover: 'ApprovalStepApprover',\n            description: '?string',\n            entryCriteria: '?ApprovalEntryCriteria',\n            ifCriteriaNotMet: '?string',\n            label: 'string',\n            name: 'string',\n            rejectBehavior: '?ApprovalStepRejectBehavior',\n            rejectionActions: '?ApprovalAction',\n        },\n    },\n    ApprovalAction: {\n        type: 'ApprovalAction',\n        props: {\n            action: ['WorkflowActionReference'],\n        },\n    },\n    WorkflowActionReference: {\n        type: 'WorkflowActionReference',\n        props: {\n            name: 'string',\n            type: 'string',\n        },\n    },\n    ApprovalStepApprover: {\n        type: 'ApprovalStepApprover',\n        props: {\n            approver: ['Approver'],\n            whenMultipleApprovers: '?string',\n        },\n    },\n    Approver: {\n        type: 'Approver',\n        props: {\n            name: '?string',\n            type: 'string',\n        },\n    },\n    ApprovalEntryCriteria: {\n        type: 'ApprovalEntryCriteria',\n        props: {\n            booleanFilter: '?string',\n            criteriaItems: ['FilterItem'],\n            formula: '?string',\n        },\n    },\n    FilterItem: {\n        type: 'FilterItem',\n        props: {\n            field: 'string',\n            operation: 'string',\n            value: '?string',\n            valueField: '?string',\n        },\n    },\n    DuplicateRuleFilterItem: {\n        type: 'DuplicateRuleFilterItem',\n        props: {\n            sortOrder: 'number',\n            table: 'string',\n        },\n        extends: 'FilterItem',\n    },\n    ApprovalStepRejectBehavior: {\n        type: 'ApprovalStepRejectBehavior',\n        props: {\n            type: 'string',\n        },\n    },\n    NextAutomatedApprover: {\n        type: 'NextAutomatedApprover',\n        props: {\n            useApproverFieldOfRecordOwner: '?boolean',\n            userHierarchyField: 'string',\n        },\n    },\n    ArchiveSettings: {\n        type: 'ArchiveSettings',\n        props: {\n            enableEntityArchivingEnabled: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    AssignmentRule: {\n        type: 'AssignmentRule',\n        props: {\n            active: '?boolean',\n            ruleEntry: ['RuleEntry'],\n        },\n        extends: 'Metadata',\n    },\n    RuleEntry: {\n        type: 'RuleEntry',\n        props: {\n            assignedTo: '?string',\n            assignedToType: '?string',\n            booleanFilter: '?string',\n            businessHours: '?string',\n            businessHoursSource: '?string',\n            criteriaItems: ['FilterItem'],\n            disableEscalationWhenModified: '?boolean',\n            escalationAction: ['EscalationAction'],\n            escalationStartTime: '?string',\n            formula: '?string',\n            notifyCcRecipients: '?boolean',\n            overrideExistingTeams: '?boolean',\n            replyToEmail: '?string',\n            senderEmail: '?string',\n            senderName: '?string',\n            team: ['string'],\n            template: '?string',\n        },\n    },\n    EscalationAction: {\n        type: 'EscalationAction',\n        props: {\n            assignedTo: '?string',\n            assignedToTemplate: '?string',\n            assignedToType: '?string',\n            minutesToEscalation: '?number',\n            notifyCaseOwner: '?boolean',\n            notifyEmail: ['string'],\n            notifyTo: '?string',\n            notifyToTemplate: '?string',\n        },\n    },\n    AssignmentRules: {\n        type: 'AssignmentRules',\n        props: {\n            assignmentRule: ['AssignmentRule'],\n        },\n        extends: 'Metadata',\n    },\n    Audience: {\n        type: 'Audience',\n        props: {\n            audienceName: 'string',\n            container: 'string',\n            criteria: 'AudienceCriteria',\n            description: '?string',\n            formula: '?string',\n            formulaFilterType: '?string',\n            targets: '?PersonalizationTargetInfos',\n        },\n        extends: 'Metadata',\n    },\n    AudienceCriteria: {\n        type: 'AudienceCriteria',\n        props: {\n            criterion: ['AudienceCriterion'],\n        },\n    },\n    AudienceCriterion: {\n        type: 'AudienceCriterion',\n        props: {\n            criteriaNumber: '?number',\n            criterionValue: '?AudienceCriteriaValue',\n            operator: '?string',\n            type: 'string',\n        },\n    },\n    AudienceCriteriaValue: {\n        type: 'AudienceCriteriaValue',\n        props: {\n            city: '?string',\n            country: '?string',\n            domain: '?string',\n            entityField: '?string',\n            entityType: '?string',\n            fieldValue: '?string',\n            isEnabled: '?string',\n            permissionName: '?string',\n            permissionType: '?string',\n            profile: '?string',\n            subdivision: '?string',\n        },\n    },\n    PersonalizationTargetInfos: {\n        type: 'PersonalizationTargetInfos',\n        props: {\n            target: ['PersonalizationTargetInfo'],\n        },\n    },\n    PersonalizationTargetInfo: {\n        type: 'PersonalizationTargetInfo',\n        props: {\n            groupName: 'string',\n            priority: '?number',\n            targetType: 'string',\n            targetValue: 'string',\n        },\n    },\n    AuraDefinitionBundle: {\n        type: 'AuraDefinitionBundle',\n        props: {\n            SVGContent: '?string',\n            apiVersion: '?number',\n            controllerContent: '?string',\n            description: '?string',\n            designContent: '?string',\n            documentationContent: '?string',\n            helperContent: '?string',\n            markup: '?string',\n            modelContent: '?string',\n            packageVersions: ['PackageVersion'],\n            rendererContent: '?string',\n            styleContent: '?string',\n            testsuiteContent: '?string',\n            type: '?string',\n        },\n        extends: 'Metadata',\n    },\n    PackageVersion: {\n        type: 'PackageVersion',\n        props: {\n            majorNumber: 'number',\n            minorNumber: 'number',\n            namespace: 'string',\n        },\n    },\n    AuthProvider: {\n        type: 'AuthProvider',\n        props: {\n            appleTeam: '?string',\n            authorizeUrl: '?string',\n            consumerKey: '?string',\n            consumerSecret: '?string',\n            customMetadataTypeRecord: '?string',\n            defaultScopes: '?string',\n            ecKey: '?string',\n            errorUrl: '?string',\n            executionUser: '?string',\n            friendlyName: 'string',\n            iconUrl: '?string',\n            idTokenIssuer: '?string',\n            includeOrgIdInIdentifier: '?boolean',\n            linkKickoffUrl: '?string',\n            logoutUrl: '?string',\n            oauthKickoffUrl: '?string',\n            plugin: '?string',\n            portal: '?string',\n            providerType: 'string',\n            registrationHandler: '?string',\n            sendAccessTokenInHeader: '?boolean',\n            sendClientCredentialsInHeader: '?boolean',\n            sendSecretInApis: '?boolean',\n            ssoKickoffUrl: '?string',\n            tokenUrl: '?string',\n            userInfoUrl: '?string',\n        },\n        extends: 'Metadata',\n    },\n    AutoResponseRule: {\n        type: 'AutoResponseRule',\n        props: {\n            active: '?boolean',\n            ruleEntry: ['RuleEntry'],\n        },\n        extends: 'Metadata',\n    },\n    AutoResponseRules: {\n        type: 'AutoResponseRules',\n        props: {\n            autoResponseRule: ['AutoResponseRule'],\n        },\n        extends: 'Metadata',\n    },\n    BlockchainSettings: {\n        type: 'BlockchainSettings',\n        props: {\n            enableBcp: '?boolean',\n            enableBcpCoin: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    Bot: {\n        type: 'Bot',\n        props: {\n            botMlDomain: '?LocalMlDomain',\n            botUser: '?string',\n            botVersions: ['BotVersion'],\n            contextVariables: ['ConversationContextVariable'],\n            description: '?string',\n            label: '?string',\n        },\n        extends: 'Metadata',\n    },\n    LocalMlDomain: {\n        type: 'LocalMlDomain',\n        props: {\n            label: 'string',\n            mlIntents: ['MlIntent'],\n            mlSlotClasses: ['MlSlotClass'],\n            name: 'string',\n        },\n    },\n    MlIntent: {\n        type: 'MlIntent',\n        props: {\n            description: '?string',\n            developerName: 'string',\n            label: 'string',\n            mlIntentUtterances: ['MlIntentUtterance'],\n            relatedMlIntents: ['MlRelatedIntent'],\n        },\n    },\n    MlIntentUtterance: {\n        type: 'MlIntentUtterance',\n        props: {\n            utterance: 'string',\n        },\n    },\n    MlRelatedIntent: {\n        type: 'MlRelatedIntent',\n        props: {\n            relatedMlIntent: 'string',\n        },\n    },\n    MlSlotClass: {\n        type: 'MlSlotClass',\n        props: {\n            dataType: 'string',\n            description: '?string',\n            developerName: 'string',\n            extractionRegex: '?string',\n            extractionType: '?string',\n            label: 'string',\n            mlSlotClassValues: ['MlSlotClassValue'],\n        },\n    },\n    MlSlotClassValue: {\n        type: 'MlSlotClassValue',\n        props: {\n            synonymGroup: '?SynonymGroup',\n            value: 'string',\n        },\n    },\n    SynonymGroup: {\n        type: 'SynonymGroup',\n        props: {\n            languages: ['string'],\n            terms: ['string'],\n        },\n    },\n    BotVersion: {\n        type: 'BotVersion',\n        props: {\n            botDialogGroups: ['BotDialogGroup'],\n            botDialogs: ['BotDialog'],\n            conversationVariables: ['ConversationVariable'],\n            entryDialog: 'string',\n            mainMenuDialog: 'string',\n            responseDelayMilliseconds: '?number',\n        },\n        extends: 'Metadata',\n    },\n    BotDialogGroup: {\n        type: 'BotDialogGroup',\n        props: {\n            description: '?string',\n            developerName: 'string',\n            label: 'string',\n        },\n    },\n    BotDialog: {\n        type: 'BotDialog',\n        props: {\n            botDialogGroup: '?string',\n            botSteps: ['BotStep'],\n            description: '?string',\n            developerName: 'string',\n            label: 'string',\n            mlIntent: '?string',\n            mlIntentTrainingEnabled: '?boolean',\n            showInFooterMenu: '?boolean',\n        },\n    },\n    BotStep: {\n        type: 'BotStep',\n        props: {\n            booleanFilter: '?string',\n            botInvocation: '?BotInvocation',\n            botMessages: ['BotMessage'],\n            botNavigation: '?BotNavigation',\n            botStepConditions: ['BotStepCondition'],\n            botSteps: ['BotStep'],\n            botVariableOperation: '?BotVariableOperation',\n            conversationRecordLookup: '?ConversationRecordLookup',\n            conversationSystemMessage: '?ConversationSystemMessage',\n            type: 'string',\n        },\n    },\n    BotInvocation: {\n        type: 'BotInvocation',\n        props: {\n            invocationActionName: '?string',\n            invocationActionType: '?string',\n            invocationMappings: ['BotInvocationMapping'],\n        },\n    },\n    BotInvocationMapping: {\n        type: 'BotInvocationMapping',\n        props: {\n            parameterName: 'string',\n            type: 'string',\n            value: '?string',\n            variableName: '?string',\n            variableType: '?string',\n        },\n    },\n    BotMessage: {\n        type: 'BotMessage',\n        props: {\n            message: 'string',\n        },\n    },\n    BotNavigation: {\n        type: 'BotNavigation',\n        props: {\n            botNavigationLinks: ['BotNavigationLink'],\n            type: 'string',\n        },\n    },\n    BotNavigationLink: {\n        type: 'BotNavigationLink',\n        props: {\n            label: '?string',\n            targetBotDialog: 'string',\n        },\n    },\n    BotStepCondition: {\n        type: 'BotStepCondition',\n        props: {\n            leftOperandName: 'string',\n            leftOperandType: 'string',\n            operatorType: 'string',\n            rightOperandValue: '?string',\n        },\n    },\n    BotVariableOperation: {\n        type: 'BotVariableOperation',\n        props: {\n            botInvocation: '?BotInvocation',\n            botMessages: ['BotMessage'],\n            botQuickReplyOptions: ['BotQuickReplyOption'],\n            botVariableOperands: ['BotVariableOperand'],\n            invalidInputBotNavigation: '?BotNavigation',\n            quickReplyOptionTemplate: '?string',\n            quickReplyType: '?string',\n            quickReplyWidgetType: '?string',\n            sourceVariableName: '?string',\n            sourceVariableType: '?string',\n            type: 'string',\n        },\n    },\n    BotQuickReplyOption: {\n        type: 'BotQuickReplyOption',\n        props: {\n            literalValue: 'string',\n        },\n    },\n    BotVariableOperand: {\n        type: 'BotVariableOperand',\n        props: {\n            disableAutoFill: '?boolean',\n            sourceName: '?string',\n            sourceType: '?string',\n            sourceValue: '?string',\n            targetName: 'string',\n            targetType: 'string',\n        },\n    },\n    ConversationRecordLookup: {\n        type: 'ConversationRecordLookup',\n        props: {\n            SObjectType: 'string',\n            lookupFields: ['ConversationRecordLookupField'],\n            maxLookupResults: 'number',\n            sourceVariableName: 'string',\n            sourceVariableType: 'string',\n            targetVariableName: 'string',\n        },\n    },\n    ConversationRecordLookupField: {\n        type: 'ConversationRecordLookupField',\n        props: {\n            fieldName: 'string',\n        },\n    },\n    ConversationSystemMessage: {\n        type: 'ConversationSystemMessage',\n        props: {\n            systemMessageMappings: ['ConversationSystemMessageMapping'],\n            type: 'string',\n        },\n    },\n    ConversationSystemMessageMapping: {\n        type: 'ConversationSystemMessageMapping',\n        props: {\n            mappingType: 'string',\n            parameterType: 'string',\n            variableName: 'string',\n        },\n    },\n    ConversationVariable: {\n        type: 'ConversationVariable',\n        props: {\n            SObjectType: '?string',\n            collectionType: '?string',\n            dataType: 'string',\n            developerName: 'string',\n            label: 'string',\n        },\n    },\n    ConversationContextVariable: {\n        type: 'ConversationContextVariable',\n        props: {\n            SObjectType: '?string',\n            contextVariableMappings: ['ConversationContextVariableMapping'],\n            dataType: 'string',\n            developerName: 'string',\n            label: 'string',\n        },\n    },\n    ConversationContextVariableMapping: {\n        type: 'ConversationContextVariableMapping',\n        props: {\n            SObjectType: 'string',\n            fieldName: 'string',\n            messageType: 'string',\n        },\n    },\n    BotSettings: {\n        type: 'BotSettings',\n        props: {\n            enableBots: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    BrandingSet: {\n        type: 'BrandingSet',\n        props: {\n            brandingSetProperty: ['BrandingSetProperty'],\n            description: '?string',\n            masterLabel: 'string',\n            type: '?string',\n        },\n        extends: 'Metadata',\n    },\n    BrandingSetProperty: {\n        type: 'BrandingSetProperty',\n        props: {\n            propertyName: 'string',\n            propertyValue: '?string',\n        },\n    },\n    BusinessHoursEntry: {\n        type: 'BusinessHoursEntry',\n        props: {\n            active: '?boolean',\n            default: 'boolean',\n            fridayEndTime: '?string',\n            fridayStartTime: '?string',\n            mondayEndTime: '?string',\n            mondayStartTime: '?string',\n            name: '?string',\n            saturdayEndTime: '?string',\n            saturdayStartTime: '?string',\n            sundayEndTime: '?string',\n            sundayStartTime: '?string',\n            thursdayEndTime: '?string',\n            thursdayStartTime: '?string',\n            timeZoneId: '?string',\n            tuesdayEndTime: '?string',\n            tuesdayStartTime: '?string',\n            wednesdayEndTime: '?string',\n            wednesdayStartTime: '?string',\n        },\n        extends: 'Metadata',\n    },\n    BusinessHoursSettings: {\n        type: 'BusinessHoursSettings',\n        props: {\n            businessHours: ['BusinessHoursEntry'],\n            holidays: ['Holiday'],\n        },\n        extends: 'Metadata',\n    },\n    Holiday: {\n        type: 'Holiday',\n        props: {\n            activityDate: '?string',\n            businessHours: ['string'],\n            description: '?string',\n            endTime: '?string',\n            isRecurring: '?boolean',\n            name: '?string',\n            recurrenceDayOfMonth: '?number',\n            recurrenceDayOfWeek: ['string'],\n            recurrenceDayOfWeekMask: '?number',\n            recurrenceEndDate: '?string',\n            recurrenceInstance: '?string',\n            recurrenceInterval: '?number',\n            recurrenceMonthOfYear: '?string',\n            recurrenceStartDate: '?string',\n            recurrenceType: '?string',\n            startTime: '?string',\n        },\n    },\n    BusinessProcess: {\n        type: 'BusinessProcess',\n        props: {\n            description: '?string',\n            isActive: '?boolean',\n            values: ['PicklistValue'],\n        },\n        extends: 'Metadata',\n    },\n    PicklistValue: {\n        type: 'PicklistValue',\n        props: {\n            color: '?string',\n            default: 'boolean',\n            description: '?string',\n            isActive: '?boolean',\n            allowEmail: '?boolean',\n            closed: '?boolean',\n            controllingFieldValues: ['string'],\n            converted: '?boolean',\n            cssExposed: '?boolean',\n            forecastCategory: '?string',\n            highPriority: '?boolean',\n            probability: '?number',\n            reverseRole: '?string',\n            reviewed: '?boolean',\n            won: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    CMSConnectSource: {\n        type: 'CMSConnectSource',\n        props: {\n            cmsConnectAsset: ['CMSConnectAsset'],\n            cmsConnectLanguage: ['CMSConnectLanguage'],\n            cmsConnectPersonalization: '?CMSConnectPersonalization',\n            cmsConnectResourceType: ['CMSConnectResourceType'],\n            connectionType: 'string',\n            cssScope: '?string',\n            developerName: 'string',\n            languageEnabled: '?string',\n            masterLabel: 'string',\n            namedCredential: '?string',\n            personalizationEnabled: '?string',\n            rootPath: '?string',\n            sortOrder: 'number',\n            status: 'string',\n            type: 'string',\n            websiteUrl: '?string',\n        },\n        extends: 'Metadata',\n    },\n    CMSConnectAsset: {\n        type: 'CMSConnectAsset',\n        props: {\n            assetPath: 'string',\n            assetType: 'string',\n            sortOrder: 'number',\n        },\n    },\n    CMSConnectLanguage: {\n        type: 'CMSConnectLanguage',\n        props: {\n            cmsLanguage: 'string',\n            language: 'string',\n        },\n    },\n    CMSConnectPersonalization: {\n        type: 'CMSConnectPersonalization',\n        props: {\n            connectorPage: 'string',\n            connectorPageAsset: 'string',\n        },\n    },\n    CMSConnectResourceType: {\n        type: 'CMSConnectResourceType',\n        props: {\n            cmsConnectResourceDefinition: ['CMSConnectResourceDefinition'],\n            developerName: 'string',\n            masterLabel: 'string',\n            resourceType: 'string',\n        },\n    },\n    CMSConnectResourceDefinition: {\n        type: 'CMSConnectResourceDefinition',\n        props: {\n            developerName: 'string',\n            masterLabel: 'string',\n            options: 'number',\n            payloadType: 'string',\n            resourceIdPath: '?string',\n            resourceNamePath: '?string',\n            resourcePath: 'string',\n            rootNodePath: '?string',\n        },\n    },\n    CallCenter: {\n        type: 'CallCenter',\n        props: {\n            adapterUrl: '?string',\n            customSettings: '?string',\n            displayName: 'string',\n            displayNameLabel: 'string',\n            internalNameLabel: 'string',\n            sections: ['CallCenterSection'],\n            version: '?string',\n        },\n        extends: 'Metadata',\n    },\n    CallCenterSection: {\n        type: 'CallCenterSection',\n        props: {\n            items: ['CallCenterItem'],\n            label: 'string',\n            name: 'string',\n        },\n    },\n    CallCenterItem: {\n        type: 'CallCenterItem',\n        props: {\n            label: 'string',\n            name: 'string',\n            value: 'string',\n        },\n    },\n    CampaignInfluenceModel: {\n        type: 'CampaignInfluenceModel',\n        props: {\n            isActive: '?boolean',\n            isDefaultModel: 'boolean',\n            isModelLocked: 'boolean',\n            modelDescription: '?string',\n            name: 'string',\n            recordPreference: '?string',\n        },\n        extends: 'Metadata',\n    },\n    CampaignSettings: {\n        type: 'CampaignSettings',\n        props: {\n            enableAutoCampInfluenceDisabled: '?boolean',\n            enableB2bmaCampaignInfluence2: '?boolean',\n            enableCampaignHistoryTrackEnabled: '?boolean',\n            enableCampaignInfluence2: '?boolean',\n            enableCampaignMemberTWCF: '?boolean',\n            enableSuppressNoValueCI2: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    CanvasMetadata: {\n        type: 'CanvasMetadata',\n        props: {\n            accessMethod: 'string',\n            canvasOptions: '?string',\n            canvasUrl: 'string',\n            lifecycleClass: '?string',\n            locationOptions: '?string',\n            samlInitiationMethod: '?string',\n        },\n        extends: 'Metadata',\n    },\n    CaseClassificationSettings: {\n        type: 'CaseClassificationSettings',\n        props: {\n            caseClassificationRecommendations: '?boolean',\n            reRunAttributeBasedRules: '?boolean',\n            runAssignmentRules: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    CaseSettings: {\n        type: 'CaseSettings',\n        props: {\n            caseAssignNotificationTemplate: '?string',\n            caseAutoProcUser: '?boolean',\n            caseCloseNotificationTemplate: '?string',\n            caseCommentNotificationTemplate: '?string',\n            caseCreateNotificationTemplate: '?string',\n            caseFeedItemSettings: ['FeedItemSettings'],\n            caseFeedReadUnreadLtng: '?boolean',\n            caseMergeInLightning: '?boolean',\n            closeCaseThroughStatusChange: '?boolean',\n            defaultCaseFeedLayoutOn: '?boolean',\n            defaultCaseOwner: '?string',\n            defaultCaseOwnerType: '?string',\n            defaultCaseUser: '?string',\n            emailActionDefaultsHandlerClass: '?string',\n            emailToCase: '?EmailToCaseSettings',\n            enableCaseFeed: '?boolean',\n            enableCollapseEmailThread: '?boolean',\n            enableDraftEmails: '?boolean',\n            enableEarlyEscalationRuleTriggers: '?boolean',\n            enableEmailActionDefaultsHandler: '?boolean',\n            enableSuggestedArticlesApplication: '?boolean',\n            enableSuggestedArticlesCustomerPortal: '?boolean',\n            enableSuggestedArticlesPartnerPortal: '?boolean',\n            enableSuggestedSolutions: '?boolean',\n            escalateCaseBefore: '?boolean',\n            genericMessageEnabled: '?boolean',\n            keepRecordTypeOnAssignmentRule: '?boolean',\n            notifyContactOnCaseComment: '?boolean',\n            notifyDefaultCaseOwner: '?boolean',\n            notifyOwnerOnCaseComment: '?boolean',\n            notifyOwnerOnCaseOwnerChange: '?boolean',\n            predictiveSupportEnabled: '?boolean',\n            showEmailAttachmentsInCaseAttachmentsRL: '?boolean',\n            showFewerCloseActions: '?boolean',\n            systemUserEmail: '?string',\n            useSystemEmailAddress: '?boolean',\n            useSystemUserAsDefaultCaseUser: '?boolean',\n            webToCase: '?WebToCaseSettings',\n        },\n        extends: 'Metadata',\n    },\n    FeedItemSettings: {\n        type: 'FeedItemSettings',\n        props: {\n            characterLimit: '?number',\n            displayFormat: '?string',\n            feedItemType: 'string',\n        },\n    },\n    EmailToCaseSettings: {\n        type: 'EmailToCaseSettings',\n        props: {\n            enableE2CAttachmentAsFile: '?boolean',\n            enableE2CSourceTracking: '?boolean',\n            enableEmailToCase: '?boolean',\n            enableHtmlEmail: '?boolean',\n            enableOnDemandEmailToCase: '?boolean',\n            enableThreadIDInBody: '?boolean',\n            enableThreadIDInSubject: '?boolean',\n            notifyOwnerOnNewCaseEmail: '?boolean',\n            overEmailLimitAction: '?string',\n            preQuoteSignature: '?boolean',\n            routingAddresses: ['EmailToCaseRoutingAddress'],\n            unauthorizedSenderAction: '?string',\n        },\n    },\n    EmailToCaseRoutingAddress: {\n        type: 'EmailToCaseRoutingAddress',\n        props: {\n            addressType: '?string',\n            authorizedSenders: '?string',\n            caseOrigin: '?string',\n            caseOwner: '?string',\n            caseOwnerType: '?string',\n            casePriority: '?string',\n            createTask: '?boolean',\n            emailAddress: '?string',\n            emailServicesAddress: '?string',\n            isVerified: '?boolean',\n            routingName: '?string',\n            saveEmailHeaders: '?boolean',\n            taskStatus: '?string',\n        },\n    },\n    WebToCaseSettings: {\n        type: 'WebToCaseSettings',\n        props: {\n            caseOrigin: '?string',\n            defaultResponseTemplate: '?string',\n            enableWebToCase: '?boolean',\n        },\n    },\n    CaseSubjectParticle: {\n        type: 'CaseSubjectParticle',\n        props: {\n            index: 'number',\n            textField: '?string',\n            type: 'string',\n        },\n        extends: 'Metadata',\n    },\n    ChannelLayout: {\n        type: 'ChannelLayout',\n        props: {\n            enabledChannels: ['string'],\n            label: 'string',\n            layoutItems: ['ChannelLayoutItem'],\n            recordType: '?string',\n        },\n        extends: 'Metadata',\n    },\n    ChannelLayoutItem: {\n        type: 'ChannelLayoutItem',\n        props: {\n            field: 'string',\n        },\n    },\n    ChatterAnswersSettings: {\n        type: 'ChatterAnswersSettings',\n        props: {\n            emailFollowersOnBestAnswer: '?boolean',\n            emailFollowersOnReply: '?boolean',\n            emailOwnerOnPrivateReply: '?boolean',\n            emailOwnerOnReply: '?boolean',\n            enableAnswerViaEmail: '?boolean',\n            enableChatterAnswers: 'boolean',\n            enableFacebookSSO: '?boolean',\n            enableInlinePublisher: '?boolean',\n            enableReputation: '?boolean',\n            enableRichTextEditor: '?boolean',\n            facebookAuthProvider: '?string',\n            showInPortals: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    ChatterEmailsMDSettings: {\n        type: 'ChatterEmailsMDSettings',\n        props: {\n            enableChatterDigestEmailsApiOnly: '?boolean',\n            enableChatterEmailAttachment: '?boolean',\n            enableCollaborationEmail: '?boolean',\n            enableDisplayAppDownloadBadges: '?boolean',\n            enableEmailReplyToChatter: '?boolean',\n            enableEmailToChatter: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    ChatterExtension: {\n        type: 'ChatterExtension',\n        props: {\n            compositionComponent: 'string',\n            description: 'string',\n            extensionName: 'string',\n            headerText: '?string',\n            hoverText: '?string',\n            icon: 'string',\n            isProtected: '?boolean',\n            masterLabel: 'string',\n            renderComponent: 'string',\n            type: 'string',\n        },\n        extends: 'Metadata',\n    },\n    ChatterSettings: {\n        type: 'ChatterSettings',\n        props: {\n            allowChatterGroupArchiving: '?boolean',\n            allowRecordsInChatterGroup: '?boolean',\n            allowSharingInChatterGroup: '?boolean',\n            enableApprovalRequest: '?boolean',\n            enableChatter: '?boolean',\n            enableChatterEmoticons: '?boolean',\n            enableFeedEdit: '?boolean',\n            enableFeedPinning: '?boolean',\n            enableFeedsDraftPosts: '?boolean',\n            enableFeedsRichText: '?boolean',\n            enableInviteCsnUsers: '?boolean',\n            enableOutOfOfficeEnabledPref: '?boolean',\n            enableRichLinkPreviewsInFeed: '?boolean',\n            enableTodayRecsInFeed: '?boolean',\n            unlistedGroupsEnabled: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    CleanDataService: {\n        type: 'CleanDataService',\n        props: {\n            cleanRules: ['CleanRule'],\n            description: 'string',\n            masterLabel: 'string',\n            matchEngine: 'string',\n        },\n        extends: 'Metadata',\n    },\n    CleanRule: {\n        type: 'CleanRule',\n        props: {\n            bulkEnabled: 'boolean',\n            bypassTriggers: 'boolean',\n            bypassWorkflow: 'boolean',\n            description: 'string',\n            developerName: 'string',\n            fieldMappings: ['FieldMapping'],\n            masterLabel: 'string',\n            matchRule: 'string',\n            sourceSobjectType: 'string',\n            status: 'string',\n            targetSobjectType: 'string',\n        },\n    },\n    FieldMapping: {\n        type: 'FieldMapping',\n        props: {\n            SObjectType: 'string',\n            developerName: 'string',\n            fieldMappingRows: ['FieldMappingRow'],\n            masterLabel: 'string',\n        },\n    },\n    FieldMappingRow: {\n        type: 'FieldMappingRow',\n        props: {\n            SObjectType: 'string',\n            fieldMappingFields: ['FieldMappingField'],\n            fieldName: 'string',\n            mappingOperation: 'string',\n        },\n    },\n    FieldMappingField: {\n        type: 'FieldMappingField',\n        props: {\n            dataServiceField: 'string',\n            dataServiceObjectName: 'string',\n            priority: 'number',\n        },\n    },\n    CommandAction: {\n        type: 'CommandAction',\n        props: {\n            actionType: 'string',\n            description: '?string',\n            intents: ['CommandActionIntent'],\n            label: 'string',\n            parameters: ['CommandActionParam'],\n            responseTemplates: ['CommandActionResponse'],\n            target: '?string',\n        },\n        extends: 'Metadata',\n    },\n    CommandActionIntent: {\n        type: 'CommandActionIntent',\n        props: {\n            phrase: 'string',\n            responseTemplates: ['CommandActionResponse'],\n        },\n    },\n    CommandActionResponse: {\n        type: 'CommandActionResponse',\n        props: {\n            template: 'string',\n        },\n    },\n    CommandActionParam: {\n        type: 'CommandActionParam',\n        props: {\n            defaultValue: '?string',\n            description: '?string',\n            name: 'string',\n            required: '?boolean',\n            type: 'string',\n        },\n    },\n    CommunitiesSettings: {\n        type: 'CommunitiesSettings',\n        props: {\n            canModerateAllFeedPosts: '?boolean',\n            canModerateInternalFeedPosts: '?boolean',\n            embeddedVisualforcePages: '?boolean',\n            enableCommunityWorkspaces: '?boolean',\n            enableCspContactVisibilityPref: '?boolean',\n            enableCspNotesOnAccConPref: '?boolean',\n            enableEnablePRM: '?boolean',\n            enableExternalAccHierPref: '?boolean',\n            enableGuestRecordReassignOrgPref: '?boolean',\n            enableInviteChatterGuestEnabled: '?boolean',\n            enableNetPortalUserReportOpts: '?boolean',\n            enableNetworksEnabled: '?boolean',\n            enableOotbProfExtUserOpsEnable: '?boolean',\n            enablePRMAccRelPref: '?boolean',\n            enablePowerCustomerCaseStatus: '?boolean',\n            enableRelaxPartnerAccountFieldPref: '?boolean',\n            enableUsernameUniqForOrgPref: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    Community: {\n        type: 'Community',\n        props: {\n            active: '?boolean',\n            chatterAnswersFacebookSsoUrl: '?string',\n            communityFeedPage: '?string',\n            dataCategoryName: '?string',\n            description: '?string',\n            emailFooterDocument: '?string',\n            emailHeaderDocument: '?string',\n            emailNotificationUrl: '?string',\n            enableChatterAnswers: '?boolean',\n            enablePrivateQuestions: '?boolean',\n            expertsGroup: '?string',\n            portal: '?string',\n            reputationLevels: '?ReputationLevels',\n            showInPortal: '?boolean',\n            site: '?string',\n        },\n        extends: 'Metadata',\n    },\n    ReputationLevels: {\n        type: 'ReputationLevels',\n        props: {\n            chatterAnswersReputationLevels: ['ChatterAnswersReputationLevel'],\n            ideaReputationLevels: ['IdeaReputationLevel'],\n        },\n    },\n    ChatterAnswersReputationLevel: {\n        type: 'ChatterAnswersReputationLevel',\n        props: {\n            name: 'string',\n            value: 'number',\n        },\n    },\n    IdeaReputationLevel: {\n        type: 'IdeaReputationLevel',\n        props: {\n            name: 'string',\n            value: 'number',\n        },\n    },\n    CommunityTemplateDefinition: {\n        type: 'CommunityTemplateDefinition',\n        props: {\n            baseTemplate: '?string',\n            bundlesInfo: ['CommunityTemplateBundleInfo'],\n            category: 'string',\n            defaultBrandingSet: '?string',\n            defaultThemeDefinition: 'string',\n            description: '?string',\n            enableExtendedCleanUpOnDelete: '?boolean',\n            masterLabel: 'string',\n            navigationLinkSet: ['NavigationLinkSet'],\n            pageSetting: ['CommunityTemplatePageSetting'],\n            publisher: '?string',\n        },\n        extends: 'Metadata',\n    },\n    CommunityTemplateBundleInfo: {\n        type: 'CommunityTemplateBundleInfo',\n        props: {\n            description: '?string',\n            image: '?string',\n            order: 'number',\n            title: 'string',\n            type: 'string',\n        },\n    },\n    CommunityThemeBundleInfo: {\n        type: 'CommunityThemeBundleInfo',\n        props: {},\n        extends: 'CommunityTemplateBundleInfo',\n    },\n    NavigationLinkSet: {\n        type: 'NavigationLinkSet',\n        props: {\n            navigationMenuItem: ['NavigationMenuItem'],\n        },\n    },\n    NavigationMenuItem: {\n        type: 'NavigationMenuItem',\n        props: {\n            defaultListViewId: '?string',\n            label: 'string',\n            menuItemBranding: '?NavigationMenuItemBranding',\n            position: 'number',\n            publiclyAvailable: '?boolean',\n            subMenu: '?NavigationSubMenu',\n            target: '?string',\n            targetPreference: '?string',\n            type: 'string',\n        },\n    },\n    NavigationMenuItemBranding: {\n        type: 'NavigationMenuItemBranding',\n        props: {\n            tileImage: '?string',\n        },\n    },\n    NavigationSubMenu: {\n        type: 'NavigationSubMenu',\n        props: {\n            navigationMenuItem: ['NavigationMenuItem'],\n        },\n    },\n    CommunityTemplatePageSetting: {\n        type: 'CommunityTemplatePageSetting',\n        props: {\n            page: 'string',\n            themeLayout: 'string',\n        },\n    },\n    CommunityThemeDefinition: {\n        type: 'CommunityThemeDefinition',\n        props: {\n            bundlesInfo: ['CommunityThemeBundleInfo'],\n            customThemeLayoutType: ['CommunityCustomThemeLayoutType'],\n            defaultBrandingSet: '?string',\n            description: '?string',\n            enableExtendedCleanUpOnDelete: '?boolean',\n            masterLabel: 'string',\n            publisher: '?string',\n            themeRouteOverride: ['CommunityThemeRouteOverride'],\n            themeSetting: ['CommunityThemeSetting'],\n        },\n        extends: 'Metadata',\n    },\n    CommunityCustomThemeLayoutType: {\n        type: 'CommunityCustomThemeLayoutType',\n        props: {\n            description: '?string',\n            label: 'string',\n        },\n    },\n    CommunityThemeRouteOverride: {\n        type: 'CommunityThemeRouteOverride',\n        props: {\n            customThemeLayoutType: '?string',\n            pageAttributes: 'string',\n            pageType: 'string',\n            themeLayoutType: '?string',\n        },\n    },\n    CommunityThemeSetting: {\n        type: 'CommunityThemeSetting',\n        props: {\n            customThemeLayoutType: '?string',\n            themeLayout: 'string',\n            themeLayoutType: '?string',\n        },\n    },\n    CompactLayout: {\n        type: 'CompactLayout',\n        props: {\n            fields: ['string'],\n            label: 'string',\n        },\n        extends: 'Metadata',\n    },\n    CompanySettings: {\n        type: 'CompanySettings',\n        props: {\n            enableCustomFiscalYear: 'boolean',\n            fiscalYear: '?FiscalYearSettings',\n        },\n        extends: 'Metadata',\n    },\n    FiscalYearSettings: {\n        type: 'FiscalYearSettings',\n        props: {\n            fiscalYearNameBasedOn: '?string',\n            startMonth: '?string',\n        },\n    },\n    ConnectedApp: {\n        type: 'ConnectedApp',\n        props: {\n            attributes: ['ConnectedAppAttribute'],\n            canvas: '?CanvasMetadata',\n            canvasConfig: '?ConnectedAppCanvasConfig',\n            contactEmail: 'string',\n            contactPhone: '?string',\n            description: '?string',\n            iconUrl: '?string',\n            infoUrl: '?string',\n            ipRanges: ['ConnectedAppIpRange'],\n            label: 'string',\n            logoUrl: '?string',\n            mobileAppConfig: '?ConnectedAppMobileDetailConfig',\n            mobileStartUrl: '?string',\n            oauthConfig: '?ConnectedAppOauthConfig',\n            permissionSetName: ['string'],\n            plugin: '?string',\n            pluginExecutionUser: '?string',\n            profileName: ['string'],\n            samlConfig: '?ConnectedAppSamlConfig',\n            startUrl: '?string',\n        },\n        extends: 'Metadata',\n    },\n    ConnectedAppAttribute: {\n        type: 'ConnectedAppAttribute',\n        props: {\n            formula: 'string',\n            key: 'string',\n        },\n    },\n    ConnectedAppCanvasConfig: {\n        type: 'ConnectedAppCanvasConfig',\n        props: {\n            accessMethod: 'string',\n            canvasUrl: 'string',\n            lifecycleClass: '?string',\n            locations: ['string'],\n            options: ['string'],\n            samlInitiationMethod: '?string',\n        },\n    },\n    ConnectedAppIpRange: {\n        type: 'ConnectedAppIpRange',\n        props: {\n            description: '?string',\n            end: 'string',\n            start: 'string',\n        },\n    },\n    ConnectedAppMobileDetailConfig: {\n        type: 'ConnectedAppMobileDetailConfig',\n        props: {\n            applicationBinaryFile: '?string',\n            applicationBinaryFileName: '?string',\n            applicationBundleIdentifier: '?string',\n            applicationFileLength: '?number',\n            applicationIconFile: '?string',\n            applicationIconFileName: '?string',\n            applicationInstallUrl: '?string',\n            devicePlatform: 'string',\n            deviceType: '?string',\n            minimumOsVersion: '?string',\n            privateApp: '?boolean',\n            version: 'string',\n        },\n    },\n    ConnectedAppOauthConfig: {\n        type: 'ConnectedAppOauthConfig',\n        props: {\n            callbackUrl: 'string',\n            certificate: '?string',\n            consumerKey: '?string',\n            consumerSecret: '?string',\n            idTokenConfig: '?ConnectedAppOauthIdToken',\n            isAdminApproved: '?boolean',\n            scopes: ['string'],\n            singleLogoutUrl: '?string',\n        },\n    },\n    ConnectedAppOauthIdToken: {\n        type: 'ConnectedAppOauthIdToken',\n        props: {\n            idTokenAudience: '?string',\n            idTokenIncludeAttributes: '?boolean',\n            idTokenIncludeCustomPerms: '?boolean',\n            idTokenIncludeStandardClaims: '?boolean',\n            idTokenValidity: '?number',\n        },\n    },\n    ConnectedAppSamlConfig: {\n        type: 'ConnectedAppSamlConfig',\n        props: {\n            acsUrl: 'string',\n            certificate: '?string',\n            encryptionCertificate: '?string',\n            encryptionType: '?string',\n            entityUrl: 'string',\n            issuer: '?string',\n            samlIdpSLOBindingEnum: '?string',\n            samlNameIdFormat: '?string',\n            samlSloUrl: '?string',\n            samlSubjectCustomAttr: '?string',\n            samlSubjectType: 'string',\n        },\n    },\n    ConnectedAppSettings: {\n        type: 'ConnectedAppSettings',\n        props: {\n            enableAdminApprovedAppsOnly: '?boolean',\n            enableSkipUserProvisioningWizardWelcomePage: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    ContentSettings: {\n        type: 'ContentSettings',\n        props: {\n            enableChatterFileLink: '?boolean',\n            enableContent: '?boolean',\n            enableContentAutoAssign: '?boolean',\n            enableContentDistForPortalUsers: '?boolean',\n            enableContentDistPwOptionsBit1: '?boolean',\n            enableContentDistPwOptionsBit2: '?boolean',\n            enableContentDistribution: '?boolean',\n            enableContentSupportMultiLanguage: '?boolean',\n            enableContentWorkspaceAccess: '?boolean',\n            enableFileShareSetByRecord: '?boolean',\n            enableFilesUsrShareNetRestricted: '?boolean',\n            enableJPGPreviews: '?boolean',\n            enableLibraryManagedFiles: '?boolean',\n            enableSiteGuestUserToUploadFiles: '?boolean',\n            enableUploadFilesOnAttachments: '?boolean',\n            skipContentAssetTriggers: '?boolean',\n            skipContentAssetTriggersOnDeploy: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    ContractSettings: {\n        type: 'ContractSettings',\n        props: {\n            autoCalculateEndDate: '?boolean',\n            autoExpirationDelay: '?string',\n            autoExpirationRecipient: '?string',\n            autoExpireContracts: '?boolean',\n            enableContractHistoryTracking: '?boolean',\n            notifyOwnersOnContractExpiration: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    CorsWhitelistOrigin: {\n        type: 'CorsWhitelistOrigin',\n        props: {\n            urlPattern: 'string',\n        },\n        extends: 'Metadata',\n    },\n    CspTrustedSite: {\n        type: 'CspTrustedSite',\n        props: {\n            context: '?string',\n            description: '?string',\n            endpointUrl: 'string',\n            isActive: 'boolean',\n        },\n        extends: 'Metadata',\n    },\n    CurrencySettings: {\n        type: 'CurrencySettings',\n        props: {\n            enableCurrencyEffectiveDates: '?boolean',\n            enableCurrencySymbolWithMultiCurrency: '?boolean',\n            enableMultiCurrency: '?boolean',\n            isMultiCurrencyActivationAllowed: '?boolean',\n            isParenCurrencyConvDisabled: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    CustomApplication: {\n        type: 'CustomApplication',\n        props: {\n            actionOverrides: ['AppActionOverride'],\n            brand: '?AppBrand',\n            consoleConfig: '?ServiceCloudConsoleConfig',\n            defaultLandingTab: '?string',\n            description: '?string',\n            formFactors: ['string'],\n            isNavAutoTempTabsDisabled: '?boolean',\n            isNavPersonalizationDisabled: '?boolean',\n            isServiceCloudConsole: '?boolean',\n            label: '?string',\n            logo: '?string',\n            navType: '?string',\n            preferences: '?AppPreferences',\n            profileActionOverrides: ['AppProfileActionOverride'],\n            setupExperience: '?string',\n            subscriberTabs: ['string'],\n            tabs: ['string'],\n            uiType: '?string',\n            utilityBar: '?string',\n            workspaceConfig: '?AppWorkspaceConfig',\n        },\n        extends: 'Metadata',\n    },\n    AppActionOverride: {\n        type: 'AppActionOverride',\n        props: {\n            pageOrSobjectType: 'string',\n        },\n        extends: 'ActionOverride',\n    },\n    ActionOverride: {\n        type: 'ActionOverride',\n        props: {\n            actionName: '?string',\n            comment: '?string',\n            content: '?string',\n            formFactor: '?string',\n            skipRecordTypeSelect: '?boolean',\n            type: '?string',\n        },\n    },\n    AppBrand: {\n        type: 'AppBrand',\n        props: {\n            footerColor: '?string',\n            headerColor: '?string',\n            logo: '?string',\n            logoVersion: '?number',\n            shouldOverrideOrgTheme: '?boolean',\n        },\n    },\n    ServiceCloudConsoleConfig: {\n        type: 'ServiceCloudConsoleConfig',\n        props: {\n            componentList: '?AppComponentList',\n            detailPageRefreshMethod: 'string',\n            footerColor: '?string',\n            headerColor: '?string',\n            keyboardShortcuts: 'KeyboardShortcuts',\n            listPlacement: 'ListPlacement',\n            listRefreshMethod: 'string',\n            liveAgentConfig: '?LiveAgentConfig',\n            primaryTabColor: '?string',\n            pushNotifications: ['PushNotification'],\n            tabLimitConfig: '?TabLimitConfig',\n            whitelistedDomains: ['string'],\n        },\n    },\n    AppComponentList: {\n        type: 'AppComponentList',\n        props: {\n            alignment: 'string',\n            components: ['string'],\n        },\n    },\n    KeyboardShortcuts: {\n        type: 'KeyboardShortcuts',\n        props: {\n            customShortcuts: ['CustomShortcut'],\n            defaultShortcuts: ['DefaultShortcut'],\n        },\n    },\n    CustomShortcut: {\n        type: 'CustomShortcut',\n        props: {\n            description: '?string',\n            eventName: 'string',\n        },\n        extends: 'DefaultShortcut',\n    },\n    DefaultShortcut: {\n        type: 'DefaultShortcut',\n        props: {\n            action: 'string',\n            active: 'boolean',\n            keyCommand: 'string',\n        },\n    },\n    ListPlacement: {\n        type: 'ListPlacement',\n        props: {\n            height: '?number',\n            location: 'string',\n            units: '?string',\n            width: '?number',\n        },\n    },\n    LiveAgentConfig: {\n        type: 'LiveAgentConfig',\n        props: {\n            enableLiveChat: '?boolean',\n            openNewAccountSubtab: '?boolean',\n            openNewCaseSubtab: '?boolean',\n            openNewContactSubtab: '?boolean',\n            openNewLeadSubtab: '?boolean',\n            openNewVFPageSubtab: '?boolean',\n            pageNamesToOpen: ['string'],\n            showKnowledgeArticles: '?boolean',\n        },\n    },\n    PushNotification: {\n        type: 'PushNotification',\n        props: {\n            fieldNames: ['string'],\n            objectName: 'string',\n        },\n    },\n    TabLimitConfig: {\n        type: 'TabLimitConfig',\n        props: {\n            maxNumberOfPrimaryTabs: '?string',\n            maxNumberOfSubTabs: '?string',\n        },\n    },\n    AppPreferences: {\n        type: 'AppPreferences',\n        props: {\n            enableCustomizeMyTabs: 'boolean',\n            enableKeyboardShortcuts: 'boolean',\n            enableListViewHover: 'boolean',\n            enableListViewReskin: 'boolean',\n            enableMultiMonitorComponents: 'boolean',\n            enablePinTabs: 'boolean',\n            enableTabHover: 'boolean',\n            enableTabLimits: 'boolean',\n            saveUserSessions: 'boolean',\n        },\n    },\n    AppProfileActionOverride: {\n        type: 'AppProfileActionOverride',\n        props: {\n            profile: 'string',\n        },\n        extends: 'ProfileActionOverride',\n    },\n    ProfileActionOverride: {\n        type: 'ProfileActionOverride',\n        props: {\n            actionName: 'string',\n            content: '?string',\n            formFactor: 'string',\n            pageOrSobjectType: 'string',\n            recordType: '?string',\n            type: 'string',\n        },\n    },\n    AppWorkspaceConfig: {\n        type: 'AppWorkspaceConfig',\n        props: {\n            mappings: ['WorkspaceMapping'],\n        },\n    },\n    WorkspaceMapping: {\n        type: 'WorkspaceMapping',\n        props: {\n            fieldName: '?string',\n            tab: 'string',\n        },\n    },\n    CustomApplicationComponent: {\n        type: 'CustomApplicationComponent',\n        props: {\n            buttonIconUrl: '?string',\n            buttonStyle: '?string',\n            buttonText: '?string',\n            buttonWidth: '?number',\n            height: '?number',\n            isHeightFixed: 'boolean',\n            isHidden: 'boolean',\n            isWidthFixed: 'boolean',\n            visualforcePage: 'string',\n            width: '?number',\n        },\n        extends: 'Metadata',\n    },\n    CustomFeedFilter: {\n        type: 'CustomFeedFilter',\n        props: {\n            criteria: ['FeedFilterCriterion'],\n            description: '?string',\n            isProtected: '?boolean',\n            label: 'string',\n        },\n        extends: 'Metadata',\n    },\n    FeedFilterCriterion: {\n        type: 'FeedFilterCriterion',\n        props: {\n            feedItemType: 'string',\n            feedItemVisibility: '?string',\n            relatedSObjectType: '?string',\n        },\n    },\n    CustomField: {\n        type: 'CustomField',\n        props: {\n            businessOwnerGroup: '?string',\n            businessOwnerUser: '?string',\n            businessStatus: '?string',\n            caseSensitive: '?boolean',\n            complianceGroup: '?string',\n            customDataType: '?string',\n            defaultValue: '?string',\n            deleteConstraint: '?string',\n            deprecated: '?boolean',\n            description: '?string',\n            displayFormat: '?string',\n            encryptionScheme: '?string',\n            escapeMarkup: '?boolean',\n            externalDeveloperName: '?string',\n            externalId: '?boolean',\n            fieldManageability: '?string',\n            formula: '?string',\n            formulaTreatBlanksAs: '?string',\n            inlineHelpText: '?string',\n            isAIPredictionField: '?boolean',\n            isConvertLeadDisabled: '?boolean',\n            isFilteringDisabled: '?boolean',\n            isNameField: '?boolean',\n            isSortingDisabled: '?boolean',\n            label: '?string',\n            length: '?number',\n            lookupFilter: '?LookupFilter',\n            maskChar: '?string',\n            maskType: '?string',\n            metadataRelationshipControllingField: '?string',\n            populateExistingRows: '?boolean',\n            precision: '?number',\n            referenceTargetField: '?string',\n            referenceTo: '?string',\n            relationshipLabel: '?string',\n            relationshipName: '?string',\n            relationshipOrder: '?number',\n            reparentableMasterDetail: '?boolean',\n            required: '?boolean',\n            restrictedAdminField: '?boolean',\n            scale: '?number',\n            securityClassification: '?string',\n            startingNumber: '?number',\n            stripMarkup: '?boolean',\n            summarizedField: '?string',\n            summaryFilterItems: ['FilterItem'],\n            summaryForeignKey: '?string',\n            summaryOperation: '?string',\n            trackFeedHistory: '?boolean',\n            trackHistory: '?boolean',\n            trackTrending: '?boolean',\n            translateData: '?boolean',\n            type: '?string',\n            unique: '?boolean',\n            valueSet: '?ValueSet',\n            visibleLines: '?number',\n            writeRequiresMasterRead: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    LookupFilter: {\n        type: 'LookupFilter',\n        props: {\n            active: 'boolean',\n            booleanFilter: '?string',\n            description: '?string',\n            errorMessage: '?string',\n            filterItems: ['FilterItem'],\n            infoMessage: '?string',\n            isOptional: 'boolean',\n        },\n    },\n    ValueSet: {\n        type: 'ValueSet',\n        props: {\n            controllingField: '?string',\n            restricted: '?boolean',\n            valueSetDefinition: '?ValueSetValuesDefinition',\n            valueSetName: '?string',\n            valueSettings: ['ValueSettings'],\n        },\n    },\n    ValueSetValuesDefinition: {\n        type: 'ValueSetValuesDefinition',\n        props: {\n            sorted: 'boolean',\n            value: ['CustomValue'],\n        },\n    },\n    CustomValue: {\n        type: 'CustomValue',\n        props: {\n            color: '?string',\n            default: 'boolean',\n            description: '?string',\n            isActive: '?boolean',\n            label: '?string',\n        },\n        extends: 'Metadata',\n    },\n    StandardValue: {\n        type: 'StandardValue',\n        props: {\n            allowEmail: '?boolean',\n            closed: '?boolean',\n            converted: '?boolean',\n            cssExposed: '?boolean',\n            forecastCategory: '?string',\n            groupingString: '?string',\n            highPriority: '?boolean',\n            probability: '?number',\n            reverseRole: '?string',\n            reviewed: '?boolean',\n            won: '?boolean',\n        },\n        extends: 'CustomValue',\n    },\n    ValueSettings: {\n        type: 'ValueSettings',\n        props: {\n            controllingFieldValue: ['string'],\n            valueName: 'string',\n        },\n    },\n    CustomHelpMenuSection: {\n        type: 'CustomHelpMenuSection',\n        props: {\n            customHelpMenuItems: ['CustomHelpMenuItem'],\n            masterLabel: 'string',\n        },\n        extends: 'Metadata',\n    },\n    CustomHelpMenuItem: {\n        type: 'CustomHelpMenuItem',\n        props: {\n            linkUrl: 'string',\n            masterLabel: 'string',\n            sortOrder: 'number',\n        },\n    },\n    CustomLabel: {\n        type: 'CustomLabel',\n        props: {\n            categories: '?string',\n            language: 'string',\n            protected: 'boolean',\n            shortDescription: 'string',\n            value: 'string',\n        },\n        extends: 'Metadata',\n    },\n    CustomLabels: {\n        type: 'CustomLabels',\n        props: {\n            labels: ['CustomLabel'],\n        },\n        extends: 'Metadata',\n    },\n    CustomMetadata: {\n        type: 'CustomMetadata',\n        props: {\n            description: '?string',\n            label: '?string',\n            protected: '?boolean',\n            values: ['CustomMetadataValue'],\n        },\n        extends: 'Metadata',\n    },\n    CustomMetadataValue: {\n        type: 'CustomMetadataValue',\n        props: {\n            field: 'string',\n            value: '?any',\n        },\n    },\n    CustomNotificationType: {\n        type: 'CustomNotificationType',\n        props: {\n            customNotifTypeName: 'string',\n            description: '?string',\n            desktop: 'boolean',\n            masterLabel: 'string',\n            mobile: 'boolean',\n        },\n        extends: 'Metadata',\n    },\n    CustomObject: {\n        type: 'CustomObject',\n        props: {\n            actionOverrides: ['ActionOverride'],\n            allowInChatterGroups: '?boolean',\n            articleTypeChannelDisplay: '?ArticleTypeChannelDisplay',\n            businessProcesses: ['BusinessProcess'],\n            compactLayoutAssignment: '?string',\n            compactLayouts: ['CompactLayout'],\n            customHelp: '?string',\n            customHelpPage: '?string',\n            customSettingsType: '?string',\n            deploymentStatus: '?string',\n            deprecated: '?boolean',\n            description: '?string',\n            enableActivities: '?boolean',\n            enableBulkApi: '?boolean',\n            enableDataTranslation: '?boolean',\n            enableDivisions: '?boolean',\n            enableEnhancedLookup: '?boolean',\n            enableFeeds: '?boolean',\n            enableHistory: '?boolean',\n            enableLicensing: '?boolean',\n            enableReports: '?boolean',\n            enableSearch: '?boolean',\n            enableSharing: '?boolean',\n            enableStreamingApi: '?boolean',\n            eventType: '?string',\n            externalDataSource: '?string',\n            externalName: '?string',\n            externalRepository: '?string',\n            externalSharingModel: '?string',\n            fieldSets: ['FieldSet'],\n            fields: ['CustomField'],\n            gender: '?string',\n            historyRetentionPolicy: '?HistoryRetentionPolicy',\n            household: '?boolean',\n            indexes: ['Index'],\n            label: '?string',\n            listViews: ['ListView'],\n            nameField: '?CustomField',\n            pluralLabel: '?string',\n            profileSearchLayouts: ['ProfileSearchLayouts'],\n            publishBehavior: '?string',\n            recordTypeTrackFeedHistory: '?boolean',\n            recordTypeTrackHistory: '?boolean',\n            recordTypes: ['RecordType'],\n            searchLayouts: '?SearchLayouts',\n            sharingModel: '?string',\n            sharingReasons: ['SharingReason'],\n            sharingRecalculations: ['SharingRecalculation'],\n            startsWith: '?string',\n            validationRules: ['ValidationRule'],\n            visibility: '?string',\n            webLinks: ['WebLink'],\n        },\n        extends: 'Metadata',\n    },\n    ArticleTypeChannelDisplay: {\n        type: 'ArticleTypeChannelDisplay',\n        props: {\n            articleTypeTemplates: ['ArticleTypeTemplate'],\n        },\n    },\n    ArticleTypeTemplate: {\n        type: 'ArticleTypeTemplate',\n        props: {\n            channel: 'string',\n            page: '?string',\n            template: 'string',\n        },\n    },\n    FieldSet: {\n        type: 'FieldSet',\n        props: {\n            availableFields: ['FieldSetItem'],\n            description: 'string',\n            displayedFields: ['FieldSetItem'],\n            label: 'string',\n        },\n        extends: 'Metadata',\n    },\n    FieldSetItem: {\n        type: 'FieldSetItem',\n        props: {\n            field: '?string',\n            isFieldManaged: '?boolean',\n            isRequired: '?boolean',\n        },\n    },\n    HistoryRetentionPolicy: {\n        type: 'HistoryRetentionPolicy',\n        props: {\n            archiveAfterMonths: 'number',\n            archiveRetentionYears: 'number',\n            description: '?string',\n        },\n    },\n    Index: {\n        type: 'Index',\n        props: {\n            fields: ['IndexField'],\n            label: 'string',\n        },\n        extends: 'Metadata',\n    },\n    IndexField: {\n        type: 'IndexField',\n        props: {\n            name: 'string',\n            sortDirection: 'string',\n        },\n    },\n    ListView: {\n        type: 'ListView',\n        props: {\n            booleanFilter: '?string',\n            columns: ['string'],\n            division: '?string',\n            filterScope: 'string',\n            filters: ['ListViewFilter'],\n            label: 'string',\n            language: '?string',\n            queue: '?string',\n            sharedTo: '?SharedTo',\n        },\n        extends: 'Metadata',\n    },\n    ListViewFilter: {\n        type: 'ListViewFilter',\n        props: {\n            field: 'string',\n            operation: 'string',\n            value: '?string',\n        },\n    },\n    SharedTo: {\n        type: 'SharedTo',\n        props: {\n            allCustomerPortalUsers: '?string',\n            allInternalUsers: '?string',\n            allPartnerUsers: '?string',\n            channelProgramGroup: ['string'],\n            channelProgramGroups: ['string'],\n            group: ['string'],\n            groups: ['string'],\n            guestUser: ['string'],\n            managerSubordinates: ['string'],\n            managers: ['string'],\n            portalRole: ['string'],\n            portalRoleAndSubordinates: ['string'],\n            queue: ['string'],\n            role: ['string'],\n            roleAndSubordinates: ['string'],\n            roleAndSubordinatesInternal: ['string'],\n            roles: ['string'],\n            rolesAndSubordinates: ['string'],\n            territories: ['string'],\n            territoriesAndSubordinates: ['string'],\n            territory: ['string'],\n            territoryAndSubordinates: ['string'],\n        },\n    },\n    ProfileSearchLayouts: {\n        type: 'ProfileSearchLayouts',\n        props: {\n            fields: ['string'],\n            profileName: '?string',\n        },\n    },\n    RecordType: {\n        type: 'RecordType',\n        props: {\n            active: 'boolean',\n            businessProcess: '?string',\n            compactLayoutAssignment: '?string',\n            description: '?string',\n            label: 'string',\n            picklistValues: ['RecordTypePicklistValue'],\n        },\n        extends: 'Metadata',\n    },\n    RecordTypePicklistValue: {\n        type: 'RecordTypePicklistValue',\n        props: {\n            picklist: 'string',\n            values: ['PicklistValue'],\n        },\n    },\n    SearchLayouts: {\n        type: 'SearchLayouts',\n        props: {\n            customTabListAdditionalFields: ['string'],\n            excludedStandardButtons: ['string'],\n            listViewButtons: ['string'],\n            lookupDialogsAdditionalFields: ['string'],\n            lookupFilterFields: ['string'],\n            lookupPhoneDialogsAdditionalFields: ['string'],\n            massQuickActions: ['string'],\n            searchFilterFields: ['string'],\n            searchResultsAdditionalFields: ['string'],\n            searchResultsCustomButtons: ['string'],\n        },\n    },\n    SharingReason: {\n        type: 'SharingReason',\n        props: {\n            label: 'string',\n        },\n        extends: 'Metadata',\n    },\n    SharingRecalculation: {\n        type: 'SharingRecalculation',\n        props: {\n            className: 'string',\n        },\n    },\n    ValidationRule: {\n        type: 'ValidationRule',\n        props: {\n            active: 'boolean',\n            description: '?string',\n            errorConditionFormula: 'string',\n            errorDisplayField: '?string',\n            errorMessage: 'string',\n        },\n        extends: 'Metadata',\n    },\n    WebLink: {\n        type: 'WebLink',\n        props: {\n            availability: 'string',\n            description: '?string',\n            displayType: 'string',\n            encodingKey: '?string',\n            hasMenubar: '?boolean',\n            hasScrollbars: '?boolean',\n            hasToolbar: '?boolean',\n            height: '?number',\n            isResizable: '?boolean',\n            linkType: 'string',\n            masterLabel: '?string',\n            openType: 'string',\n            page: '?string',\n            position: '?string',\n            protected: 'boolean',\n            requireRowSelection: '?boolean',\n            scontrol: '?string',\n            showsLocation: '?boolean',\n            showsStatus: '?boolean',\n            url: '?string',\n            width: '?number',\n        },\n        extends: 'Metadata',\n    },\n    CustomObjectTranslation: {\n        type: 'CustomObjectTranslation',\n        props: {\n            caseValues: ['ObjectNameCaseValue'],\n            fieldSets: ['FieldSetTranslation'],\n            fields: ['CustomFieldTranslation'],\n            gender: '?string',\n            layouts: ['LayoutTranslation'],\n            nameFieldLabel: '?string',\n            quickActions: ['QuickActionTranslation'],\n            recordTypes: ['RecordTypeTranslation'],\n            sharingReasons: ['SharingReasonTranslation'],\n            standardFields: ['StandardFieldTranslation'],\n            startsWith: '?string',\n            validationRules: ['ValidationRuleTranslation'],\n            webLinks: ['WebLinkTranslation'],\n            workflowTasks: ['WorkflowTaskTranslation'],\n        },\n        extends: 'Metadata',\n    },\n    ObjectNameCaseValue: {\n        type: 'ObjectNameCaseValue',\n        props: {\n            article: '?string',\n            caseType: '?string',\n            plural: '?boolean',\n            possessive: '?string',\n            value: 'string',\n        },\n    },\n    FieldSetTranslation: {\n        type: 'FieldSetTranslation',\n        props: {\n            label: 'string',\n            name: 'string',\n        },\n    },\n    CustomFieldTranslation: {\n        type: 'CustomFieldTranslation',\n        props: {\n            caseValues: ['ObjectNameCaseValue'],\n            gender: '?string',\n            help: '?string',\n            label: '?string',\n            lookupFilter: '?LookupFilterTranslation',\n            name: 'string',\n            picklistValues: ['PicklistValueTranslation'],\n            relationshipLabel: '?string',\n            startsWith: '?string',\n        },\n    },\n    LookupFilterTranslation: {\n        type: 'LookupFilterTranslation',\n        props: {\n            errorMessage: 'string',\n            informationalMessage: 'string',\n        },\n    },\n    PicklistValueTranslation: {\n        type: 'PicklistValueTranslation',\n        props: {\n            masterLabel: 'string',\n            translation: '?string',\n        },\n    },\n    LayoutTranslation: {\n        type: 'LayoutTranslation',\n        props: {\n            layout: 'string',\n            layoutType: '?string',\n            sections: ['LayoutSectionTranslation'],\n        },\n    },\n    LayoutSectionTranslation: {\n        type: 'LayoutSectionTranslation',\n        props: {\n            label: 'string',\n            section: 'string',\n        },\n    },\n    QuickActionTranslation: {\n        type: 'QuickActionTranslation',\n        props: {\n            label: 'string',\n            name: 'string',\n        },\n    },\n    RecordTypeTranslation: {\n        type: 'RecordTypeTranslation',\n        props: {\n            description: '?string',\n            label: 'string',\n            name: 'string',\n        },\n    },\n    SharingReasonTranslation: {\n        type: 'SharingReasonTranslation',\n        props: {\n            label: 'string',\n            name: 'string',\n        },\n    },\n    StandardFieldTranslation: {\n        type: 'StandardFieldTranslation',\n        props: {\n            label: '?string',\n            name: 'string',\n        },\n    },\n    ValidationRuleTranslation: {\n        type: 'ValidationRuleTranslation',\n        props: {\n            errorMessage: 'string',\n            name: 'string',\n        },\n    },\n    WebLinkTranslation: {\n        type: 'WebLinkTranslation',\n        props: {\n            label: 'string',\n            name: 'string',\n        },\n    },\n    WorkflowTaskTranslation: {\n        type: 'WorkflowTaskTranslation',\n        props: {\n            description: '?string',\n            name: 'string',\n            subject: '?string',\n        },\n    },\n    CustomPageWebLink: {\n        type: 'CustomPageWebLink',\n        props: {\n            availability: 'string',\n            description: '?string',\n            displayType: 'string',\n            encodingKey: '?string',\n            hasMenubar: '?boolean',\n            hasScrollbars: '?boolean',\n            hasToolbar: '?boolean',\n            height: '?number',\n            isResizable: '?boolean',\n            linkType: 'string',\n            masterLabel: '?string',\n            openType: 'string',\n            page: '?string',\n            position: '?string',\n            protected: 'boolean',\n            requireRowSelection: '?boolean',\n            scontrol: '?string',\n            showsLocation: '?boolean',\n            showsStatus: '?boolean',\n            url: '?string',\n            width: '?number',\n        },\n        extends: 'Metadata',\n    },\n    CustomPermission: {\n        type: 'CustomPermission',\n        props: {\n            connectedApp: '?string',\n            description: '?string',\n            label: 'string',\n            requiredPermission: ['CustomPermissionDependencyRequired'],\n        },\n        extends: 'Metadata',\n    },\n    CustomPermissionDependencyRequired: {\n        type: 'CustomPermissionDependencyRequired',\n        props: {\n            customPermission: 'string',\n            dependency: 'boolean',\n        },\n    },\n    CustomSite: {\n        type: 'CustomSite',\n        props: {\n            active: 'boolean',\n            allowHomePage: 'boolean',\n            allowStandardAnswersPages: '?boolean',\n            allowStandardIdeasPages: 'boolean',\n            allowStandardLookups: 'boolean',\n            allowStandardPortalPages: 'boolean',\n            allowStandardSearch: 'boolean',\n            analyticsTrackingCode: '?string',\n            authorizationRequiredPage: '?string',\n            bandwidthExceededPage: '?string',\n            browserXssProtection: 'boolean',\n            changePasswordPage: '?string',\n            chatterAnswersForgotPasswordConfirmPage: '?string',\n            chatterAnswersForgotPasswordPage: '?string',\n            chatterAnswersHelpPage: '?string',\n            chatterAnswersLoginPage: '?string',\n            chatterAnswersRegistrationPage: '?string',\n            clickjackProtectionLevel: 'string',\n            contentSniffingProtection: 'boolean',\n            cspUpgradeInsecureRequests: 'boolean',\n            customWebAddresses: ['SiteWebAddress'],\n            description: '?string',\n            enableAuraRequests: '?boolean',\n            favoriteIcon: '?string',\n            fileNotFoundPage: '?string',\n            forgotPasswordPage: '?string',\n            genericErrorPage: '?string',\n            guestProfile: '?string',\n            inMaintenancePage: '?string',\n            inactiveIndexPage: '?string',\n            indexPage: 'string',\n            masterLabel: 'string',\n            myProfilePage: '?string',\n            portal: '?string',\n            referrerPolicyOriginWhenCrossOrigin: 'boolean',\n            requireHttps: 'boolean',\n            requireInsecurePortalAccess: 'boolean',\n            robotsTxtPage: '?string',\n            rootComponent: '?string',\n            selfRegPage: '?string',\n            serverIsDown: '?string',\n            siteAdmin: '?string',\n            siteRedirectMappings: ['SiteRedirectMapping'],\n            siteTemplate: '?string',\n            siteType: 'string',\n            subdomain: '?string',\n            urlPathPrefix: '?string',\n        },\n        extends: 'Metadata',\n    },\n    SiteWebAddress: {\n        type: 'SiteWebAddress',\n        props: {\n            certificate: '?string',\n            domainName: 'string',\n            primary: 'boolean',\n        },\n    },\n    SiteRedirectMapping: {\n        type: 'SiteRedirectMapping',\n        props: {\n            action: 'string',\n            isActive: '?boolean',\n            source: 'string',\n            target: 'string',\n        },\n    },\n    CustomTab: {\n        type: 'CustomTab',\n        props: {\n            actionOverrides: ['ActionOverride'],\n            auraComponent: '?string',\n            customObject: '?boolean',\n            description: '?string',\n            flexiPage: '?string',\n            frameHeight: '?number',\n            hasSidebar: '?boolean',\n            icon: '?string',\n            label: '?string',\n            lwcComponent: '?string',\n            motif: '?string',\n            page: '?string',\n            scontrol: '?string',\n            splashPageLink: '?string',\n            url: '?string',\n            urlEncodingKey: '?string',\n        },\n        extends: 'Metadata',\n    },\n    Dashboard: {\n        type: 'Dashboard',\n        props: {\n            backgroundEndColor: 'string',\n            backgroundFadeDirection: 'string',\n            backgroundStartColor: 'string',\n            chartTheme: '?string',\n            colorPalette: '?string',\n            dashboardChartTheme: '?string',\n            dashboardColorPalette: '?string',\n            dashboardFilters: ['DashboardFilter'],\n            dashboardGridLayout: '?DashboardGridLayout',\n            dashboardResultRefreshedDate: '?string',\n            dashboardResultRunningUser: '?string',\n            dashboardType: '?string',\n            description: '?string',\n            folderName: '?string',\n            isGridLayout: '?boolean',\n            leftSection: '?DashboardComponentSection',\n            middleSection: '?DashboardComponentSection',\n            numSubscriptions: '?number',\n            rightSection: '?DashboardComponentSection',\n            runningUser: '?string',\n            textColor: 'string',\n            title: 'string',\n            titleColor: 'string',\n            titleSize: 'number',\n        },\n        extends: 'Metadata',\n    },\n    DashboardFilter: {\n        type: 'DashboardFilter',\n        props: {\n            dashboardFilterOptions: ['DashboardFilterOption'],\n            name: 'string',\n        },\n    },\n    DashboardFilterOption: {\n        type: 'DashboardFilterOption',\n        props: {\n            operator: 'string',\n            values: ['string'],\n        },\n    },\n    DashboardGridLayout: {\n        type: 'DashboardGridLayout',\n        props: {\n            dashboardGridComponents: ['DashboardGridComponent'],\n            numberOfColumns: 'number',\n            rowHeight: 'number',\n        },\n    },\n    DashboardGridComponent: {\n        type: 'DashboardGridComponent',\n        props: {\n            colSpan: 'number',\n            columnIndex: 'number',\n            dashboardComponent: 'DashboardComponent',\n            rowIndex: 'number',\n            rowSpan: 'number',\n        },\n    },\n    DashboardComponent: {\n        type: 'DashboardComponent',\n        props: {\n            autoselectColumnsFromReport: '?boolean',\n            chartAxisRange: '?string',\n            chartAxisRangeMax: '?number',\n            chartAxisRangeMin: '?number',\n            chartSummary: ['ChartSummary'],\n            componentChartTheme: '?string',\n            componentType: 'string',\n            dashboardFilterColumns: ['DashboardFilterColumn'],\n            dashboardTableColumn: ['DashboardTableColumn'],\n            decimalPrecision: '?number',\n            displayUnits: '?string',\n            drillDownUrl: '?string',\n            drillEnabled: '?boolean',\n            drillToDetailEnabled: '?boolean',\n            enableHover: '?boolean',\n            expandOthers: '?boolean',\n            flexComponentProperties: '?DashboardFlexTableComponentProperties',\n            footer: '?string',\n            gaugeMax: '?number',\n            gaugeMin: '?number',\n            groupingColumn: ['string'],\n            groupingSortProperties: '?DashboardComponentGroupingSortProperties',\n            header: '?string',\n            indicatorBreakpoint1: '?number',\n            indicatorBreakpoint2: '?number',\n            indicatorHighColor: '?string',\n            indicatorLowColor: '?string',\n            indicatorMiddleColor: '?string',\n            legendPosition: '?string',\n            maxValuesDisplayed: '?number',\n            metricLabel: '?string',\n            page: '?string',\n            pageHeightInPixels: '?number',\n            report: '?string',\n            scontrol: '?string',\n            scontrolHeightInPixels: '?number',\n            showPercentage: '?boolean',\n            showPicturesOnCharts: '?boolean',\n            showPicturesOnTables: '?boolean',\n            showRange: '?boolean',\n            showTotal: '?boolean',\n            showValues: '?boolean',\n            sortBy: '?string',\n            title: '?string',\n            useReportChart: '?boolean',\n        },\n    },\n    ChartSummary: {\n        type: 'ChartSummary',\n        props: {\n            aggregate: '?string',\n            axisBinding: '?string',\n            column: 'string',\n        },\n    },\n    DashboardFilterColumn: {\n        type: 'DashboardFilterColumn',\n        props: {\n            column: 'string',\n        },\n    },\n    DashboardTableColumn: {\n        type: 'DashboardTableColumn',\n        props: {\n            aggregateType: '?string',\n            calculatePercent: '?boolean',\n            column: 'string',\n            decimalPlaces: '?number',\n            showSubTotal: '?boolean',\n            showTotal: '?boolean',\n            sortBy: '?string',\n        },\n    },\n    DashboardFlexTableComponentProperties: {\n        type: 'DashboardFlexTableComponentProperties',\n        props: {\n            decimalPrecision: '?number',\n            flexTableColumn: ['DashboardComponentColumn'],\n            flexTableSortInfo: '?DashboardComponentSortInfo',\n            hideChatterPhotos: '?boolean',\n        },\n    },\n    DashboardComponentColumn: {\n        type: 'DashboardComponentColumn',\n        props: {\n            breakPoint1: '?number',\n            breakPoint2: '?number',\n            breakPointOrder: '?number',\n            highRangeColor: '?number',\n            lowRangeColor: '?number',\n            midRangeColor: '?number',\n            reportColumn: 'string',\n            showSubTotal: '?boolean',\n            showTotal: '?boolean',\n            type: 'string',\n        },\n    },\n    DashboardComponentSortInfo: {\n        type: 'DashboardComponentSortInfo',\n        props: {\n            sortColumn: '?string',\n            sortOrder: '?string',\n        },\n    },\n    DashboardComponentGroupingSortProperties: {\n        type: 'DashboardComponentGroupingSortProperties',\n        props: {\n            groupingSorts: ['DashboardComponentGroupingSort'],\n        },\n    },\n    DashboardComponentGroupingSort: {\n        type: 'DashboardComponentGroupingSort',\n        props: {\n            groupingLevel: 'string',\n            inheritedReportGroupingSort: '?string',\n            sortColumn: '?string',\n            sortOrder: '?string',\n        },\n    },\n    DashboardComponentSection: {\n        type: 'DashboardComponentSection',\n        props: {\n            columnSize: 'string',\n            components: ['DashboardComponent'],\n        },\n    },\n    DataCategoryGroup: {\n        type: 'DataCategoryGroup',\n        props: {\n            active: 'boolean',\n            dataCategory: 'DataCategory',\n            description: '?string',\n            label: 'string',\n            objectUsage: '?ObjectUsage',\n        },\n        extends: 'Metadata',\n    },\n    DataCategory: {\n        type: 'DataCategory',\n        props: {\n            dataCategory: ['DataCategory'],\n            label: 'string',\n            name: 'string',\n        },\n    },\n    ObjectUsage: {\n        type: 'ObjectUsage',\n        props: {\n            object: ['string'],\n        },\n    },\n    DataDotComSettings: {\n        type: 'DataDotComSettings',\n        props: {\n            enableAccountExportButtonOff: '?boolean',\n            enableAccountImportButtonOff: '?boolean',\n            enableAllowDupeContactFromLead: '?boolean',\n            enableAllowDupeLeadFromContact: '?boolean',\n            enableCleanUpgradeRequested: '?boolean',\n            enableContactExportButtonOff: '?boolean',\n            enableContactImportButtonOff: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    DelegateGroup: {\n        type: 'DelegateGroup',\n        props: {\n            customObjects: ['string'],\n            groups: ['string'],\n            label: 'string',\n            loginAccess: 'boolean',\n            permissionSets: ['string'],\n            profiles: ['string'],\n            roles: ['string'],\n        },\n        extends: 'Metadata',\n    },\n    DeploymentSettings: {\n        type: 'DeploymentSettings',\n        props: {\n            doesSkipAsyncApexValidation: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    DevHubSettings: {\n        type: 'DevHubSettings',\n        props: {\n            enableShapeExportPref: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    DiscoverySettings: {\n        type: 'DiscoverySettings',\n        props: {\n            enableEinsteinAnswersPref: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    DocumentType: {\n        type: 'DocumentType',\n        props: {\n            description: 'string',\n            isActive: 'boolean',\n            masterLabel: 'string',\n        },\n        extends: 'Metadata',\n    },\n    DuplicateRule: {\n        type: 'DuplicateRule',\n        props: {\n            actionOnInsert: 'string',\n            actionOnUpdate: 'string',\n            alertText: '?string',\n            description: '?string',\n            duplicateRuleFilter: '?DuplicateRuleFilter',\n            duplicateRuleMatchRules: ['?', 'DuplicateRuleMatchRule'],\n            isActive: 'boolean',\n            masterLabel: 'string',\n            operationsOnInsert: ['string'],\n            operationsOnUpdate: ['string'],\n            securityOption: 'string',\n            sortOrder: 'number',\n        },\n        extends: 'Metadata',\n    },\n    DuplicateRuleFilter: {\n        type: 'DuplicateRuleFilter',\n        props: {\n            booleanFilter: '?string',\n            duplicateRuleFilterItems: ['DuplicateRuleFilterItem'],\n        },\n    },\n    DuplicateRuleMatchRule: {\n        type: 'DuplicateRuleMatchRule',\n        props: {\n            matchRuleSObjectType: 'string',\n            matchingRule: 'string',\n            objectMapping: '?ObjectMapping',\n        },\n    },\n    ObjectMapping: {\n        type: 'ObjectMapping',\n        props: {\n            inputObject: 'string',\n            mappingFields: ['ObjectMappingField'],\n            outputObject: 'string',\n        },\n    },\n    ObjectMappingField: {\n        type: 'ObjectMappingField',\n        props: {\n            inputField: 'string',\n            outputField: 'string',\n        },\n    },\n    EACSettings: {\n        type: 'EACSettings',\n        props: {\n            enableEACForEveryonePref: '?boolean',\n            enableInboxActivitySharing: '?boolean',\n            enableInsightsInTimeline: '?boolean',\n            enableInsightsInTimelineEacStd: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    EmailAdministrationSettings: {\n        type: 'EmailAdministrationSettings',\n        props: {\n            enableComplianceBcc: '?boolean',\n            enableEmailConsentManagement: '?boolean',\n            enableEmailSenderIdCompliance: '?boolean',\n            enableEmailSpfCompliance: '?boolean',\n            enableEmailToSalesforce: '?boolean',\n            enableEmailWorkflowApproval: '?boolean',\n            enableEnhancedEmailEnabled: '?boolean',\n            enableHandleBouncedEmails: '?boolean',\n            enableHtmlEmail: '?boolean',\n            enableListEmailLogActivities: '?boolean',\n            enableResendBouncedEmails: '?boolean',\n            enableRestrictTlsToDomains: '?boolean',\n            enableSendThroughGmailPref: '?boolean',\n            enableSendViaExchangePref: '?boolean',\n            enableSendViaGmailPref: '?boolean',\n            enableSetMatchingEmailsOnBounce: '?boolean',\n            enableUseOrgFootersForExtTrans: '?boolean',\n            sendEmailsEvenWhenAutomationUpdatesSameRecord: '?boolean',\n            sendMassEmailNotification: '?boolean',\n            sendTextOnlySystemEmails: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    EmailIntegrationSettings: {\n        type: 'EmailIntegrationSettings',\n        props: {\n            doesEmailLogAsEmailMessageInOutlook: '?boolean',\n            doesGmailStayConnectedToSalesforce: '?boolean',\n            enableContactAndEventSync: '?boolean',\n            enableEmailTrackingInMobile: '?boolean',\n            enableEngageForOutlook: '?boolean',\n            enableGmailIntegration: '?boolean',\n            enableOutlookIntegration: '?boolean',\n            enableProductivityFeatures: '?boolean',\n            enableSupplementalContactInfoInMobile: '?boolean',\n            isLayoutCustomizationAllowed: '?boolean',\n            shouldUseTrustedDomainsList: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    EmailServicesFunction: {\n        type: 'EmailServicesFunction',\n        props: {\n            apexClass: 'string',\n            attachmentOption: 'string',\n            authenticationFailureAction: 'string',\n            authorizationFailureAction: 'string',\n            authorizedSenders: '?string',\n            emailServicesAddresses: ['EmailServicesAddress'],\n            errorRoutingAddress: '?string',\n            functionInactiveAction: 'string',\n            functionName: 'string',\n            isActive: '?boolean',\n            isAuthenticationRequired: '?boolean',\n            isErrorRoutingEnabled: '?boolean',\n            isTextAttachmentsAsBinary: '?boolean',\n            isTlsRequired: '?boolean',\n            overLimitAction: 'string',\n        },\n        extends: 'Metadata',\n    },\n    EmailServicesAddress: {\n        type: 'EmailServicesAddress',\n        props: {\n            authorizedSenders: '?string',\n            developerName: 'string',\n            isActive: '?boolean',\n            localPart: 'string',\n            runAsUser: 'string',\n        },\n    },\n    EmailTemplateSettings: {\n        type: 'EmailTemplateSettings',\n        props: {\n            enableLwcEmailTemplateBuilder: '?boolean',\n            enableTemplateEnhancedFolderPref: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    EmbeddedServiceBranding: {\n        type: 'EmbeddedServiceBranding',\n        props: {\n            contrastInvertedColor: '?string',\n            contrastPrimaryColor: '?string',\n            embeddedServiceConfig: 'string',\n            font: '?string',\n            height: '?number',\n            masterLabel: 'string',\n            navBarColor: '?string',\n            primaryColor: '?string',\n            secondaryColor: '?string',\n            width: '?number',\n        },\n        extends: 'Metadata',\n    },\n    EmbeddedServiceConfig: {\n        type: 'EmbeddedServiceConfig',\n        props: {\n            areGuestUsersAllowed: '?boolean',\n            authMethod: '?string',\n            embeddedServiceAppointmentSettings: '?EmbeddedServiceAppointmentSettings',\n            embeddedServiceCustomComponents: ['EmbeddedServiceCustomComponent'],\n            embeddedServiceCustomLabels: ['EmbeddedServiceCustomLabel'],\n            embeddedServiceFlowConfig: '?EmbeddedServiceFlowConfig',\n            embeddedServiceFlows: ['EmbeddedServiceFlow'],\n            embeddedServiceLayouts: ['EmbeddedServiceLayout'],\n            masterLabel: 'string',\n            shouldHideAuthDialog: '?boolean',\n            site: 'string',\n        },\n        extends: 'Metadata',\n    },\n    EmbeddedServiceAppointmentSettings: {\n        type: 'EmbeddedServiceAppointmentSettings',\n        props: {\n            appointmentConfirmImg: '?string',\n            enabled: 'boolean',\n            homeImg: '?string',\n            logoImg: '?string',\n            shouldShowExistingAppointment: '?boolean',\n            shouldShowNewAppointment: '?boolean',\n        },\n    },\n    EmbeddedServiceCustomComponent: {\n        type: 'EmbeddedServiceCustomComponent',\n        props: {\n            componentBundleType: '?string',\n            customComponent: '?string',\n            customComponentType: '?string',\n        },\n    },\n    EmbeddedServiceCustomLabel: {\n        type: 'EmbeddedServiceCustomLabel',\n        props: {\n            customLabel: '?string',\n            feature: '?string',\n            labelKey: '?string',\n        },\n    },\n    EmbeddedServiceFlowConfig: {\n        type: 'EmbeddedServiceFlowConfig',\n        props: {\n            enabled: 'boolean',\n        },\n        extends: 'Metadata',\n    },\n    EmbeddedServiceFlow: {\n        type: 'EmbeddedServiceFlow',\n        props: {\n            flow: 'string',\n            flowType: 'string',\n            isAuthenticationRequired: 'boolean',\n        },\n    },\n    EmbeddedServiceLayout: {\n        type: 'EmbeddedServiceLayout',\n        props: {\n            embeddedServiceLayoutRules: ['EmbeddedServiceLayoutRule'],\n            layout: 'string',\n            layoutType: '?string',\n        },\n    },\n    EmbeddedServiceLayoutRule: {\n        type: 'EmbeddedServiceLayoutRule',\n        props: {\n            appointmentStatus: 'string',\n        },\n    },\n    EmbeddedServiceLiveAgent: {\n        type: 'EmbeddedServiceLiveAgent',\n        props: {\n            avatarImg: '?string',\n            embeddedServiceConfig: 'string',\n            embeddedServiceQuickActions: ['EmbeddedServiceQuickAction'],\n            enabled: 'boolean',\n            fontSize: 'string',\n            headerBackgroundImg: '?string',\n            isOfflineCaseEnabled: '?boolean',\n            isQueuePositionEnabled: '?boolean',\n            liveAgentChatUrl: '?string',\n            liveAgentContentUrl: '?string',\n            liveChatButton: 'string',\n            liveChatDeployment: 'string',\n            masterLabel: 'string',\n            offlineCaseBackgroundImg: '?string',\n            prechatBackgroundImg: '?string',\n            prechatEnabled: 'boolean',\n            prechatJson: '?string',\n            scenario: 'string',\n            smallCompanyLogoImg: '?string',\n            waitingStateBackgroundImg: '?string',\n        },\n        extends: 'Metadata',\n    },\n    EmbeddedServiceQuickAction: {\n        type: 'EmbeddedServiceQuickAction',\n        props: {\n            embeddedServiceLiveAgent: 'string',\n            order: 'number',\n            quickActionDefinition: 'string',\n            quickActionType: '?string',\n        },\n    },\n    EmbeddedServiceMenuSettings: {\n        type: 'EmbeddedServiceMenuSettings',\n        props: {\n            branding: '?string',\n            embeddedServiceMenuItems: ['EmbeddedServiceMenuItem'],\n            isEnabled: '?boolean',\n            masterLabel: '?string',\n            site: '?string',\n        },\n        extends: 'Metadata',\n    },\n    EmbeddedServiceMenuItem: {\n        type: 'EmbeddedServiceMenuItem',\n        props: {\n            channel: '?string',\n            channelType: '?string',\n            displayOrder: '?number',\n            phoneNumber: '?string',\n        },\n    },\n    EncryptionKeySettings: {\n        type: 'EncryptionKeySettings',\n        props: {\n            canOptOutOfDerivationWithBYOK: '?boolean',\n            enableCacheOnlyKeys: '?boolean',\n            enableReplayDetection: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    EnhancedNotesSettings: {\n        type: 'EnhancedNotesSettings',\n        props: {\n            enableEnhancedNotes: '?boolean',\n            enableTasksOnEnhancedNotes: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    EntitlementProcess: {\n        type: 'EntitlementProcess',\n        props: {\n            SObjectType: '?string',\n            active: '?boolean',\n            businessHours: '?string',\n            description: '?string',\n            entryStartDateField: '?string',\n            exitCriteriaBooleanFilter: '?string',\n            exitCriteriaFilterItems: ['FilterItem'],\n            exitCriteriaFormula: '?string',\n            isRecordTypeApplied: '?boolean',\n            isVersionDefault: '?boolean',\n            milestones: ['EntitlementProcessMilestoneItem'],\n            name: '?string',\n            recordType: '?string',\n            versionMaster: '?string',\n            versionNotes: '?string',\n            versionNumber: '?number',\n        },\n        extends: 'Metadata',\n    },\n    EntitlementProcessMilestoneItem: {\n        type: 'EntitlementProcessMilestoneItem',\n        props: {\n            businessHours: '?string',\n            criteriaBooleanFilter: '?string',\n            milestoneCriteriaFilterItems: ['FilterItem'],\n            milestoneCriteriaFormula: '?string',\n            milestoneName: '?string',\n            minutesCustomClass: '?string',\n            minutesToComplete: '?number',\n            successActions: ['WorkflowActionReference'],\n            timeTriggers: ['EntitlementProcessMilestoneTimeTrigger'],\n            useCriteriaStartTime: '?boolean',\n        },\n    },\n    EntitlementProcessMilestoneTimeTrigger: {\n        type: 'EntitlementProcessMilestoneTimeTrigger',\n        props: {\n            actions: ['WorkflowActionReference'],\n            timeLength: '?number',\n            workflowTimeTriggerUnit: 'string',\n        },\n    },\n    EntitlementSettings: {\n        type: 'EntitlementSettings',\n        props: {\n            assetLookupLimitedToActiveEntitlementsOnAccount: '?boolean',\n            assetLookupLimitedToActiveEntitlementsOnContact: '?boolean',\n            assetLookupLimitedToSameAccount: '?boolean',\n            assetLookupLimitedToSameContact: '?boolean',\n            enableEntitlementVersioning: 'boolean',\n            enableEntitlements: 'boolean',\n            enableMilestoneFeedItem: '?boolean',\n            enableMilestoneStoppedTime: '?boolean',\n            entitlementLookupLimitedToActiveStatus: '?boolean',\n            entitlementLookupLimitedToSameAccount: '?boolean',\n            entitlementLookupLimitedToSameAsset: '?boolean',\n            entitlementLookupLimitedToSameContact: '?boolean',\n            ignoreMilestoneBusinessHours: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    EntitlementTemplate: {\n        type: 'EntitlementTemplate',\n        props: {\n            businessHours: '?string',\n            casesPerEntitlement: '?number',\n            entitlementProcess: '?string',\n            isPerIncident: '?boolean',\n            term: '?number',\n            type: '?string',\n        },\n        extends: 'Metadata',\n    },\n    EntityImplements: {\n        type: 'EntityImplements',\n        props: {\n            fieldMap: ['FieldImplements'],\n            interface: '?string',\n            isDefault: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    FieldImplements: {\n        type: 'FieldImplements',\n        props: {\n            field: '?string',\n            interfaceField: '?string',\n        },\n    },\n    EscalationRule: {\n        type: 'EscalationRule',\n        props: {\n            active: '?boolean',\n            ruleEntry: ['RuleEntry'],\n        },\n        extends: 'Metadata',\n    },\n    EscalationRules: {\n        type: 'EscalationRules',\n        props: {\n            escalationRule: ['EscalationRule'],\n        },\n        extends: 'Metadata',\n    },\n    EssentialsSettings: {\n        type: 'EssentialsSettings',\n        props: {\n            emailConnectorEnabled: '?boolean',\n            essentialsAppEnabled: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    EssentialsTrialOrgSettings: {\n        type: 'EssentialsTrialOrgSettings',\n        props: {\n            enableSampleDataDeleted: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    EventSettings: {\n        type: 'EventSettings',\n        props: {\n            enableApexLimitEvents: '?boolean',\n            enableDeleteMonitoringData: '?boolean',\n            enableDynamicStreamingChannel: '?boolean',\n            enableEventLogWaveIntegration: '?boolean',\n            enableLoginForensics: '?boolean',\n            enableStreamingApi: '?boolean',\n            enableTerminateOldestSession: '?boolean',\n            enableTransactionSecurityPolicies: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    ExperienceBundleSettings: {\n        type: 'ExperienceBundleSettings',\n        props: {\n            enableExperienceBundleMetadata: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    ExternalDataSource: {\n        type: 'ExternalDataSource',\n        props: {\n            authProvider: '?string',\n            certificate: '?string',\n            customConfiguration: '?string',\n            customHttpHeaders: ['CustomHttpHeader'],\n            endpoint: '?string',\n            isWritable: '?boolean',\n            label: 'string',\n            oauthRefreshToken: '?string',\n            oauthScope: '?string',\n            oauthToken: '?string',\n            password: '?string',\n            principalType: 'string',\n            protocol: 'string',\n            repository: '?string',\n            type: 'string',\n            username: '?string',\n            version: '?string',\n        },\n        extends: 'Metadata',\n    },\n    CustomHttpHeader: {\n        type: 'CustomHttpHeader',\n        props: {\n            description: '?string',\n            headerFieldName: 'string',\n            headerFieldValue: 'string',\n            isActive: '?boolean',\n        },\n    },\n    ExternalServiceRegistration: {\n        type: 'ExternalServiceRegistration',\n        props: {\n            description: '?string',\n            label: 'string',\n            namedCredential: '?string',\n            schema: '?string',\n            schemaType: '?string',\n            schemaUrl: '?string',\n            status: 'string',\n        },\n        extends: 'Metadata',\n    },\n    ExternalServicesSettings: {\n        type: 'ExternalServicesSettings',\n        props: {\n            enableEnhancedExternalServices: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    FieldServiceSettings: {\n        type: 'FieldServiceSettings',\n        props: {\n            capacityUsageCalcClassId: '?string',\n            doesAllowEditSaForCrew: '?boolean',\n            doesShareSaParentWoWithAr: '?boolean',\n            doesShareSaWithAr: '?boolean',\n            enableWorkOrders: '?boolean',\n            fieldServiceNotificationsOrgPref: '?boolean',\n            fieldServiceOrgPref: '?boolean',\n            isGeoCodeSyncEnabled: '?boolean',\n            isLocationHistoryEnabled: '?boolean',\n            serviceAppointmentsDueDateOffsetOrgValue: '?number',\n            workOrderLineItemSearchFields: ['string'],\n            workOrderSearchFields: ['string'],\n        },\n        extends: 'Metadata',\n    },\n    FileUploadAndDownloadSecuritySettings: {\n        type: 'FileUploadAndDownloadSecuritySettings',\n        props: {\n            dispositions: ['FileTypeDispositionAssignmentBean'],\n            noHtmlUploadAsAttachment: 'boolean',\n        },\n        extends: 'Metadata',\n    },\n    FileTypeDispositionAssignmentBean: {\n        type: 'FileTypeDispositionAssignmentBean',\n        props: {\n            behavior: 'string',\n            fileType: 'string',\n            securityRiskFileType: 'boolean',\n        },\n    },\n    FilesConnectSettings: {\n        type: 'FilesConnectSettings',\n        props: {\n            enableContentHubAllowed: '?boolean',\n            enableContentHubCvtLinksAllowed: '?boolean',\n            enableContentHubEOSearchLayout: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    FlexiPage: {\n        type: 'FlexiPage',\n        props: {\n            description: '?string',\n            flexiPageRegions: ['FlexiPageRegion'],\n            masterLabel: 'string',\n            parentFlexiPage: '?string',\n            platformActionlist: '?PlatformActionList',\n            quickActionList: '?QuickActionList',\n            sobjectType: '?string',\n            template: 'FlexiPageTemplateInstance',\n            type: 'string',\n        },\n        extends: 'Metadata',\n    },\n    FlexiPageRegion: {\n        type: 'FlexiPageRegion',\n        props: {\n            appendable: '?string',\n            componentInstances: ['ComponentInstance'],\n            mode: '?string',\n            name: 'string',\n            prependable: '?string',\n            replaceable: '?string',\n            type: 'string',\n        },\n    },\n    ComponentInstance: {\n        type: 'ComponentInstance',\n        props: {\n            componentInstanceProperties: ['ComponentInstanceProperty'],\n            componentName: 'string',\n            visibilityRule: '?UiFormulaRule',\n        },\n    },\n    ComponentInstanceProperty: {\n        type: 'ComponentInstanceProperty',\n        props: {\n            name: '?string',\n            type: '?string',\n            value: '?string',\n        },\n    },\n    UiFormulaRule: {\n        type: 'UiFormulaRule',\n        props: {\n            booleanFilter: '?string',\n            criteria: ['UiFormulaCriterion'],\n        },\n    },\n    UiFormulaCriterion: {\n        type: 'UiFormulaCriterion',\n        props: {\n            leftValue: 'string',\n            operator: 'string',\n            rightValue: '?string',\n        },\n    },\n    PlatformActionList: {\n        type: 'PlatformActionList',\n        props: {\n            actionListContext: 'string',\n            platformActionListItems: ['PlatformActionListItem'],\n            relatedSourceEntity: '?string',\n        },\n        extends: 'Metadata',\n    },\n    PlatformActionListItem: {\n        type: 'PlatformActionListItem',\n        props: {\n            actionName: 'string',\n            actionType: 'string',\n            sortOrder: 'number',\n            subtype: '?string',\n        },\n    },\n    QuickActionList: {\n        type: 'QuickActionList',\n        props: {\n            quickActionListItems: ['QuickActionListItem'],\n        },\n    },\n    QuickActionListItem: {\n        type: 'QuickActionListItem',\n        props: {\n            quickActionName: 'string',\n        },\n    },\n    FlexiPageTemplateInstance: {\n        type: 'FlexiPageTemplateInstance',\n        props: {\n            name: 'string',\n            properties: ['ComponentInstanceProperty'],\n        },\n    },\n    Flow: {\n        type: 'Flow',\n        props: {\n            actionCalls: ['FlowActionCall'],\n            apexPluginCalls: ['FlowApexPluginCall'],\n            assignments: ['FlowAssignment'],\n            choices: ['FlowChoice'],\n            constants: ['FlowConstant'],\n            decisions: ['FlowDecision'],\n            description: '?string',\n            dynamicChoiceSets: ['FlowDynamicChoiceSet'],\n            formulas: ['FlowFormula'],\n            interviewLabel: '?string',\n            isAdditionalPermissionRequiredToRun: '?boolean',\n            isTemplate: '?boolean',\n            label: 'string',\n            loops: ['FlowLoop'],\n            processMetadataValues: ['FlowMetadataValue'],\n            processType: '?string',\n            recordCreates: ['FlowRecordCreate'],\n            recordDeletes: ['FlowRecordDelete'],\n            recordLookups: ['FlowRecordLookup'],\n            recordUpdates: ['FlowRecordUpdate'],\n            screens: ['FlowScreen'],\n            stages: ['FlowStage'],\n            start: '?FlowStart',\n            startElementReference: '?string',\n            status: '?string',\n            steps: ['FlowStep'],\n            subflows: ['FlowSubflow'],\n            textTemplates: ['FlowTextTemplate'],\n            variables: ['FlowVariable'],\n            waits: ['FlowWait'],\n        },\n        extends: 'Metadata',\n    },\n    FlowActionCall: {\n        type: 'FlowActionCall',\n        props: {\n            actionName: 'string',\n            actionType: 'string',\n            connector: '?FlowConnector',\n            faultConnector: '?FlowConnector',\n            inputParameters: ['FlowActionCallInputParameter'],\n            outputParameters: ['FlowActionCallOutputParameter'],\n        },\n        extends: 'FlowNode',\n    },\n    FlowNode: {\n        type: 'FlowNode',\n        props: {\n            label: '?string',\n            locationX: 'number',\n            locationY: 'number',\n        },\n        extends: 'FlowElement',\n    },\n    FlowElement: {\n        type: 'FlowElement',\n        props: {\n            description: '?string',\n            name: '?string',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowBaseElement: {\n        type: 'FlowBaseElement',\n        props: {\n            processMetadataValues: ['FlowMetadataValue'],\n        },\n    },\n    FlowMetadataValue: {\n        type: 'FlowMetadataValue',\n        props: {\n            name: 'string',\n            value: '?FlowElementReferenceOrValue',\n        },\n    },\n    FlowElementReferenceOrValue: {\n        type: 'FlowElementReferenceOrValue',\n        props: {\n            booleanValue: '?boolean',\n            dateTimeValue: '?string',\n            dateValue: '?string',\n            elementReference: '?string',\n            numberValue: '?number',\n            stringValue: '?string',\n        },\n    },\n    FlowActionCallInputParameter: {\n        type: 'FlowActionCallInputParameter',\n        props: {\n            name: 'string',\n            value: '?FlowElementReferenceOrValue',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowActionCallOutputParameter: {\n        type: 'FlowActionCallOutputParameter',\n        props: {\n            assignToReference: 'string',\n            name: 'string',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowApexPluginCallInputParameter: {\n        type: 'FlowApexPluginCallInputParameter',\n        props: {\n            name: 'string',\n            value: '?FlowElementReferenceOrValue',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowApexPluginCallOutputParameter: {\n        type: 'FlowApexPluginCallOutputParameter',\n        props: {\n            assignToReference: 'string',\n            name: 'string',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowAssignmentItem: {\n        type: 'FlowAssignmentItem',\n        props: {\n            assignToReference: 'string',\n            operator: 'string',\n            value: '?FlowElementReferenceOrValue',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowChoiceUserInput: {\n        type: 'FlowChoiceUserInput',\n        props: {\n            isRequired: '?boolean',\n            promptText: '?string',\n            validationRule: '?FlowInputValidationRule',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowInputValidationRule: {\n        type: 'FlowInputValidationRule',\n        props: {\n            errorMessage: 'string',\n            formulaExpression: 'string',\n        },\n    },\n    FlowCondition: {\n        type: 'FlowCondition',\n        props: {\n            leftValueReference: 'string',\n            operator: 'string',\n            rightValue: '?FlowElementReferenceOrValue',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowConnector: {\n        type: 'FlowConnector',\n        props: {\n            targetReference: 'string',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowInputFieldAssignment: {\n        type: 'FlowInputFieldAssignment',\n        props: {\n            field: 'string',\n            value: '?FlowElementReferenceOrValue',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowOutputFieldAssignment: {\n        type: 'FlowOutputFieldAssignment',\n        props: {\n            assignToReference: 'string',\n            field: 'string',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowRecordFilter: {\n        type: 'FlowRecordFilter',\n        props: {\n            field: 'string',\n            operator: 'string',\n            value: '?FlowElementReferenceOrValue',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowScreenFieldInputParameter: {\n        type: 'FlowScreenFieldInputParameter',\n        props: {\n            name: 'string',\n            value: '?FlowElementReferenceOrValue',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowScreenFieldOutputParameter: {\n        type: 'FlowScreenFieldOutputParameter',\n        props: {\n            assignToReference: 'string',\n            name: 'string',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowScreenRule: {\n        type: 'FlowScreenRule',\n        props: {\n            conditionLogic: '?string',\n            conditions: ['FlowCondition'],\n            label: 'string',\n            ruleActions: ['FlowScreenRuleAction'],\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowScreenRuleAction: {\n        type: 'FlowScreenRuleAction',\n        props: {\n            attribute: 'string',\n            fieldReference: 'string',\n            value: '?FlowElementReferenceOrValue',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowSubflowInputAssignment: {\n        type: 'FlowSubflowInputAssignment',\n        props: {\n            name: 'string',\n            value: '?FlowElementReferenceOrValue',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowSubflowOutputAssignment: {\n        type: 'FlowSubflowOutputAssignment',\n        props: {\n            assignToReference: 'string',\n            name: 'string',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowVisibilityRule: {\n        type: 'FlowVisibilityRule',\n        props: {\n            conditionLogic: '?string',\n            conditions: ['FlowCondition'],\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowWaitEventInputParameter: {\n        type: 'FlowWaitEventInputParameter',\n        props: {\n            name: 'string',\n            value: '?FlowElementReferenceOrValue',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowWaitEventOutputParameter: {\n        type: 'FlowWaitEventOutputParameter',\n        props: {\n            assignToReference: 'string',\n            name: 'string',\n        },\n        extends: 'FlowBaseElement',\n    },\n    FlowChoice: {\n        type: 'FlowChoice',\n        props: {\n            choiceText: 'string',\n            dataType: 'string',\n            userInput: '?FlowChoiceUserInput',\n            value: '?FlowElementReferenceOrValue',\n        },\n        extends: 'FlowElement',\n    },\n    FlowConstant: {\n        type: 'FlowConstant',\n        props: {\n            dataType: 'string',\n            value: '?FlowElementReferenceOrValue',\n        },\n        extends: 'FlowElement',\n    },\n    FlowDynamicChoiceSet: {\n        type: 'FlowDynamicChoiceSet',\n        props: {\n            dataType: 'string',\n            displayField: 'string',\n            filters: ['FlowRecordFilter'],\n            limit: '?number',\n            object: 'string',\n            outputAssignments: ['FlowOutputFieldAssignment'],\n            picklistField: '?string',\n            picklistObject: '?string',\n            sortField: '?string',\n            sortOrder: '?string',\n            valueField: '?string',\n        },\n        extends: 'FlowElement',\n    },\n    FlowFormula: {\n        type: 'FlowFormula',\n        props: {\n            dataType: '?string',\n            expression: 'string',\n            scale: '?number',\n        },\n        extends: 'FlowElement',\n    },\n    FlowRule: {\n        type: 'FlowRule',\n        props: {\n            conditionLogic: 'string',\n            conditions: ['FlowCondition'],\n            connector: '?FlowConnector',\n            label: 'string',\n        },\n        extends: 'FlowElement',\n    },\n    FlowScreenField: {\n        type: 'FlowScreenField',\n        props: {\n            choiceReferences: ['string'],\n            dataType: '?string',\n            defaultSelectedChoiceReference: '?string',\n            defaultValue: '?FlowElementReferenceOrValue',\n            extensionName: '?string',\n            fieldText: '?string',\n            fieldType: 'string',\n            helpText: '?string',\n            inputParameters: ['FlowScreenFieldInputParameter'],\n            isRequired: '?boolean',\n            isVisible: '?boolean',\n            outputParameters: ['FlowScreenFieldOutputParameter'],\n            scale: '?number',\n            storeOutputAutomatically: '?boolean',\n            validationRule: '?FlowInputValidationRule',\n            visibilityRule: '?FlowVisibilityRule',\n        },\n        extends: 'FlowElement',\n    },\n    FlowStage: {\n        type: 'FlowStage',\n        props: {\n            isActive: 'boolean',\n            label: 'string',\n            stageOrder: 'number',\n        },\n        extends: 'FlowElement',\n    },\n    FlowTextTemplate: {\n        type: 'FlowTextTemplate',\n        props: {\n            text: 'string',\n        },\n        extends: 'FlowElement',\n    },\n    FlowVariable: {\n        type: 'FlowVariable',\n        props: {\n            apexClass: '?string',\n            dataType: 'string',\n            isCollection: '?boolean',\n            isInput: '?boolean',\n            isOutput: '?boolean',\n            objectType: '?string',\n            scale: '?number',\n            value: '?FlowElementReferenceOrValue',\n        },\n        extends: 'FlowElement',\n    },\n    FlowWaitEvent: {\n        type: 'FlowWaitEvent',\n        props: {\n            conditionLogic: '?string',\n            conditions: ['FlowCondition'],\n            connector: 'FlowConnector',\n            eventType: 'string',\n            inputParameters: ['FlowWaitEventInputParameter'],\n            label: 'string',\n            outputParameters: ['FlowWaitEventOutputParameter'],\n        },\n        extends: 'FlowElement',\n    },\n    FlowApexPluginCall: {\n        type: 'FlowApexPluginCall',\n        props: {\n            apexClass: 'string',\n            connector: '?FlowConnector',\n            faultConnector: '?FlowConnector',\n            inputParameters: ['FlowApexPluginCallInputParameter'],\n            outputParameters: ['FlowApexPluginCallOutputParameter'],\n        },\n        extends: 'FlowNode',\n    },\n    FlowAssignment: {\n        type: 'FlowAssignment',\n        props: {\n            assignmentItems: ['FlowAssignmentItem'],\n            connector: '?FlowConnector',\n        },\n        extends: 'FlowNode',\n    },\n    FlowDecision: {\n        type: 'FlowDecision',\n        props: {\n            defaultConnector: '?FlowConnector',\n            defaultConnectorLabel: '?string',\n            rules: ['FlowRule'],\n        },\n        extends: 'FlowNode',\n    },\n    FlowLoop: {\n        type: 'FlowLoop',\n        props: {\n            assignNextValueToReference: 'string',\n            collectionReference: 'string',\n            iterationOrder: '?string',\n            nextValueConnector: '?FlowConnector',\n            noMoreValuesConnector: '?FlowConnector',\n        },\n        extends: 'FlowNode',\n    },\n    FlowRecordCreate: {\n        type: 'FlowRecordCreate',\n        props: {\n            assignRecordIdToReference: '?string',\n            connector: '?FlowConnector',\n            faultConnector: '?FlowConnector',\n            inputAssignments: ['FlowInputFieldAssignment'],\n            inputReference: '?string',\n            object: '?string',\n        },\n        extends: 'FlowNode',\n    },\n    FlowRecordDelete: {\n        type: 'FlowRecordDelete',\n        props: {\n            connector: '?FlowConnector',\n            faultConnector: '?FlowConnector',\n            filters: ['FlowRecordFilter'],\n            inputReference: '?string',\n            object: '?string',\n        },\n        extends: 'FlowNode',\n    },\n    FlowRecordLookup: {\n        type: 'FlowRecordLookup',\n        props: {\n            assignNullValuesIfNoRecordsFound: '?boolean',\n            connector: '?FlowConnector',\n            faultConnector: '?FlowConnector',\n            filters: ['FlowRecordFilter'],\n            getFirstRecordOnly: '?boolean',\n            object: 'string',\n            outputAssignments: ['FlowOutputFieldAssignment'],\n            outputReference: '?string',\n            queriedFields: ['string'],\n            sortField: '?string',\n            sortOrder: '?string',\n            storeOutputAutomatically: '?boolean',\n        },\n        extends: 'FlowNode',\n    },\n    FlowRecordUpdate: {\n        type: 'FlowRecordUpdate',\n        props: {\n            connector: '?FlowConnector',\n            faultConnector: '?FlowConnector',\n            filters: ['FlowRecordFilter'],\n            inputAssignments: ['FlowInputFieldAssignment'],\n            inputReference: '?string',\n            object: '?string',\n        },\n        extends: 'FlowNode',\n    },\n    FlowScreen: {\n        type: 'FlowScreen',\n        props: {\n            allowBack: '?boolean',\n            allowFinish: '?boolean',\n            allowPause: '?boolean',\n            connector: '?FlowConnector',\n            fields: ['FlowScreenField'],\n            helpText: '?string',\n            pausedText: '?string',\n            rules: ['FlowScreenRule'],\n            showFooter: '?boolean',\n            showHeader: '?boolean',\n        },\n        extends: 'FlowNode',\n    },\n    FlowStart: {\n        type: 'FlowStart',\n        props: {\n            connector: '?FlowConnector',\n            filters: ['FlowRecordFilter'],\n            object: '?string',\n            schedule: '?FlowSchedule',\n            triggerType: '?string',\n        },\n        extends: 'FlowNode',\n    },\n    FlowSchedule: {\n        type: 'FlowSchedule',\n        props: {\n            frequency: '?string',\n            startDate: '?string',\n            startTime: '?string',\n        },\n    },\n    FlowStep: {\n        type: 'FlowStep',\n        props: {\n            connectors: ['FlowConnector'],\n        },\n        extends: 'FlowNode',\n    },\n    FlowSubflow: {\n        type: 'FlowSubflow',\n        props: {\n            connector: '?FlowConnector',\n            flowName: 'string',\n            inputAssignments: ['FlowSubflowInputAssignment'],\n            outputAssignments: ['FlowSubflowOutputAssignment'],\n        },\n        extends: 'FlowNode',\n    },\n    FlowWait: {\n        type: 'FlowWait',\n        props: {\n            defaultConnector: '?FlowConnector',\n            defaultConnectorLabel: 'string',\n            faultConnector: '?FlowConnector',\n            waitEvents: ['FlowWaitEvent'],\n        },\n        extends: 'FlowNode',\n    },\n    FlowCategory: {\n        type: 'FlowCategory',\n        props: {\n            description: '?string',\n            flowCategoryItems: ['FlowCategoryItems'],\n            masterLabel: 'string',\n        },\n        extends: 'Metadata',\n    },\n    FlowCategoryItems: {\n        type: 'FlowCategoryItems',\n        props: {\n            flow: 'string',\n        },\n    },\n    FlowDefinition: {\n        type: 'FlowDefinition',\n        props: {\n            activeVersionNumber: '?number',\n            description: '?string',\n            masterLabel: '?string',\n        },\n        extends: 'Metadata',\n    },\n    FlowSettings: {\n        type: 'FlowSettings',\n        props: {\n            enableFlowBREncodedFixEnabled: '?boolean',\n            enableFlowDeployAsActiveEnabled: '?boolean',\n            enableFlowFieldFilterEnabled: '?boolean',\n            enableFlowFormulasFixEnabled: '?boolean',\n            enableFlowInterviewSharingEnabled: '?boolean',\n            enableFlowNullPreviousValueFix: '?boolean',\n            enableFlowPauseEnabled: '?boolean',\n            enableFlowUseApexExceptionEmail: '?boolean',\n            enableInvocableFlowFixEnabled: '?boolean',\n            enableLightningRuntimeEnabled: '?boolean',\n            enableUseFlowBuilder: '?boolean',\n            isAccessToInvokedApexRequired: '?boolean',\n            isEnhancedFlowListViewVisible: '?boolean',\n            isManageFlowRequiredForAutomationCharts: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    Folder: {\n        type: 'Folder',\n        props: {\n            accessType: '?string',\n            folderShares: ['FolderShare'],\n            name: 'string',\n            publicFolderAccess: '?string',\n            sharedTo: '?SharedTo',\n        },\n        extends: 'Metadata',\n    },\n    FolderShare: {\n        type: 'FolderShare',\n        props: {\n            accessLevel: 'string',\n            sharedTo: 'string',\n            sharedToType: 'string',\n        },\n    },\n    DashboardFolder: {\n        type: 'DashboardFolder',\n        props: {},\n        extends: 'Folder',\n    },\n    DocumentFolder: {\n        type: 'DocumentFolder',\n        props: {},\n        extends: 'Folder',\n    },\n    EmailFolder: {\n        type: 'EmailFolder',\n        props: {},\n        extends: 'Folder',\n    },\n    ReportFolder: {\n        type: 'ReportFolder',\n        props: {},\n        extends: 'Folder',\n    },\n    ForecastingSettings: {\n        type: 'ForecastingSettings',\n        props: {\n            defaultToPersonalCurrency: '?boolean',\n            enableForecasts: '?boolean',\n            forecastingCategoryMappings: ['ForecastingCategoryMapping'],\n            forecastingDisplayedFamilySettings: [\n                'ForecastingDisplayedFamilySettings',\n            ],\n            forecastingTypeSettings: ['ForecastingTypeSettings'],\n        },\n        extends: 'Metadata',\n    },\n    ForecastingCategoryMapping: {\n        type: 'ForecastingCategoryMapping',\n        props: {\n            forecastingItemCategoryApiName: 'string',\n            weightedSourceCategories: ['WeightedSourceCategory'],\n        },\n    },\n    WeightedSourceCategory: {\n        type: 'WeightedSourceCategory',\n        props: {\n            sourceCategoryApiName: 'string',\n            weight: 'number',\n        },\n    },\n    ForecastingDisplayedFamilySettings: {\n        type: 'ForecastingDisplayedFamilySettings',\n        props: {\n            productFamily: '?string',\n        },\n    },\n    ForecastingTypeSettings: {\n        type: 'ForecastingTypeSettings',\n        props: {\n            active: 'boolean',\n            adjustmentsSettings: 'AdjustmentsSettings',\n            displayedCategoryApiNames: ['string'],\n            forecastRangeSettings: 'ForecastRangeSettings',\n            forecastedCategoryApiNames: ['string'],\n            forecastingDateType: 'string',\n            hasProductFamily: 'boolean',\n            isAmount: 'boolean',\n            isAvailable: 'boolean',\n            isQuantity: 'boolean',\n            managerAdjustableCategoryApiNames: ['string'],\n            masterLabel: 'string',\n            name: 'string',\n            opportunityListFieldsLabelMappings: ['OpportunityListFieldsLabelMapping'],\n            opportunityListFieldsSelectedSettings: 'OpportunityListFieldsSelectedSettings',\n            opportunityListFieldsUnselectedSettings: 'OpportunityListFieldsUnselectedSettings',\n            opportunitySplitName: '?string',\n            ownerAdjustableCategoryApiNames: ['string'],\n            quotasSettings: 'QuotasSettings',\n            territory2ModelName: '?string',\n        },\n    },\n    AdjustmentsSettings: {\n        type: 'AdjustmentsSettings',\n        props: {\n            enableAdjustments: 'boolean',\n            enableOwnerAdjustments: 'boolean',\n        },\n    },\n    ForecastRangeSettings: {\n        type: 'ForecastRangeSettings',\n        props: {\n            beginning: 'number',\n            displaying: 'number',\n            periodType: 'string',\n        },\n    },\n    OpportunityListFieldsLabelMapping: {\n        type: 'OpportunityListFieldsLabelMapping',\n        props: {\n            field: 'string',\n            label: 'string',\n        },\n    },\n    OpportunityListFieldsSelectedSettings: {\n        type: 'OpportunityListFieldsSelectedSettings',\n        props: {\n            field: ['string'],\n        },\n    },\n    OpportunityListFieldsUnselectedSettings: {\n        type: 'OpportunityListFieldsUnselectedSettings',\n        props: {\n            field: ['string'],\n        },\n    },\n    QuotasSettings: {\n        type: 'QuotasSettings',\n        props: {\n            showQuotas: 'boolean',\n        },\n    },\n    Form: {\n        type: 'Form',\n        props: {\n            description: '?string',\n            formSections: ['FormSection'],\n            masterLabel: 'string',\n        },\n        extends: 'Metadata',\n    },\n    FormSection: {\n        type: 'FormSection',\n        props: {\n            formColumns: ['FormColumn'],\n            masterLabel: 'string',\n            tabOrderType: 'string',\n        },\n        extends: 'Metadata',\n    },\n    FormColumn: {\n        type: 'FormColumn',\n        props: {\n            formItems: ['FormItem'],\n        },\n    },\n    FormItem: {\n        type: 'FormItem',\n        props: {\n            emptySpace: '?boolean',\n            expression: '?string',\n            formLayoutableItem: '?string',\n            helpText: '?string',\n        },\n    },\n    FormulaSettings: {\n        type: 'FormulaSettings',\n        props: {\n            enableDSTAwareDatevalue: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    GlobalValueSet: {\n        type: 'GlobalValueSet',\n        props: {\n            customValue: ['CustomValue'],\n            description: '?string',\n            masterLabel: 'string',\n            sorted: 'boolean',\n        },\n        extends: 'Metadata',\n    },\n    GlobalValueSetTranslation: {\n        type: 'GlobalValueSetTranslation',\n        props: {\n            valueTranslation: ['ValueTranslation'],\n        },\n        extends: 'Metadata',\n    },\n    ValueTranslation: {\n        type: 'ValueTranslation',\n        props: {\n            masterLabel: 'string',\n            translation: '?string',\n        },\n    },\n    GoogleAppsSettings: {\n        type: 'GoogleAppsSettings',\n        props: {\n            enableGmailButtons: '?boolean',\n            enableGmailButtonsAndLinks: '?boolean',\n            enableGmailLinks: '?boolean',\n            enableGoogleDocs: '?boolean',\n            enableGoogleDocsTab: '?boolean',\n            enableGoogleTalk: '?boolean',\n            googleAppsDomain: '?string',\n            googleAppsDomainLinked: '?boolean',\n            googleAppsDomainValidated: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    Group: {\n        type: 'Group',\n        props: {\n            doesIncludeBosses: '?boolean',\n            name: 'string',\n        },\n        extends: 'Metadata',\n    },\n    HighVelocitySalesSettings: {\n        type: 'HighVelocitySalesSettings',\n        props: {\n            enableDispositionCategory: '?boolean',\n            enableEngagementWaveAnalyticsPref: '?boolean',\n            enableHighVelocitySales: '?boolean',\n            enableHighVelocitySalesSetup: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    HomePageComponent: {\n        type: 'HomePageComponent',\n        props: {\n            body: '?string',\n            height: '?number',\n            links: ['string'],\n            page: '?string',\n            pageComponentType: 'string',\n            showLabel: '?boolean',\n            showScrollbars: '?boolean',\n            width: '?string',\n        },\n        extends: 'Metadata',\n    },\n    HomePageLayout: {\n        type: 'HomePageLayout',\n        props: {\n            narrowComponents: ['string'],\n            wideComponents: ['string'],\n        },\n        extends: 'Metadata',\n    },\n    IdeasSettings: {\n        type: 'IdeasSettings',\n        props: {\n            enableChatterProfile: '?boolean',\n            enableHtmlIdea: '?boolean',\n            enableIdeaMultipleCategory: '?boolean',\n            enableIdeaThemes: '?boolean',\n            enableIdeas: '?boolean',\n            enableIdeasControllerExtensions: '?boolean',\n            enableIdeasReputation: '?boolean',\n            halfLife: '?number',\n            ideasProfilePage: '?string',\n        },\n        extends: 'Metadata',\n    },\n    IndustriesManufacturingSettings: {\n        type: 'IndustriesManufacturingSettings',\n        props: {\n            enableIndManufacturing: '?boolean',\n            enableIndustriesMfgAccountForecast: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    IndustriesSettings: {\n        type: 'IndustriesSettings',\n        props: {\n            allowMultipleProducersToWorkOnSamePolicy: '?boolean',\n            enableAccessToMasterListOfCoverageTypes: '?boolean',\n            enableBlockResourceAvailabilityOrgPref: '?boolean',\n            enableEventManagementOrgPref: '?boolean',\n            enableHCReferralScoring: '?boolean',\n            enableManyToManyRelationships: '?boolean',\n            enableMortgageRlaTotalsOrgPref: '?boolean',\n            enableMultiResourceOrgPref: '?boolean',\n            enableObjectDetection: '?boolean',\n            enableOverbookingOrgPref: '?boolean',\n            enableProviderSearchSyncOrgPref: '?boolean',\n            enableReferralScoring: '?boolean',\n            enableSentimentAnalysis: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    InstalledPackage: {\n        type: 'InstalledPackage',\n        props: {\n            activateRSS: 'boolean',\n            password: '?string',\n            versionNumber: 'string',\n        },\n        extends: 'Metadata',\n    },\n    IntegrationHubSettings: {\n        type: 'IntegrationHubSettings',\n        props: {\n            canonicalName: '?string',\n            canonicalNameBindingChar: '?string',\n            description: '?string',\n            isEnabled: '?boolean',\n            isProtected: '?boolean',\n            masterLabel: 'string',\n            setupData: '?string',\n            setupDefinition: '?string',\n            setupNamespace: '?string',\n            setupSimpleName: 'string',\n            uUID: '?string',\n            version: '?string',\n            versionBuild: '?number',\n            versionMajor: '?number',\n            versionMinor: '?number',\n            versionSetUuid: '?string',\n        },\n        extends: 'Metadata',\n    },\n    IntegrationHubSettingsType: {\n        type: 'IntegrationHubSettingsType',\n        props: {\n            canonicalName: '?string',\n            canonicalNameBindingChar: '?string',\n            description: '?string',\n            isEnabled: '?boolean',\n            isProtected: '?boolean',\n            masterLabel: 'string',\n            setupNamespace: '?string',\n            setupSimpleName: 'string',\n            uUID: '?string',\n            version: '?string',\n            versionBuild: '?number',\n            versionMajor: '?number',\n            versionMinor: '?number',\n            versionSetUuid: '?string',\n        },\n        extends: 'Metadata',\n    },\n    InvocableActionSettings: {\n        type: 'InvocableActionSettings',\n        props: {\n            isPartialSaveAllowed: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    IoTSettings: {\n        type: 'IoTSettings',\n        props: {\n            enableIoT: '?boolean',\n            enableIoTInsightsPilot: '?boolean',\n            enableIoTUsageEmail: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    IsvHammerSettings: {\n        type: 'IsvHammerSettings',\n        props: {\n            enableIsvHammerSubIsOptedOut: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    KeywordList: {\n        type: 'KeywordList',\n        props: {\n            description: '?string',\n            keywords: ['Keyword'],\n            masterLabel: 'string',\n        },\n        extends: 'Metadata',\n    },\n    Keyword: {\n        type: 'Keyword',\n        props: {\n            keyword: 'string',\n        },\n    },\n    KnowledgeSettings: {\n        type: 'KnowledgeSettings',\n        props: {\n            answers: '?KnowledgeAnswerSettings',\n            cases: '?KnowledgeCaseSettings',\n            defaultLanguage: '?string',\n            enableChatterQuestionKBDeflection: '?boolean',\n            enableCreateEditOnArticlesTab: '?boolean',\n            enableExternalMediaContent: '?boolean',\n            enableKnowledge: '?boolean',\n            enableKnowledgeArticleTextHighlights: '?boolean',\n            enableKnowledgeKeywordAutoComplete: '?boolean',\n            enableKnowledgeTitleAutoComplete: '?boolean',\n            enableLightningKbAutoLoadRichTextField: '?boolean',\n            enableLightningKnowledge: '?boolean',\n            languages: '?KnowledgeLanguageSettings',\n            showArticleSummariesCustomerPortal: '?boolean',\n            showArticleSummariesInternalApp: '?boolean',\n            showArticleSummariesPartnerPortal: '?boolean',\n            showValidationStatusField: '?boolean',\n            suggestedArticles: '?KnowledgeSuggestedArticlesSettings',\n        },\n        extends: 'Metadata',\n    },\n    KnowledgeAnswerSettings: {\n        type: 'KnowledgeAnswerSettings',\n        props: {\n            assignTo: '?string',\n            defaultArticleType: '?string',\n            enableArticleCreation: '?boolean',\n        },\n    },\n    KnowledgeCaseSettings: {\n        type: 'KnowledgeCaseSettings',\n        props: {\n            articlePDFCreationProfile: '?string',\n            articlePublicSharingCommunities: '?KnowledgeCommunitiesSettings',\n            articlePublicSharingSites: '?KnowledgeSitesSettings',\n            articlePublicSharingSitesChatterAnswers: '?KnowledgeSitesSettings',\n            assignTo: '?string',\n            customizationClass: '?string',\n            defaultContributionArticleType: '?string',\n            editor: '?string',\n            enableArticleCreation: '?boolean',\n            enableArticlePublicSharingSites: '?boolean',\n            enableCaseDataCategoryMapping: '?boolean',\n            useProfileForPDFCreation: '?boolean',\n        },\n    },\n    KnowledgeCommunitiesSettings: {\n        type: 'KnowledgeCommunitiesSettings',\n        props: {\n            community: ['string'],\n        },\n    },\n    KnowledgeSitesSettings: {\n        type: 'KnowledgeSitesSettings',\n        props: {\n            site: ['string'],\n        },\n    },\n    KnowledgeLanguageSettings: {\n        type: 'KnowledgeLanguageSettings',\n        props: {\n            language: ['KnowledgeLanguage'],\n        },\n    },\n    KnowledgeLanguage: {\n        type: 'KnowledgeLanguage',\n        props: {\n            active: '?boolean',\n            defaultAssignee: '?string',\n            defaultAssigneeType: '?string',\n            defaultReviewer: '?string',\n            defaultReviewerType: '?string',\n            name: 'string',\n        },\n    },\n    KnowledgeSuggestedArticlesSettings: {\n        type: 'KnowledgeSuggestedArticlesSettings',\n        props: {\n            caseFields: '?KnowledgeCaseFieldsSettings',\n            useSuggestedArticlesForCase: '?boolean',\n            workOrderFields: '?KnowledgeWorkOrderFieldsSettings',\n            workOrderLineItemFields: '?KnowledgeWorkOrderLineItemFieldsSettings',\n        },\n    },\n    KnowledgeCaseFieldsSettings: {\n        type: 'KnowledgeCaseFieldsSettings',\n        props: {\n            field: ['KnowledgeCaseField'],\n        },\n    },\n    KnowledgeCaseField: {\n        type: 'KnowledgeCaseField',\n        props: {\n            name: '?string',\n        },\n    },\n    KnowledgeWorkOrderFieldsSettings: {\n        type: 'KnowledgeWorkOrderFieldsSettings',\n        props: {\n            field: ['KnowledgeWorkOrderField'],\n        },\n    },\n    KnowledgeWorkOrderField: {\n        type: 'KnowledgeWorkOrderField',\n        props: {\n            name: '?string',\n        },\n    },\n    KnowledgeWorkOrderLineItemFieldsSettings: {\n        type: 'KnowledgeWorkOrderLineItemFieldsSettings',\n        props: {\n            field: ['KnowledgeWorkOrderLineItemField'],\n        },\n    },\n    KnowledgeWorkOrderLineItemField: {\n        type: 'KnowledgeWorkOrderLineItemField',\n        props: {\n            name: '?string',\n        },\n    },\n    LanguageSettings: {\n        type: 'LanguageSettings',\n        props: {\n            enableCanadaIcuFormat: '?boolean',\n            enableEndUserLanguages: '?boolean',\n            enableICULocaleDateFormat: '?boolean',\n            enablePlatformLanguages: '?boolean',\n            enableTranslationWorkbench: '?boolean',\n            useLanguageFallback: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    Layout: {\n        type: 'Layout',\n        props: {\n            customButtons: ['string'],\n            customConsoleComponents: '?CustomConsoleComponents',\n            emailDefault: '?boolean',\n            excludeButtons: ['string'],\n            feedLayout: '?FeedLayout',\n            headers: ['string'],\n            layoutSections: ['LayoutSection'],\n            miniLayout: '?MiniLayout',\n            multilineLayoutFields: ['string'],\n            platformActionList: '?PlatformActionList',\n            quickActionList: '?QuickActionList',\n            relatedContent: '?RelatedContent',\n            relatedLists: ['RelatedListItem'],\n            relatedObjects: ['string'],\n            runAssignmentRulesDefault: '?boolean',\n            showEmailCheckbox: '?boolean',\n            showHighlightsPanel: '?boolean',\n            showInteractionLogPanel: '?boolean',\n            showKnowledgeComponent: '?boolean',\n            showRunAssignmentRulesCheckbox: '?boolean',\n            showSolutionSection: '?boolean',\n            showSubmitAndAttachButton: '?boolean',\n            summaryLayout: '?SummaryLayout',\n        },\n        extends: 'Metadata',\n    },\n    CustomConsoleComponents: {\n        type: 'CustomConsoleComponents',\n        props: {\n            primaryTabComponents: '?PrimaryTabComponents',\n            subtabComponents: '?SubtabComponents',\n        },\n    },\n    PrimaryTabComponents: {\n        type: 'PrimaryTabComponents',\n        props: {\n            containers: ['Container'],\n        },\n    },\n    Container: {\n        type: 'Container',\n        props: {\n            height: '?number',\n            isContainerAutoSizeEnabled: 'boolean',\n            region: 'string',\n            sidebarComponents: ['SidebarComponent'],\n            style: 'string',\n            unit: 'string',\n            width: '?number',\n        },\n    },\n    SidebarComponent: {\n        type: 'SidebarComponent',\n        props: {\n            componentType: 'string',\n            createAction: '?string',\n            enableLinking: '?boolean',\n            height: '?number',\n            label: '?string',\n            lookup: '?string',\n            page: '?string',\n            relatedLists: ['RelatedList'],\n            unit: '?string',\n            updateAction: '?string',\n            width: '?number',\n        },\n    },\n    RelatedList: {\n        type: 'RelatedList',\n        props: {\n            hideOnDetail: 'boolean',\n            name: 'string',\n        },\n    },\n    SubtabComponents: {\n        type: 'SubtabComponents',\n        props: {\n            containers: ['Container'],\n        },\n    },\n    FeedLayout: {\n        type: 'FeedLayout',\n        props: {\n            autocollapsePublisher: '?boolean',\n            compactFeed: '?boolean',\n            feedFilterPosition: '?string',\n            feedFilters: ['FeedLayoutFilter'],\n            fullWidthFeed: '?boolean',\n            hideSidebar: '?boolean',\n            highlightExternalFeedItems: '?boolean',\n            leftComponents: ['FeedLayoutComponent'],\n            rightComponents: ['FeedLayoutComponent'],\n            useInlineFiltersInConsole: '?boolean',\n        },\n    },\n    FeedLayoutFilter: {\n        type: 'FeedLayoutFilter',\n        props: {\n            feedFilterName: '?string',\n            feedFilterType: 'string',\n            feedItemType: '?string',\n        },\n    },\n    FeedLayoutComponent: {\n        type: 'FeedLayoutComponent',\n        props: {\n            componentType: 'string',\n            height: '?number',\n            page: '?string',\n        },\n    },\n    LayoutSection: {\n        type: 'LayoutSection',\n        props: {\n            customLabel: '?boolean',\n            detailHeading: '?boolean',\n            editHeading: '?boolean',\n            label: '?string',\n            layoutColumns: ['LayoutColumn'],\n            style: 'string',\n        },\n    },\n    LayoutColumn: {\n        type: 'LayoutColumn',\n        props: {\n            layoutItems: ['LayoutItem'],\n            reserved: '?string',\n        },\n    },\n    LayoutItem: {\n        type: 'LayoutItem',\n        props: {\n            analyticsCloudComponent: '?AnalyticsCloudComponentLayoutItem',\n            behavior: '?string',\n            canvas: '?string',\n            component: '?string',\n            customLink: '?string',\n            emptySpace: '?boolean',\n            field: '?string',\n            height: '?number',\n            page: '?string',\n            reportChartComponent: '?ReportChartComponentLayoutItem',\n            scontrol: '?string',\n            showLabel: '?boolean',\n            showScrollbars: '?boolean',\n            width: '?string',\n        },\n    },\n    AnalyticsCloudComponentLayoutItem: {\n        type: 'AnalyticsCloudComponentLayoutItem',\n        props: {\n            assetType: 'string',\n            devName: 'string',\n            error: '?string',\n            filter: '?string',\n            height: '?number',\n            hideOnError: '?boolean',\n            showHeader: '?boolean',\n            showSharing: '?boolean',\n            showTitle: '?boolean',\n            width: '?string',\n        },\n    },\n    ReportChartComponentLayoutItem: {\n        type: 'ReportChartComponentLayoutItem',\n        props: {\n            cacheData: '?boolean',\n            contextFilterableField: '?string',\n            error: '?string',\n            hideOnError: '?boolean',\n            includeContext: '?boolean',\n            reportName: 'string',\n            showTitle: '?boolean',\n            size: '?string',\n        },\n    },\n    MiniLayout: {\n        type: 'MiniLayout',\n        props: {\n            fields: ['string'],\n            relatedLists: ['RelatedListItem'],\n        },\n    },\n    RelatedListItem: {\n        type: 'RelatedListItem',\n        props: {\n            customButtons: ['string'],\n            excludeButtons: ['string'],\n            fields: ['string'],\n            relatedList: 'string',\n            sortField: '?string',\n            sortOrder: '?string',\n        },\n    },\n    RelatedContent: {\n        type: 'RelatedContent',\n        props: {\n            relatedContentItems: ['RelatedContentItem'],\n        },\n    },\n    RelatedContentItem: {\n        type: 'RelatedContentItem',\n        props: {\n            layoutItem: 'LayoutItem',\n        },\n    },\n    SummaryLayout: {\n        type: 'SummaryLayout',\n        props: {\n            masterLabel: 'string',\n            sizeX: 'number',\n            sizeY: '?number',\n            sizeZ: '?number',\n            summaryLayoutItems: ['SummaryLayoutItem'],\n            summaryLayoutStyle: 'string',\n        },\n    },\n    SummaryLayoutItem: {\n        type: 'SummaryLayoutItem',\n        props: {\n            customLink: '?string',\n            field: '?string',\n            posX: 'number',\n            posY: '?number',\n            posZ: '?number',\n        },\n    },\n    LeadConfigSettings: {\n        type: 'LeadConfigSettings',\n        props: {\n            doesEnableLeadConvertDefaultSubjectBlankTaskCreation: '?boolean',\n            doesHideOpportunityInConvertLeadWindow: '?boolean',\n            doesPreserveLeadStatus: '?boolean',\n            doesSelectNoOpportunityOnConvertLead: '?boolean',\n            doesTrackHistory: '?boolean',\n            enableConversionsOnMobile: '?boolean',\n            enableOrgWideMergeAndDelete: '?boolean',\n            shouldLeadConvertRequireValidation: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    LeadConvertSettings: {\n        type: 'LeadConvertSettings',\n        props: {\n            allowOwnerChange: '?boolean',\n            objectMapping: ['ObjectMapping'],\n            opportunityCreationOptions: '?string',\n        },\n        extends: 'Metadata',\n    },\n    Letterhead: {\n        type: 'Letterhead',\n        props: {\n            available: 'boolean',\n            backgroundColor: 'string',\n            bodyColor: 'string',\n            bottomLine: 'LetterheadLine',\n            description: '?string',\n            footer: 'LetterheadHeaderFooter',\n            header: 'LetterheadHeaderFooter',\n            middleLine: 'LetterheadLine',\n            name: 'string',\n            topLine: 'LetterheadLine',\n        },\n        extends: 'Metadata',\n    },\n    LetterheadLine: {\n        type: 'LetterheadLine',\n        props: {\n            color: 'string',\n            height: 'number',\n        },\n    },\n    LetterheadHeaderFooter: {\n        type: 'LetterheadHeaderFooter',\n        props: {\n            backgroundColor: 'string',\n            height: 'number',\n            horizontalAlignment: '?string',\n            logo: '?string',\n            verticalAlignment: '?string',\n        },\n    },\n    LicenseDefinition: {\n        type: 'LicenseDefinition',\n        props: {\n            aggregationGroup: 'string',\n            description: '?string',\n            isPublished: 'boolean',\n            label: 'string',\n            licensedCustomPermissions: ['LicensedCustomPermissions'],\n            licensingAuthority: 'string',\n            licensingAuthorityProvider: 'string',\n            minPlatformVersion: 'number',\n            origin: 'string',\n            revision: 'number',\n            trialLicenseDuration: 'number',\n            trialLicenseQuantity: 'number',\n        },\n        extends: 'Metadata',\n    },\n    LicensedCustomPermissions: {\n        type: 'LicensedCustomPermissions',\n        props: {\n            customPermission: 'string',\n            licenseDefinition: 'string',\n        },\n    },\n    LightningBolt: {\n        type: 'LightningBolt',\n        props: {\n            category: 'string',\n            lightningBoltFeatures: ['LightningBoltFeatures'],\n            lightningBoltImages: ['LightningBoltImages'],\n            lightningBoltItems: ['LightningBoltItems'],\n            masterLabel: 'string',\n            publisher: 'string',\n            summary: 'string',\n        },\n        extends: 'Metadata',\n    },\n    LightningBoltFeatures: {\n        type: 'LightningBoltFeatures',\n        props: {\n            description: '?string',\n            order: 'number',\n            title: 'string',\n        },\n    },\n    LightningBoltImages: {\n        type: 'LightningBoltImages',\n        props: {\n            image: 'string',\n            order: 'number',\n        },\n    },\n    LightningBoltItems: {\n        type: 'LightningBoltItems',\n        props: {\n            name: 'string',\n            type: 'string',\n        },\n    },\n    LightningComponentBundle: {\n        type: 'LightningComponentBundle',\n        props: {\n            apiVersion: '?number',\n            description: '?string',\n            isExplicitImport: '?boolean',\n            isExposed: '?boolean',\n            lwcResources: '?LwcResources',\n            masterLabel: '?string',\n            runtimeNamespace: '?string',\n            targetConfigs: '?string',\n            targets: '?Targets',\n        },\n        extends: 'Metadata',\n    },\n    LwcResources: {\n        type: 'LwcResources',\n        props: {\n            lwcResource: ['LwcResource'],\n        },\n    },\n    LwcResource: {\n        type: 'LwcResource',\n        props: {\n            filePath: 'string',\n            source: 'string',\n        },\n    },\n    Targets: {\n        type: 'Targets',\n        props: {\n            target: ['string'],\n        },\n    },\n    LightningExperienceSettings: {\n        type: 'LightningExperienceSettings',\n        props: {\n            enableAccessCheckCrucPref: '?boolean',\n            enableApiUserLtngOutAccessPref: '?boolean',\n            enableAuraCDNPref: '?boolean',\n            enableFeedbackInMobile: '?boolean',\n            enableIE11DeprecationMsgHidden: '?boolean',\n            enableIE11LEXCrucPref: '?boolean',\n            enableInAppTooltips: '?boolean',\n            enableLEXOnIpadEnabled: '?boolean',\n            enableLexEndUsersNoSwitching: '?boolean',\n            enableNavPersonalizationOptOut: '?boolean',\n            enableRemoveThemeBrandBanner: '?boolean',\n            enableS1BannerPref: '?boolean',\n            enableS1BrowserEnabled: '?boolean',\n            enableS1DesktopEnabled: '?boolean',\n            enableS1UiLoggingEnabled: '?boolean',\n            enableTryLightningOptOut: '?boolean',\n            enableUseS1AlohaDesktop: '?boolean',\n            enableUsersAreLightningOnly: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    LightningExperienceTheme: {\n        type: 'LightningExperienceTheme',\n        props: {\n            defaultBrandingSet: 'string',\n            description: '?string',\n            masterLabel: 'string',\n            shouldOverrideLoadingImage: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    LightningMessageChannel: {\n        type: 'LightningMessageChannel',\n        props: {\n            description: '?string',\n            isExposed: '?boolean',\n            lightningMessageFields: ['LightningMessageField'],\n            masterLabel: 'string',\n        },\n        extends: 'Metadata',\n    },\n    LightningMessageField: {\n        type: 'LightningMessageField',\n        props: {\n            description: '?string',\n            fieldName: 'string',\n        },\n    },\n    LightningOnboardingConfig: {\n        type: 'LightningOnboardingConfig',\n        props: {\n            collaborationGroup: '?string',\n            customQuestion: 'string',\n            feedbackFormDaysFrequency: 'number',\n            isCustom: 'boolean',\n            masterLabel: 'string',\n            sendFeedbackToSalesforce: 'boolean',\n        },\n        extends: 'Metadata',\n    },\n    LiveAgentSettings: {\n        type: 'LiveAgentSettings',\n        props: {\n            enableLiveAgent: '?boolean',\n            enableQuickTextEnabled: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    LiveChatAgentConfig: {\n        type: 'LiveChatAgentConfig',\n        props: {\n            assignments: '?AgentConfigAssignments',\n            autoGreeting: '?string',\n            capacity: '?number',\n            criticalWaitTime: '?number',\n            customAgentName: '?string',\n            enableAgentFileTransfer: '?boolean',\n            enableAgentSneakPeek: '?boolean',\n            enableAssistanceFlag: '?boolean',\n            enableAutoAwayOnDecline: '?boolean',\n            enableAutoAwayOnPushTimeout: '?boolean',\n            enableChatConferencing: '?boolean',\n            enableChatMonitoring: '?boolean',\n            enableChatTransferToAgent: '?boolean',\n            enableChatTransferToButton: '?boolean',\n            enableChatTransferToSkill: '?boolean',\n            enableLogoutSound: '?boolean',\n            enableNotifications: '?boolean',\n            enableRequestSound: '?boolean',\n            enableSneakPeek: '?boolean',\n            enableVisitorBlocking: '?boolean',\n            enableWhisperMessage: '?boolean',\n            label: 'string',\n            supervisorDefaultAgentStatusFilter: '?string',\n            supervisorDefaultButtonFilter: '?string',\n            supervisorDefaultSkillFilter: '?string',\n            supervisorSkills: '?SupervisorAgentConfigSkills',\n            transferableButtons: '?AgentConfigButtons',\n            transferableSkills: '?AgentConfigSkills',\n        },\n        extends: 'Metadata',\n    },\n    AgentConfigAssignments: {\n        type: 'AgentConfigAssignments',\n        props: {\n            profiles: '?AgentConfigProfileAssignments',\n            users: '?AgentConfigUserAssignments',\n        },\n    },\n    AgentConfigProfileAssignments: {\n        type: 'AgentConfigProfileAssignments',\n        props: {\n            profile: ['string'],\n        },\n    },\n    AgentConfigUserAssignments: {\n        type: 'AgentConfigUserAssignments',\n        props: {\n            user: ['string'],\n        },\n    },\n    SupervisorAgentConfigSkills: {\n        type: 'SupervisorAgentConfigSkills',\n        props: {\n            skill: ['string'],\n        },\n    },\n    AgentConfigButtons: {\n        type: 'AgentConfigButtons',\n        props: {\n            button: ['string'],\n        },\n    },\n    AgentConfigSkills: {\n        type: 'AgentConfigSkills',\n        props: {\n            skill: ['string'],\n        },\n    },\n    LiveChatButton: {\n        type: 'LiveChatButton',\n        props: {\n            animation: '?string',\n            autoGreeting: '?string',\n            chasitorIdleTimeout: '?number',\n            chasitorIdleTimeoutWarning: '?number',\n            chatPage: '?string',\n            customAgentName: '?string',\n            deployments: '?LiveChatButtonDeployments',\n            enableQueue: '?boolean',\n            inviteEndPosition: '?string',\n            inviteImage: '?string',\n            inviteStartPosition: '?string',\n            isActive: '?boolean',\n            label: 'string',\n            numberOfReroutingAttempts: '?number',\n            offlineImage: '?string',\n            onlineImage: '?string',\n            optionsCustomRoutingIsEnabled: '?boolean',\n            optionsHasChasitorIdleTimeout: 'boolean',\n            optionsHasInviteAfterAccept: '?boolean',\n            optionsHasInviteAfterReject: '?boolean',\n            optionsHasRerouteDeclinedRequest: '?boolean',\n            optionsIsAutoAccept: '?boolean',\n            optionsIsInviteAutoRemove: '?boolean',\n            overallQueueLength: '?number',\n            perAgentQueueLength: '?number',\n            postChatPage: '?string',\n            postChatUrl: '?string',\n            preChatFormPage: '?string',\n            preChatFormUrl: '?string',\n            pushTimeOut: '?number',\n            routingType: 'string',\n            site: '?string',\n            skills: '?LiveChatButtonSkills',\n            timeToRemoveInvite: '?number',\n            type: 'string',\n            windowLanguage: '?string',\n        },\n        extends: 'Metadata',\n    },\n    LiveChatButtonDeployments: {\n        type: 'LiveChatButtonDeployments',\n        props: {\n            deployment: ['string'],\n        },\n    },\n    LiveChatButtonSkills: {\n        type: 'LiveChatButtonSkills',\n        props: {\n            skill: ['string'],\n        },\n    },\n    LiveChatDeployment: {\n        type: 'LiveChatDeployment',\n        props: {\n            brandingImage: '?string',\n            connectionTimeoutDuration: '?number',\n            connectionWarningDuration: '?number',\n            displayQueuePosition: '?boolean',\n            domainWhiteList: '?LiveChatDeploymentDomainWhitelist',\n            enablePrechatApi: '?boolean',\n            enableTranscriptSave: '?boolean',\n            label: 'string',\n            mobileBrandingImage: '?string',\n            site: '?string',\n            windowTitle: 'string',\n        },\n        extends: 'Metadata',\n    },\n    LiveChatDeploymentDomainWhitelist: {\n        type: 'LiveChatDeploymentDomainWhitelist',\n        props: {\n            domain: ['string'],\n        },\n    },\n    LiveChatSensitiveDataRule: {\n        type: 'LiveChatSensitiveDataRule',\n        props: {\n            actionType: 'string',\n            description: '?string',\n            enforceOn: 'number',\n            isEnabled: 'boolean',\n            pattern: 'string',\n            priority: 'number',\n            replacement: '?string',\n        },\n        extends: 'Metadata',\n    },\n    LiveMessageSettings: {\n        type: 'LiveMessageSettings',\n        props: {\n            enableLiveMessage: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    MacroSettings: {\n        type: 'MacroSettings',\n        props: {\n            enableAdvancedSearch: '?boolean',\n            macrosInFolders: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    ManagedContentType: {\n        type: 'ManagedContentType',\n        props: {\n            description: '?string',\n            developerName: 'string',\n            managedContentNodeTypes: ['ManagedContentNodeType'],\n            masterLabel: 'string',\n        },\n        extends: 'Metadata',\n    },\n    ManagedContentNodeType: {\n        type: 'ManagedContentNodeType',\n        props: {\n            helpText: '?string',\n            isLocalizable: '?boolean',\n            isRequired: '?boolean',\n            nodeLabel: 'string',\n            nodeName: 'string',\n            nodeType: 'string',\n            placeholderText: '?string',\n        },\n    },\n    ManagedTopic: {\n        type: 'ManagedTopic',\n        props: {\n            managedTopicType: 'string',\n            name: 'string',\n            parentName: 'string',\n            position: 'number',\n            topicDescription: 'string',\n        },\n        extends: 'Metadata',\n    },\n    ManagedTopics: {\n        type: 'ManagedTopics',\n        props: {\n            managedTopic: ['ManagedTopic'],\n        },\n        extends: 'Metadata',\n    },\n    SourceTrackingSettings: {\n        type: 'SourceTrackingSettings',\n        props: {\n            enableSourceTrackingSandboxes: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    MapsAndLocationSettings: {\n        type: 'MapsAndLocationSettings',\n        props: {\n            enableAddressAutoComplete: '?boolean',\n            enableMapsAndLocation: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    MatchingRule: {\n        type: 'MatchingRule',\n        props: {\n            booleanFilter: '?string',\n            description: '?string',\n            label: 'string',\n            matchingRuleItems: ['MatchingRuleItem'],\n            ruleStatus: 'string',\n        },\n        extends: 'Metadata',\n    },\n    MatchingRuleItem: {\n        type: 'MatchingRuleItem',\n        props: {\n            blankValueBehavior: '?string',\n            fieldName: 'string',\n            matchingMethod: 'string',\n        },\n    },\n    MatchingRules: {\n        type: 'MatchingRules',\n        props: {\n            matchingRules: ['MatchingRule'],\n        },\n        extends: 'Metadata',\n    },\n    MetadataWithContent: {\n        type: 'MetadataWithContent',\n        props: {\n            content: '?string',\n        },\n        extends: 'Metadata',\n    },\n    AccessControlPolicy: {\n        type: 'AccessControlPolicy',\n        props: {\n            active: 'boolean',\n            deploymentStatus: 'string',\n            description: '?string',\n            masterLabel: 'string',\n            targetEntity: 'string',\n            version: 'number',\n        },\n        extends: 'MetadataWithContent',\n    },\n    ApexClass: {\n        type: 'ApexClass',\n        props: {\n            apiVersion: 'number',\n            packageVersions: ['PackageVersion'],\n            status: 'string',\n        },\n        extends: 'MetadataWithContent',\n    },\n    ApexComponent: {\n        type: 'ApexComponent',\n        props: {\n            apiVersion: '?number',\n            description: '?string',\n            label: 'string',\n            packageVersions: ['PackageVersion'],\n        },\n        extends: 'MetadataWithContent',\n    },\n    ApexPage: {\n        type: 'ApexPage',\n        props: {\n            apiVersion: 'number',\n            availableInTouch: '?boolean',\n            confirmationTokenRequired: '?boolean',\n            description: '?string',\n            label: 'string',\n            packageVersions: ['PackageVersion'],\n        },\n        extends: 'MetadataWithContent',\n    },\n    ApexTrigger: {\n        type: 'ApexTrigger',\n        props: {\n            apiVersion: 'number',\n            packageVersions: ['PackageVersion'],\n            status: 'string',\n        },\n        extends: 'MetadataWithContent',\n    },\n    Certificate: {\n        type: 'Certificate',\n        props: {\n            caSigned: 'boolean',\n            encryptedWithPlatformEncryption: '?boolean',\n            expirationDate: '?string',\n            keySize: '?number',\n            masterLabel: 'string',\n            privateKeyExportable: '?boolean',\n        },\n        extends: 'MetadataWithContent',\n    },\n    ContentAsset: {\n        type: 'ContentAsset',\n        props: {\n            format: '?string',\n            isVisibleByExternalUsers: '?boolean',\n            language: 'string',\n            masterLabel: 'string',\n            originNetwork: '?string',\n            relationships: '?ContentAssetRelationships',\n            versions: 'ContentAssetVersions',\n        },\n        extends: 'MetadataWithContent',\n    },\n    ContentAssetRelationships: {\n        type: 'ContentAssetRelationships',\n        props: {\n            insightsApplication: ['ContentAssetLink'],\n            network: ['ContentAssetLink'],\n            organization: '?ContentAssetLink',\n            workspace: ['ContentAssetLink'],\n        },\n    },\n    ContentAssetLink: {\n        type: 'ContentAssetLink',\n        props: {\n            access: 'string',\n            isManagingWorkspace: '?boolean',\n            name: '?string',\n        },\n    },\n    ContentAssetVersions: {\n        type: 'ContentAssetVersions',\n        props: {\n            version: ['ContentAssetVersion'],\n        },\n    },\n    ContentAssetVersion: {\n        type: 'ContentAssetVersion',\n        props: {\n            number: 'string',\n            pathOnClient: 'string',\n            zipEntry: '?string',\n        },\n    },\n    Document: {\n        type: 'Document',\n        props: {\n            description: '?string',\n            internalUseOnly: 'boolean',\n            keywords: '?string',\n            name: '?string',\n            public: 'boolean',\n        },\n        extends: 'MetadataWithContent',\n    },\n    EclairGeoData: {\n        type: 'EclairGeoData',\n        props: {\n            maps: ['EclairMap'],\n            masterLabel: 'string',\n        },\n        extends: 'MetadataWithContent',\n    },\n    EclairMap: {\n        type: 'EclairMap',\n        props: {\n            boundingBoxBottom: '?number',\n            boundingBoxLeft: '?number',\n            boundingBoxRight: '?number',\n            boundingBoxTop: '?number',\n            mapLabel: '?string',\n            mapName: 'string',\n            projection: 'string',\n        },\n    },\n    EmailTemplate: {\n        type: 'EmailTemplate',\n        props: {\n            apiVersion: '?number',\n            attachedDocuments: ['string'],\n            attachments: ['Attachment'],\n            available: 'boolean',\n            description: '?string',\n            encodingKey: 'string',\n            letterhead: '?string',\n            name: 'string',\n            packageVersions: ['PackageVersion'],\n            relatedEntityType: '?string',\n            style: 'string',\n            subject: '?string',\n            textOnly: '?string',\n            type: 'string',\n            uiType: '?string',\n        },\n        extends: 'MetadataWithContent',\n    },\n    Attachment: {\n        type: 'Attachment',\n        props: {\n            content: 'string',\n            name: 'string',\n        },\n    },\n    NetworkBranding: {\n        type: 'NetworkBranding',\n        props: {\n            loginBackgroundImageUrl: '?string',\n            loginFooterText: '?string',\n            loginLogo: '?string',\n            loginLogoName: '?string',\n            loginPrimaryColor: '?string',\n            loginQuaternaryColor: '?string',\n            loginRightFrameUrl: '?string',\n            network: '?string',\n            pageFooter: '?string',\n            pageHeader: '?string',\n            primaryColor: 'string',\n            primaryComplementColor: 'string',\n            quaternaryColor: 'string',\n            quaternaryComplementColor: 'string',\n            secondaryColor: 'string',\n            staticLogoImageUrl: '?string',\n            tertiaryColor: 'string',\n            tertiaryComplementColor: 'string',\n            zeronaryColor: 'string',\n            zeronaryComplementColor: 'string',\n        },\n        extends: 'MetadataWithContent',\n    },\n    Orchestration: {\n        type: 'Orchestration',\n        props: {\n            context: 'string',\n            masterLabel: 'string',\n        },\n        extends: 'MetadataWithContent',\n    },\n    Scontrol: {\n        type: 'Scontrol',\n        props: {\n            contentSource: 'string',\n            description: '?string',\n            encodingKey: 'string',\n            fileContent: '?string',\n            fileName: '?string',\n            name: 'string',\n            supportsCaching: 'boolean',\n        },\n        extends: 'MetadataWithContent',\n    },\n    SiteDotCom: {\n        type: 'SiteDotCom',\n        props: {\n            label: 'string',\n            siteType: 'string',\n        },\n        extends: 'MetadataWithContent',\n    },\n    StaticResource: {\n        type: 'StaticResource',\n        props: {\n            cacheControl: 'string',\n            contentType: 'string',\n            description: '?string',\n        },\n        extends: 'MetadataWithContent',\n    },\n    UiPlugin: {\n        type: 'UiPlugin',\n        props: {\n            description: '?string',\n            extensionPointIdentifier: 'string',\n            isEnabled: 'boolean',\n            language: 'string',\n            masterLabel: 'string',\n        },\n        extends: 'MetadataWithContent',\n    },\n    WaveDashboard: {\n        type: 'WaveDashboard',\n        props: {\n            application: 'string',\n            description: '?string',\n            masterLabel: 'string',\n            templateAssetSourceName: '?string',\n        },\n        extends: 'MetadataWithContent',\n    },\n    WaveDataflow: {\n        type: 'WaveDataflow',\n        props: {\n            dataflowType: '?string',\n            description: '?string',\n            masterLabel: 'string',\n        },\n        extends: 'MetadataWithContent',\n    },\n    WaveLens: {\n        type: 'WaveLens',\n        props: {\n            application: 'string',\n            datasets: ['string'],\n            description: '?string',\n            masterLabel: 'string',\n            templateAssetSourceName: '?string',\n            visualizationType: 'string',\n        },\n        extends: 'MetadataWithContent',\n    },\n    WaveRecipe: {\n        type: 'WaveRecipe',\n        props: {\n            dataflow: 'string',\n            masterLabel: 'string',\n            securityPredicate: '?string',\n            targetDatasetAlias: 'string',\n        },\n        extends: 'MetadataWithContent',\n    },\n    MilestoneType: {\n        type: 'MilestoneType',\n        props: {\n            description: '?string',\n            recurrenceType: '?string',\n        },\n        extends: 'Metadata',\n    },\n    MlDomain: {\n        type: 'MlDomain',\n        props: {\n            description: '?string',\n            label: 'string',\n            mlIntents: ['MlIntent'],\n            mlSlotClasses: ['MlSlotClass'],\n        },\n        extends: 'Metadata',\n    },\n    MobileApplicationDetail: {\n        type: 'MobileApplicationDetail',\n        props: {\n            applicationBinaryFile: '?string',\n            applicationBinaryFileName: '?string',\n            applicationBundleIdentifier: '?string',\n            applicationFileLength: '?number',\n            applicationIconFile: '?string',\n            applicationIconFileName: '?string',\n            applicationInstallUrl: '?string',\n            devicePlatform: 'string',\n            deviceType: '?string',\n            minimumOsVersion: '?string',\n            privateApp: '?boolean',\n            version: 'string',\n        },\n        extends: 'Metadata',\n    },\n    MobileSettings: {\n        type: 'MobileSettings',\n        props: {\n            dashboardMobile: '?DashboardMobileSettings',\n            enableImportContactFromDevice: '?boolean',\n            enableLightningOnMobile: '?boolean',\n            enableOfflineDraftsEnabled: '?boolean',\n            enablePopulateNameManuallyInToday: '?boolean',\n            enableS1EncryptedStoragePref2: '?boolean',\n            enableS1OfflinePref: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    DashboardMobileSettings: {\n        type: 'DashboardMobileSettings',\n        props: {\n            enableDashboardIPadApp: '?boolean',\n        },\n    },\n    ModerationRule: {\n        type: 'ModerationRule',\n        props: {\n            action: 'string',\n            actionLimit: '?number',\n            active: 'boolean',\n            description: '?string',\n            entitiesAndFields: ['ModeratedEntityField'],\n            masterLabel: 'string',\n            notifyLimit: '?number',\n            timePeriod: '?string',\n            type: '?string',\n            userCriteria: ['string'],\n            userMessage: '?string',\n        },\n        extends: 'Metadata',\n    },\n    ModeratedEntityField: {\n        type: 'ModeratedEntityField',\n        props: {\n            entityName: 'string',\n            fieldName: '?string',\n            keywordList: '?string',\n        },\n    },\n    MyDomainSettings: {\n        type: 'MyDomainSettings',\n        props: {\n            canOnlyLoginWithMyDomainUrl: '?boolean',\n            doesApiLoginRequireOrgDomain: '?boolean',\n            enableNativeBrowserForAuthOnAndroid: '?boolean',\n            enableNativeBrowserForAuthOnIos: '?boolean',\n            useStabilizedMyDomainHostnames: '?boolean',\n            useStabilizedSandboxMyDomainHostnames: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    NameSettings: {\n        type: 'NameSettings',\n        props: {\n            enableMiddleName: '?boolean',\n            enableNameSuffix: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    NamedCredential: {\n        type: 'NamedCredential',\n        props: {\n            allowMergeFieldsInBody: '?boolean',\n            allowMergeFieldsInHeader: '?boolean',\n            authProvider: '?string',\n            authTokenEndpointUrl: '?string',\n            awsAccessKey: '?string',\n            awsAccessSecret: '?string',\n            awsRegion: '?string',\n            awsService: '?string',\n            certificate: '?string',\n            endpoint: '?string',\n            generateAuthorizationHeader: '?boolean',\n            jwtAudience: '?string',\n            jwtFormulaSubject: '?string',\n            jwtIssuer: '?string',\n            jwtSigningCertificate: '?string',\n            jwtTextSubject: '?string',\n            jwtValidityPeriodSeconds: '?number',\n            label: 'string',\n            oauthRefreshToken: '?string',\n            oauthScope: '?string',\n            oauthToken: '?string',\n            password: '?string',\n            principalType: 'string',\n            privateConnection: '?string',\n            protocol: 'string',\n            username: '?string',\n        },\n        extends: 'Metadata',\n    },\n    NavigationMenu: {\n        type: 'NavigationMenu',\n        props: {\n            container: 'string',\n            containerType: 'string',\n            label: 'string',\n            navigationMenuItem: ['NavigationMenuItem'],\n        },\n        extends: 'Metadata',\n    },\n    Network: {\n        type: 'Network',\n        props: {\n            allowInternalUserLogin: '?boolean',\n            allowMembersToFlag: '?boolean',\n            allowedExtensions: '?string',\n            caseCommentEmailTemplate: '?string',\n            changePasswordTemplate: 'string',\n            communityRoles: '?CommunityRoles',\n            description: '?string',\n            disableReputationRecordConversations: '?boolean',\n            emailFooterLogo: '?string',\n            emailFooterText: '?string',\n            emailSenderAddress: 'string',\n            emailSenderName: 'string',\n            enableCustomVFErrorPageOverrides: '?boolean',\n            enableDirectMessages: '?boolean',\n            enableGuestChatter: '?boolean',\n            enableGuestFileAccess: '?boolean',\n            enableGuestMemberVisibility: '?boolean',\n            enableInvitation: '?boolean',\n            enableKnowledgeable: '?boolean',\n            enableMemberVisibility: '?boolean',\n            enableNicknameDisplay: '?boolean',\n            enablePrivateMessages: '?boolean',\n            enableReputation: '?boolean',\n            enableShowAllNetworkSettings: '?boolean',\n            enableSiteAsContainer: '?boolean',\n            enableTalkingAboutStats: '?boolean',\n            enableTopicAssignmentRules: '?boolean',\n            enableTopicSuggestions: '?boolean',\n            enableUpDownVote: '?boolean',\n            feedChannel: '?string',\n            forgotPasswordTemplate: 'string',\n            gatherCustomerSentimentData: '?boolean',\n            lockoutTemplate: '?string',\n            logoutUrl: '?string',\n            maxFileSizeKb: '?number',\n            navigationLinkSet: '?NavigationLinkSet',\n            networkMemberGroups: '?NetworkMemberGroup',\n            networkPageOverrides: '?NetworkPageOverride',\n            newSenderAddress: '?string',\n            picassoSite: '?string',\n            recommendationAudience: '?RecommendationAudience',\n            recommendationDefinition: '?RecommendationDefinition',\n            reputationLevels: '?ReputationLevelDefinitions',\n            reputationPointsRules: '?ReputationPointsRules',\n            selfRegProfile: '?string',\n            selfRegistration: '?boolean',\n            sendWelcomeEmail: '?boolean',\n            site: 'string',\n            status: 'string',\n            tabs: 'NetworkTabSet',\n            urlPathPrefix: '?string',\n            verificationTemplate: '?string',\n            welcomeTemplate: 'string',\n        },\n        extends: 'Metadata',\n    },\n    CommunityRoles: {\n        type: 'CommunityRoles',\n        props: {\n            customerUserRole: '?string',\n            employeeUserRole: '?string',\n            partnerUserRole: '?string',\n        },\n    },\n    NetworkMemberGroup: {\n        type: 'NetworkMemberGroup',\n        props: {\n            permissionSet: ['string'],\n            profile: ['string'],\n        },\n    },\n    NetworkPageOverride: {\n        type: 'NetworkPageOverride',\n        props: {\n            changePasswordPageOverrideSetting: '?string',\n            forgotPasswordPageOverrideSetting: '?string',\n            homePageOverrideSetting: '?string',\n            loginPageOverrideSetting: '?string',\n            selfRegProfilePageOverrideSetting: '?string',\n        },\n    },\n    RecommendationAudience: {\n        type: 'RecommendationAudience',\n        props: {\n            recommendationAudienceDetails: ['RecommendationAudienceDetail'],\n        },\n    },\n    RecommendationAudienceDetail: {\n        type: 'RecommendationAudienceDetail',\n        props: {\n            audienceCriteriaType: '?string',\n            audienceCriteriaValue: '?string',\n            setupName: '?string',\n        },\n    },\n    RecommendationDefinition: {\n        type: 'RecommendationDefinition',\n        props: {\n            recommendationDefinitionDetails: ['RecommendationDefinitionDetail'],\n        },\n    },\n    RecommendationDefinitionDetail: {\n        type: 'RecommendationDefinitionDetail',\n        props: {\n            actionUrl: '?string',\n            description: '?string',\n            linkText: '?string',\n            scheduledRecommendations: '?ScheduledRecommendation',\n            setupName: '?string',\n            title: '?string',\n        },\n    },\n    ScheduledRecommendation: {\n        type: 'ScheduledRecommendation',\n        props: {\n            scheduledRecommendationDetails: ['ScheduledRecommendationDetail'],\n        },\n    },\n    ScheduledRecommendationDetail: {\n        type: 'ScheduledRecommendationDetail',\n        props: {\n            channel: '?string',\n            enabled: '?boolean',\n            rank: '?number',\n            recommendationAudience: '?string',\n        },\n    },\n    ReputationLevelDefinitions: {\n        type: 'ReputationLevelDefinitions',\n        props: {\n            level: ['ReputationLevel'],\n        },\n    },\n    ReputationLevel: {\n        type: 'ReputationLevel',\n        props: {\n            branding: '?ReputationBranding',\n            label: '?string',\n            lowerThreshold: 'number',\n        },\n    },\n    ReputationBranding: {\n        type: 'ReputationBranding',\n        props: {\n            smallImage: '?string',\n        },\n    },\n    ReputationPointsRules: {\n        type: 'ReputationPointsRules',\n        props: {\n            pointsRule: ['ReputationPointsRule'],\n        },\n    },\n    ReputationPointsRule: {\n        type: 'ReputationPointsRule',\n        props: {\n            eventType: 'string',\n            points: 'number',\n        },\n    },\n    NetworkTabSet: {\n        type: 'NetworkTabSet',\n        props: {\n            customTab: ['string'],\n            defaultTab: 'string',\n            standardTab: ['string'],\n        },\n    },\n    NotificationsSettings: {\n        type: 'NotificationsSettings',\n        props: {\n            enableMobileAppPushNotifications: '?boolean',\n            enableNotifications: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    OauthCustomScope: {\n        type: 'OauthCustomScope',\n        props: {\n            description: 'string',\n            developerName: 'string',\n            isProtected: '?boolean',\n            isPublic: '?boolean',\n            masterLabel: 'string',\n        },\n        extends: 'Metadata',\n    },\n    ObjectLinkingSettings: {\n        type: 'ObjectLinkingSettings',\n        props: {\n            enableObjectLinking: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    OmniChannelSettings: {\n        type: 'OmniChannelSettings',\n        props: {\n            enableOmniAutoLoginPrompt: '?boolean',\n            enableOmniChannel: '?boolean',\n            enableOmniSecondaryRoutingPriority: '?boolean',\n            enableOmniSkillsRouting: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    OpportunitySettings: {\n        type: 'OpportunitySettings',\n        props: {\n            autoActivateNewReminders: '?boolean',\n            customizableProductSchedulesEnabled: '?boolean',\n            doesAutoAddSplitOwnerAsOpportunityTeamMember: '?boolean',\n            doesEnforceStandardOpportunitySaveLogic: '?boolean',\n            enableFindSimilarOpportunities: '?boolean',\n            enableOpportunityFieldHistoryTracking: '?boolean',\n            enableOpportunityInsightsInMobile: '?boolean',\n            enableOpportunityTeam: '?boolean',\n            enableUpdateReminders: '?boolean',\n            findSimilarOppFilter: '?FindSimilarOppFilter',\n            promptToAddProducts: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    FindSimilarOppFilter: {\n        type: 'FindSimilarOppFilter',\n        props: {\n            similarOpportunitiesDisplayColumns: ['string'],\n            similarOpportunitiesMatchFields: ['string'],\n        },\n    },\n    OrchestrationContext: {\n        type: 'OrchestrationContext',\n        props: {\n            datasets: ['OrchestrationContextDataset'],\n            description: '?string',\n            events: ['OrchestrationContextEvent'],\n            imageFile: 'string',\n            imageScale: 'number',\n            masterLabel: 'string',\n            runtimeType: 'string',\n            salesforceObject: '?string',\n            salesforceObjectPrimaryKey: '?string',\n        },\n        extends: 'Metadata',\n    },\n    OrchestrationContextDataset: {\n        type: 'OrchestrationContextDataset',\n        props: {\n            datasetType: 'string',\n            orchestrationDataset: 'string',\n        },\n    },\n    OrchestrationContextEvent: {\n        type: 'OrchestrationContextEvent',\n        props: {\n            eventType: 'string',\n            orchestrationEvent: 'string',\n            platformEvent: 'string',\n            platformEventPrimaryKey: 'string',\n        },\n    },\n    OrderManagementSettings: {\n        type: 'OrderManagementSettings',\n        props: {\n            enableOrderManagement: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    OrderSettings: {\n        type: 'OrderSettings',\n        props: {\n            enableNegativeQuantity: '?boolean',\n            enableOrders: '?boolean',\n            enableReductionOrders: '?boolean',\n            enableZeroQuantity: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    OrgPreferenceSettings: {\n        type: 'OrgPreferenceSettings',\n        props: {\n            preferences: ['OrganizationSettingsDetail'],\n        },\n        extends: 'Metadata',\n    },\n    OrganizationSettingsDetail: {\n        type: 'OrganizationSettingsDetail',\n        props: {\n            settingName: 'string',\n            settingValue: 'boolean',\n        },\n    },\n    OrgSettings: {\n        type: 'OrgSettings',\n        props: {\n            enableCustomerSuccessPortal: '?boolean',\n            enableExtendedMailMerge: '?boolean',\n            enableIncludeContractStatus: '?boolean',\n            enableMakeDeploymentsMandatory: '?boolean',\n            enableManageSelfServiceUsers: '?boolean',\n            enableOrgFeedSentimentAnalysis: '?boolean',\n            enableRADeploymentAttributeOnly: '?boolean',\n            enableResetDivisionOnLogin: '?boolean',\n            saveMailMergeDocsAsSalesforceDocs: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    Package: {\n        type: 'Package',\n        props: {\n            apiAccessLevel: '?string',\n            description: '?string',\n            namespacePrefix: '?string',\n            objectPermissions: ['ProfileObjectPermissions'],\n            packageType: '?string',\n            postInstallClass: '?string',\n            setupWeblink: '?string',\n            types: ['PackageTypeMembers'],\n            uninstallClass: '?string',\n            version: 'string',\n        },\n        extends: 'Metadata',\n    },\n    ProfileObjectPermissions: {\n        type: 'ProfileObjectPermissions',\n        props: {\n            allowCreate: '?boolean',\n            allowDelete: '?boolean',\n            allowEdit: '?boolean',\n            allowRead: '?boolean',\n            modifyAllRecords: '?boolean',\n            object: 'string',\n            viewAllRecords: '?boolean',\n        },\n    },\n    PackageTypeMembers: {\n        type: 'PackageTypeMembers',\n        props: {\n            members: ['string'],\n            name: 'string',\n        },\n    },\n    PardotEinsteinSettings: {\n        type: 'PardotEinsteinSettings',\n        props: {\n            enableCampaignInsight: '?boolean',\n            enableEngagementScore: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    PardotSettings: {\n        type: 'PardotSettings',\n        props: {\n            enableB2bmaAppEnabled: '?boolean',\n            enableEngagementHistoryDashboards: '?boolean',\n            enablePardotAppV1Enabled: '?boolean',\n            enablePardotEnabled: '?boolean',\n            enableProspectActivityDataset: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    PartyDataModelSettings: {\n        type: 'PartyDataModelSettings',\n        props: {\n            enableAutoSelectIndividualOnMerge: '?boolean',\n            enableConsentManagement: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    PathAssistant: {\n        type: 'PathAssistant',\n        props: {\n            active: 'boolean',\n            entityName: 'string',\n            fieldName: 'string',\n            masterLabel: 'string',\n            pathAssistantSteps: ['PathAssistantStep'],\n            recordTypeName: 'string',\n        },\n        extends: 'Metadata',\n    },\n    PathAssistantStep: {\n        type: 'PathAssistantStep',\n        props: {\n            fieldNames: ['string'],\n            info: '?string',\n            picklistValueName: 'string',\n        },\n    },\n    PathAssistantSettings: {\n        type: 'PathAssistantSettings',\n        props: {\n            canOverrideAutoPathCollapseWithUserPref: '?boolean',\n            pathAssistantEnabled: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    PermissionSet: {\n        type: 'PermissionSet',\n        props: {\n            applicationVisibilities: ['PermissionSetApplicationVisibility'],\n            classAccesses: ['PermissionSetApexClassAccess'],\n            customMetadataTypeAccesses: ['PermissionSetCustomMetadataTypeAccess'],\n            customPermissions: ['PermissionSetCustomPermissions'],\n            description: '?string',\n            externalDataSourceAccesses: ['PermissionSetExternalDataSourceAccess'],\n            fieldPermissions: ['PermissionSetFieldPermissions'],\n            flowAccesses: ['PermissionSetFlowAccess'],\n            hasActivationRequired: '?boolean',\n            label: 'string',\n            license: '?string',\n            objectPermissions: ['PermissionSetObjectPermissions'],\n            pageAccesses: ['PermissionSetApexPageAccess'],\n            recordTypeVisibilities: ['PermissionSetRecordTypeVisibility'],\n            tabSettings: ['PermissionSetTabSetting'],\n            userPermissions: ['PermissionSetUserPermission'],\n        },\n        extends: 'Metadata',\n    },\n    PermissionSetApplicationVisibility: {\n        type: 'PermissionSetApplicationVisibility',\n        props: {\n            application: 'string',\n            visible: 'boolean',\n        },\n    },\n    PermissionSetApexClassAccess: {\n        type: 'PermissionSetApexClassAccess',\n        props: {\n            apexClass: 'string',\n            enabled: 'boolean',\n        },\n    },\n    PermissionSetCustomMetadataTypeAccess: {\n        type: 'PermissionSetCustomMetadataTypeAccess',\n        props: {\n            enabled: 'boolean',\n            name: 'string',\n        },\n    },\n    PermissionSetCustomPermissions: {\n        type: 'PermissionSetCustomPermissions',\n        props: {\n            enabled: 'boolean',\n            name: 'string',\n        },\n    },\n    PermissionSetExternalDataSourceAccess: {\n        type: 'PermissionSetExternalDataSourceAccess',\n        props: {\n            enabled: 'boolean',\n            externalDataSource: 'string',\n        },\n    },\n    PermissionSetFieldPermissions: {\n        type: 'PermissionSetFieldPermissions',\n        props: {\n            editable: 'boolean',\n            field: 'string',\n            readable: '?boolean',\n        },\n    },\n    PermissionSetFlowAccess: {\n        type: 'PermissionSetFlowAccess',\n        props: {\n            enabled: 'boolean',\n            flow: 'string',\n        },\n    },\n    PermissionSetObjectPermissions: {\n        type: 'PermissionSetObjectPermissions',\n        props: {\n            allowCreate: 'boolean',\n            allowDelete: 'boolean',\n            allowEdit: 'boolean',\n            allowRead: 'boolean',\n            modifyAllRecords: 'boolean',\n            object: 'string',\n            viewAllRecords: 'boolean',\n        },\n    },\n    PermissionSetApexPageAccess: {\n        type: 'PermissionSetApexPageAccess',\n        props: {\n            apexPage: 'string',\n            enabled: 'boolean',\n        },\n    },\n    PermissionSetRecordTypeVisibility: {\n        type: 'PermissionSetRecordTypeVisibility',\n        props: {\n            recordType: 'string',\n            visible: 'boolean',\n        },\n    },\n    PermissionSetTabSetting: {\n        type: 'PermissionSetTabSetting',\n        props: {\n            tab: 'string',\n            visibility: 'string',\n        },\n    },\n    PermissionSetUserPermission: {\n        type: 'PermissionSetUserPermission',\n        props: {\n            enabled: 'boolean',\n            name: 'string',\n        },\n    },\n    MutingPermissionSet: {\n        type: 'MutingPermissionSet',\n        props: {\n            label: 'string',\n        },\n        extends: 'PermissionSet',\n    },\n    PermissionSetGroup: {\n        type: 'PermissionSetGroup',\n        props: {\n            description: '?string',\n            label: 'string',\n            mutingPermissionSets: ['string'],\n            permissionSets: ['string'],\n            status: '?string',\n        },\n        extends: 'Metadata',\n    },\n    PersonListSettings: {\n        type: 'PersonListSettings',\n        props: {\n            enablePersonList: 'boolean',\n        },\n        extends: 'Metadata',\n    },\n    PicklistSettings: {\n        type: 'PicklistSettings',\n        props: {\n            isPicklistApiNameEditDisabled: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    PlatformCachePartition: {\n        type: 'PlatformCachePartition',\n        props: {\n            description: '?string',\n            isDefaultPartition: 'boolean',\n            masterLabel: 'string',\n            platformCachePartitionTypes: ['PlatformCachePartitionType'],\n        },\n        extends: 'Metadata',\n    },\n    PlatformCachePartitionType: {\n        type: 'PlatformCachePartitionType',\n        props: {\n            allocatedCapacity: 'number',\n            allocatedPurchasedCapacity: 'number',\n            allocatedTrialCapacity: 'number',\n            cacheType: 'string',\n        },\n    },\n    PlatformEncryptionSettings: {\n        type: 'PlatformEncryptionSettings',\n        props: {\n            canEncryptManagedPackageFields: '?boolean',\n            enableDeterministicEncryption: '?boolean',\n            enableEncryptFieldHistory: '?boolean',\n            enableEventBusEncryption: '?boolean',\n            isMEKForEncryptionRequired: '?boolean',\n            isUseHighAssuranceKeysRequired: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    PlatformEventChannel: {\n        type: 'PlatformEventChannel',\n        props: {\n            channelType: 'string',\n            label: 'string',\n        },\n        extends: 'Metadata',\n    },\n    PlatformEventChannelMember: {\n        type: 'PlatformEventChannelMember',\n        props: {\n            eventChannel: 'string',\n            selectedEntity: 'string',\n        },\n        extends: 'Metadata',\n    },\n    Portal: {\n        type: 'Portal',\n        props: {\n            active: 'boolean',\n            admin: '?string',\n            defaultLanguage: '?string',\n            description: '?string',\n            emailSenderAddress: 'string',\n            emailSenderName: 'string',\n            enableSelfCloseCase: '?boolean',\n            footerDocument: '?string',\n            forgotPassTemplate: '?string',\n            headerDocument: '?string',\n            isSelfRegistrationActivated: '?boolean',\n            loginHeaderDocument: '?string',\n            logoDocument: '?string',\n            logoutUrl: '?string',\n            newCommentTemplate: '?string',\n            newPassTemplate: '?string',\n            newUserTemplate: '?string',\n            ownerNotifyTemplate: '?string',\n            selfRegNewUserUrl: '?string',\n            selfRegUserDefaultProfile: '?string',\n            selfRegUserDefaultRole: '?string',\n            selfRegUserTemplate: '?string',\n            showActionConfirmation: '?boolean',\n            stylesheetDocument: '?string',\n            type: 'string',\n        },\n        extends: 'Metadata',\n    },\n    PostTemplate: {\n        type: 'PostTemplate',\n        props: {\n            default: '?boolean',\n            description: '?string',\n            fields: ['string'],\n            label: 'string',\n        },\n        extends: 'Metadata',\n    },\n    PresenceDeclineReason: {\n        type: 'PresenceDeclineReason',\n        props: {\n            label: 'string',\n        },\n        extends: 'Metadata',\n    },\n    PresenceUserConfig: {\n        type: 'PresenceUserConfig',\n        props: {\n            assignments: '?PresenceConfigAssignments',\n            capacity: 'number',\n            declineReasons: ['string'],\n            enableAutoAccept: '?boolean',\n            enableDecline: '?boolean',\n            enableDeclineReason: '?boolean',\n            enableDisconnectSound: '?boolean',\n            enableRequestSound: '?boolean',\n            label: 'string',\n            presenceStatusOnDecline: '?string',\n            presenceStatusOnPushTimeout: '?string',\n        },\n        extends: 'Metadata',\n    },\n    PresenceConfigAssignments: {\n        type: 'PresenceConfigAssignments',\n        props: {\n            profiles: '?PresenceConfigProfileAssignments',\n            users: '?PresenceConfigUserAssignments',\n        },\n    },\n    PresenceConfigProfileAssignments: {\n        type: 'PresenceConfigProfileAssignments',\n        props: {\n            profile: ['string'],\n        },\n    },\n    PresenceConfigUserAssignments: {\n        type: 'PresenceConfigUserAssignments',\n        props: {\n            user: ['string'],\n        },\n    },\n    PrivacySettings: {\n        type: 'PrivacySettings',\n        props: {\n            enableConsentAuditTrail: '?boolean',\n            enableConsentEventStream: '?boolean',\n            enableDefaultMetadataValues: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    PrivateConnection: {\n        type: 'PrivateConnection',\n        props: {\n            description: '?string',\n            direction: 'string',\n            externalConnectionProperties: ['ExternalConnectionProperty'],\n            label: 'string',\n            status: 'string',\n            type: 'string',\n        },\n        extends: 'Metadata',\n    },\n    ExternalConnectionProperty: {\n        type: 'ExternalConnectionProperty',\n        props: {\n            propertyName: 'string',\n            propertyValue: 'string',\n        },\n    },\n    ProductSettings: {\n        type: 'ProductSettings',\n        props: {\n            enableCascadeActivateToRelatedPrices: '?boolean',\n            enableMySettings: '?boolean',\n            enableQuantitySchedule: '?boolean',\n            enableRevenueSchedule: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    Profile: {\n        type: 'Profile',\n        props: {\n            applicationVisibilities: ['ProfileApplicationVisibility'],\n            categoryGroupVisibilities: ['ProfileCategoryGroupVisibility'],\n            classAccesses: ['ProfileApexClassAccess'],\n            custom: '?boolean',\n            customMetadataTypeAccesses: ['ProfileCustomMetadataTypeAccess'],\n            customPermissions: ['ProfileCustomPermissions'],\n            description: '?string',\n            externalDataSourceAccesses: ['ProfileExternalDataSourceAccess'],\n            fieldPermissions: ['ProfileFieldLevelSecurity'],\n            flowAccesses: ['ProfileFlowAccess'],\n            layoutAssignments: ['ProfileLayoutAssignment'],\n            loginHours: '?ProfileLoginHours',\n            loginIpRanges: ['ProfileLoginIpRange'],\n            objectPermissions: ['ProfileObjectPermissions'],\n            pageAccesses: ['ProfileApexPageAccess'],\n            profileActionOverrides: ['ProfileActionOverride'],\n            recordTypeVisibilities: ['ProfileRecordTypeVisibility'],\n            tabVisibilities: ['ProfileTabVisibility'],\n            userLicense: '?string',\n            userPermissions: ['ProfileUserPermission'],\n        },\n        extends: 'Metadata',\n    },\n    ProfileApplicationVisibility: {\n        type: 'ProfileApplicationVisibility',\n        props: {\n            application: 'string',\n            default: 'boolean',\n            visible: 'boolean',\n        },\n    },\n    ProfileCategoryGroupVisibility: {\n        type: 'ProfileCategoryGroupVisibility',\n        props: {\n            dataCategories: ['string'],\n            dataCategoryGroup: 'string',\n            visibility: 'string',\n        },\n    },\n    ProfileApexClassAccess: {\n        type: 'ProfileApexClassAccess',\n        props: {\n            apexClass: 'string',\n            enabled: 'boolean',\n        },\n    },\n    ProfileCustomMetadataTypeAccess: {\n        type: 'ProfileCustomMetadataTypeAccess',\n        props: {\n            enabled: 'boolean',\n            name: 'string',\n        },\n    },\n    ProfileCustomPermissions: {\n        type: 'ProfileCustomPermissions',\n        props: {\n            enabled: 'boolean',\n            name: 'string',\n        },\n    },\n    ProfileExternalDataSourceAccess: {\n        type: 'ProfileExternalDataSourceAccess',\n        props: {\n            enabled: 'boolean',\n            externalDataSource: 'string',\n        },\n    },\n    ProfileFieldLevelSecurity: {\n        type: 'ProfileFieldLevelSecurity',\n        props: {\n            editable: 'boolean',\n            field: 'string',\n            readable: '?boolean',\n        },\n    },\n    ProfileFlowAccess: {\n        type: 'ProfileFlowAccess',\n        props: {\n            enabled: 'boolean',\n            flow: 'string',\n        },\n    },\n    ProfileLayoutAssignment: {\n        type: 'ProfileLayoutAssignment',\n        props: {\n            layout: 'string',\n            recordType: '?string',\n        },\n    },\n    ProfileLoginHours: {\n        type: 'ProfileLoginHours',\n        props: {\n            fridayEnd: '?string',\n            fridayStart: '?string',\n            mondayEnd: '?string',\n            mondayStart: '?string',\n            saturdayEnd: '?string',\n            saturdayStart: '?string',\n            sundayEnd: '?string',\n            sundayStart: '?string',\n            thursdayEnd: '?string',\n            thursdayStart: '?string',\n            tuesdayEnd: '?string',\n            tuesdayStart: '?string',\n            wednesdayEnd: '?string',\n            wednesdayStart: '?string',\n        },\n    },\n    ProfileLoginIpRange: {\n        type: 'ProfileLoginIpRange',\n        props: {\n            description: '?string',\n            endAddress: 'string',\n            startAddress: 'string',\n        },\n    },\n    ProfileApexPageAccess: {\n        type: 'ProfileApexPageAccess',\n        props: {\n            apexPage: 'string',\n            enabled: 'boolean',\n        },\n    },\n    ProfileRecordTypeVisibility: {\n        type: 'ProfileRecordTypeVisibility',\n        props: {\n            default: 'boolean',\n            personAccountDefault: '?boolean',\n            recordType: 'string',\n            visible: 'boolean',\n        },\n    },\n    ProfileTabVisibility: {\n        type: 'ProfileTabVisibility',\n        props: {\n            tab: 'string',\n            visibility: 'string',\n        },\n    },\n    ProfileUserPermission: {\n        type: 'ProfileUserPermission',\n        props: {\n            enabled: 'boolean',\n            name: 'string',\n        },\n    },\n    ProfilePasswordPolicy: {\n        type: 'ProfilePasswordPolicy',\n        props: {\n            forgotPasswordRedirect: '?boolean',\n            lockoutInterval: 'number',\n            maxLoginAttempts: 'number',\n            minimumPasswordLength: 'number',\n            minimumPasswordLifetime: '?boolean',\n            obscure: '?boolean',\n            passwordComplexity: 'number',\n            passwordExpiration: 'number',\n            passwordHistory: 'number',\n            passwordQuestion: 'number',\n            profile: 'string',\n        },\n        extends: 'Metadata',\n    },\n    ProfileSessionSetting: {\n        type: 'ProfileSessionSetting',\n        props: {\n            externalCommunityUserIdentityVerif: 'boolean',\n            forceLogout: 'boolean',\n            profile: 'string',\n            requiredSessionLevel: '?string',\n            sessionPersistence: 'boolean',\n            sessionTimeout: 'number',\n            sessionTimeoutWarning: 'boolean',\n        },\n        extends: 'Metadata',\n    },\n    Prompt: {\n        type: 'Prompt',\n        props: {\n            masterLabel: 'string',\n            promptVersions: ['PromptVersion'],\n        },\n        extends: 'Metadata',\n    },\n    PromptVersion: {\n        type: 'PromptVersion',\n        props: {\n            actionButtonLabel: '?string',\n            actionButtonLink: '?string',\n            body: 'string',\n            customApplication: '?string',\n            delayDays: 'number',\n            description: '?string',\n            dismissButtonLabel: '?string',\n            displayPosition: '?string',\n            displayType: 'string',\n            endDate: '?string',\n            header: '?string',\n            indexWithIsPublished: '?string',\n            indexWithoutIsPublished: '?string',\n            isPublished: '?boolean',\n            masterLabel: 'string',\n            publishedByUser: '?string',\n            publishedDate: '?string',\n            shouldDisplayActionButton: 'boolean',\n            startDate: 'string',\n            targetAppDeveloperName: 'string',\n            targetAppNamespacePrefix: '?string',\n            targetPageKey1: 'string',\n            targetPageKey2: '?string',\n            targetPageType: 'string',\n            timesToDisplay: 'number',\n            title: 'string',\n            uiFormulaRule: '?UiFormulaRule',\n            userAccess: 'string',\n            versionNumber: 'number',\n        },\n    },\n    Queue: {\n        type: 'Queue',\n        props: {\n            doesSendEmailToMembers: '?boolean',\n            email: '?string',\n            name: 'string',\n            queueMembers: '?QueueMembers',\n            queueRoutingConfig: '?string',\n            queueSobject: ['QueueSobject'],\n        },\n        extends: 'Metadata',\n    },\n    QueueMembers: {\n        type: 'QueueMembers',\n        props: {\n            publicGroups: '?PublicGroups',\n            roleAndSubordinates: '?RoleAndSubordinates',\n            roleAndSubordinatesInternal: '?RoleAndSubordinatesInternal',\n            roles: '?Roles',\n            users: '?Users',\n        },\n    },\n    PublicGroups: {\n        type: 'PublicGroups',\n        props: {\n            publicGroup: ['string'],\n        },\n    },\n    RoleAndSubordinates: {\n        type: 'RoleAndSubordinates',\n        props: {\n            roleAndSubordinate: ['string'],\n        },\n    },\n    RoleAndSubordinatesInternal: {\n        type: 'RoleAndSubordinatesInternal',\n        props: {\n            roleAndSubordinateInternal: ['string'],\n        },\n    },\n    Roles: {\n        type: 'Roles',\n        props: {\n            role: ['string'],\n        },\n    },\n    Users: {\n        type: 'Users',\n        props: {\n            user: ['string'],\n        },\n    },\n    QueueSobject: {\n        type: 'QueueSobject',\n        props: {\n            sobjectType: 'string',\n        },\n    },\n    QueueRoutingConfig: {\n        type: 'QueueRoutingConfig',\n        props: {\n            capacityPercentage: '?number',\n            capacityWeight: '?number',\n            dropAdditionalSkillsTimeout: '?number',\n            isAttributeBased: '?boolean',\n            label: 'string',\n            pushTimeout: '?number',\n            queueOverflowAssignee: '?string',\n            routingModel: 'string',\n            routingPriority: 'number',\n            userOverflowAssignee: '?string',\n        },\n        extends: 'Metadata',\n    },\n    QuickAction: {\n        type: 'QuickAction',\n        props: {\n            canvas: '?string',\n            description: '?string',\n            fieldOverrides: ['FieldOverride'],\n            flowDefinition: '?string',\n            height: '?number',\n            icon: '?string',\n            isProtected: '?boolean',\n            label: '?string',\n            lightningComponent: '?string',\n            mobExtDisplayMode: '?string',\n            optionsCreateFeedItem: 'boolean',\n            page: '?string',\n            quickActionLayout: '?QuickActionLayout',\n            quickActionSendEmailOptions: '?QuickActionSendEmailOptions',\n            standardLabel: '?string',\n            successMessage: '?string',\n            targetObject: '?string',\n            targetParentField: '?string',\n            targetRecordType: '?string',\n            type: 'string',\n            width: '?number',\n        },\n        extends: 'Metadata',\n    },\n    FieldOverride: {\n        type: 'FieldOverride',\n        props: {\n            field: 'string',\n            formula: '?string',\n            literalValue: '?string',\n        },\n    },\n    QuickActionLayout: {\n        type: 'QuickActionLayout',\n        props: {\n            layoutSectionStyle: 'string',\n            quickActionLayoutColumns: ['QuickActionLayoutColumn'],\n        },\n    },\n    QuickActionLayoutColumn: {\n        type: 'QuickActionLayoutColumn',\n        props: {\n            quickActionLayoutItems: ['QuickActionLayoutItem'],\n        },\n    },\n    QuickActionLayoutItem: {\n        type: 'QuickActionLayoutItem',\n        props: {\n            emptySpace: '?boolean',\n            field: '?string',\n            uiBehavior: '?string',\n        },\n    },\n    QuickActionSendEmailOptions: {\n        type: 'QuickActionSendEmailOptions',\n        props: {\n            defaultEmailTemplateName: '?string',\n            ignoreDefaultEmailTemplateSubject: 'boolean',\n        },\n    },\n    QuoteSettings: {\n        type: 'QuoteSettings',\n        props: {\n            enableQuote: 'boolean',\n            enableQuotesWithoutOppEnabled: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    RecommendationStrategy: {\n        type: 'RecommendationStrategy',\n        props: {\n            actionContext: ['StrategyAction'],\n            contextRecordType: '?string',\n            description: '?string',\n            filter: ['StrategyNodeFilter'],\n            if: ['StrategyNodeIf'],\n            invocableAction: ['StrategyNodeInvocableAction'],\n            isTemplate: '?boolean',\n            label: 'string',\n            map: ['StrategyNodeMap'],\n            mutuallyExclusive: ['StrategyNodeExclusive'],\n            onBehalfOfExpression: '?string',\n            recommendationLimit: ['StrategyNodeRecommendationLimit'],\n            recommendationLoad: ['StrategyNodeRecommendationLoad'],\n            sort: ['StrategyNodeSort'],\n            union: ['StrategyNodeUnion'],\n        },\n        extends: 'Metadata',\n    },\n    StrategyAction: {\n        type: 'StrategyAction',\n        props: {\n            action: 'string',\n            argument: ['StrategyActionArg'],\n            description: '?string',\n            label: '?string',\n            name: 'string',\n            type: 'string',\n        },\n    },\n    StrategyActionArg: {\n        type: 'StrategyActionArg',\n        props: {\n            name: 'string',\n            value: 'string',\n        },\n    },\n    StrategyNodeFilter: {\n        type: 'StrategyNodeFilter',\n        props: {\n            expression: 'string',\n        },\n        extends: 'StrategyNodeUnionBase',\n    },\n    StrategyNodeUnionBase: {\n        type: 'StrategyNodeUnionBase',\n        props: {\n            limit: '?number',\n        },\n        extends: 'StrategyNodeBase',\n    },\n    StrategyNodeBase: {\n        type: 'StrategyNodeBase',\n        props: {\n            childNode: ['string'],\n            description: '?string',\n            label: '?string',\n            name: 'string',\n        },\n    },\n    StrategyNodeExclusive: {\n        type: 'StrategyNodeExclusive',\n        props: {},\n        extends: 'StrategyNodeUnionBase',\n    },\n    StrategyNodeIf: {\n        type: 'StrategyNodeIf',\n        props: {\n            childNodeExpression: ['IfExpression'],\n            onlyFirstMatch: '?boolean',\n        },\n        extends: 'StrategyNodeUnionBase',\n    },\n    IfExpression: {\n        type: 'IfExpression',\n        props: {\n            childName: 'string',\n            expression: 'string',\n        },\n    },\n    StrategyNodeInvocableAction: {\n        type: 'StrategyNodeInvocableAction',\n        props: {\n            action: 'string',\n            argument: ['StrategyNodeInvocableActionArg'],\n            isGenerator: 'boolean',\n            type: 'string',\n        },\n        extends: 'StrategyNodeUnionBase',\n    },\n    StrategyNodeInvocableActionArg: {\n        type: 'StrategyNodeInvocableActionArg',\n        props: {\n            name: 'string',\n            value: 'string',\n        },\n    },\n    StrategyNodeMap: {\n        type: 'StrategyNodeMap',\n        props: {\n            mapExpression: ['MapExpression'],\n        },\n        extends: 'StrategyNodeUnionBase',\n    },\n    MapExpression: {\n        type: 'MapExpression',\n        props: {\n            expression: 'string',\n            name: 'string',\n            type: 'string',\n        },\n    },\n    StrategyNodeRecommendationLimit: {\n        type: 'StrategyNodeRecommendationLimit',\n        props: {\n            filterMode: ['string'],\n            lookbackDuration: '?number',\n            maxRecommendationCount: '?number',\n        },\n        extends: 'StrategyNodeUnionBase',\n    },\n    StrategyNodeRecommendationLoad: {\n        type: 'StrategyNodeRecommendationLoad',\n        props: {\n            condition: ['RecommendationLoadCondition'],\n            conditionLogic: '?string',\n        },\n        extends: 'StrategyNodeUnionBase',\n    },\n    RecommendationLoadCondition: {\n        type: 'RecommendationLoadCondition',\n        props: {\n            field: 'string',\n            operator: 'string',\n            value: 'RecommendationConditionValue',\n        },\n    },\n    RecommendationConditionValue: {\n        type: 'RecommendationConditionValue',\n        props: {\n            type: 'string',\n            value: '?string',\n        },\n    },\n    StrategyNodeSort: {\n        type: 'StrategyNodeSort',\n        props: {\n            field: ['StrategyNodeSortField'],\n        },\n        extends: 'StrategyNodeUnionBase',\n    },\n    StrategyNodeSortField: {\n        type: 'StrategyNodeSortField',\n        props: {\n            name: 'string',\n            nullsFirst: '?boolean',\n            order: '?string',\n        },\n    },\n    StrategyNodeUnion: {\n        type: 'StrategyNodeUnion',\n        props: {},\n        extends: 'StrategyNodeUnionBase',\n    },\n    RecordActionDeployment: {\n        type: 'RecordActionDeployment',\n        props: {\n            channelConfigurations: ['RecordActionDeploymentChannel'],\n            deploymentContexts: ['RecordActionDeploymentContext'],\n            hasGuidedActions: '?boolean',\n            hasRecommendations: '?boolean',\n            masterLabel: 'string',\n            recommendation: '?RecordActionRecommendation',\n            selectableItems: ['RecordActionSelectableItem'],\n        },\n        extends: 'Metadata',\n    },\n    RecordActionDeploymentChannel: {\n        type: 'RecordActionDeploymentChannel',\n        props: {\n            channel: 'string',\n            channelItems: ['RecordActionDefaultItem'],\n            isAutopopEnabled: '?boolean',\n        },\n    },\n    RecordActionDefaultItem: {\n        type: 'RecordActionDefaultItem',\n        props: {\n            action: 'string',\n            isMandatory: '?boolean',\n            isUiRemoveHidden: '?boolean',\n            pinned: 'string',\n            position: 'number',\n            type: 'string',\n        },\n    },\n    RecordActionDeploymentContext: {\n        type: 'RecordActionDeploymentContext',\n        props: {\n            entityName: 'string',\n            recommendationStrategy: '?string',\n        },\n    },\n    RecordActionRecommendation: {\n        type: 'RecordActionRecommendation',\n        props: {\n            defaultStrategy: '?string',\n            hasDescription: 'boolean',\n            hasImage: 'boolean',\n            hasRejectAction: 'boolean',\n            hasTitle: 'boolean',\n            maxDisplayRecommendations: 'number',\n        },\n    },\n    RecordActionSelectableItem: {\n        type: 'RecordActionSelectableItem',\n        props: {\n            action: 'string',\n            type: 'string',\n        },\n    },\n    RecordPageSettings: {\n        type: 'RecordPageSettings',\n        props: {\n            enableActivityRelatedList: '?boolean',\n            enableFullRecordView: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    RemoteSiteSetting: {\n        type: 'RemoteSiteSetting',\n        props: {\n            description: '?string',\n            disableProtocolSecurity: 'boolean',\n            isActive: 'boolean',\n            url: 'string',\n        },\n        extends: 'Metadata',\n    },\n    Report: {\n        type: 'Report',\n        props: {\n            aggregates: ['ReportAggregate'],\n            block: ['Report'],\n            blockInfo: '?ReportBlockInfo',\n            buckets: ['ReportBucketField'],\n            chart: '?ReportChart',\n            colorRanges: ['ReportColorRange'],\n            columns: ['ReportColumn'],\n            crossFilters: ['ReportCrossFilter'],\n            currency: '?string',\n            customDetailFormulas: ['ReportCustomDetailFormula'],\n            dataCategoryFilters: ['ReportDataCategoryFilter'],\n            description: '?string',\n            division: '?string',\n            filter: '?ReportFilter',\n            folderName: '?string',\n            format: 'string',\n            formattingRules: ['ReportFormattingRule'],\n            groupingsAcross: ['ReportGrouping'],\n            groupingsDown: ['ReportGrouping'],\n            historicalSelector: '?ReportHistoricalSelector',\n            name: 'string',\n            numSubscriptions: '?number',\n            params: ['ReportParam'],\n            reportType: 'string',\n            roleHierarchyFilter: '?string',\n            rowLimit: '?number',\n            scope: '?string',\n            showCurrentDate: '?boolean',\n            showDetails: '?boolean',\n            showGrandTotal: '?boolean',\n            showSubTotals: '?boolean',\n            sortColumn: '?string',\n            sortOrder: '?string',\n            territoryHierarchyFilter: '?string',\n            timeFrameFilter: '?ReportTimeFrameFilter',\n            userFilter: '?string',\n        },\n        extends: 'Metadata',\n    },\n    ReportAggregate: {\n        type: 'ReportAggregate',\n        props: {\n            acrossGroupingContext: '?string',\n            calculatedFormula: 'string',\n            datatype: 'string',\n            description: '?string',\n            developerName: 'string',\n            downGroupingContext: '?string',\n            isActive: 'boolean',\n            isCrossBlock: '?boolean',\n            masterLabel: 'string',\n            reportType: '?string',\n            scale: '?number',\n        },\n    },\n    ReportBlockInfo: {\n        type: 'ReportBlockInfo',\n        props: {\n            aggregateReferences: ['ReportAggregateReference'],\n            blockId: 'string',\n            joinTable: 'string',\n        },\n    },\n    ReportAggregateReference: {\n        type: 'ReportAggregateReference',\n        props: {\n            aggregate: 'string',\n        },\n    },\n    ReportBucketField: {\n        type: 'ReportBucketField',\n        props: {\n            bucketType: 'string',\n            developerName: 'string',\n            masterLabel: 'string',\n            nullTreatment: '?string',\n            otherBucketLabel: '?string',\n            sourceColumnName: 'string',\n            useOther: '?boolean',\n            values: ['ReportBucketFieldValue'],\n        },\n    },\n    ReportBucketFieldValue: {\n        type: 'ReportBucketFieldValue',\n        props: {\n            sourceValues: ['ReportBucketFieldSourceValue'],\n            value: 'string',\n        },\n    },\n    ReportBucketFieldSourceValue: {\n        type: 'ReportBucketFieldSourceValue',\n        props: {\n            from: '?string',\n            sourceValue: '?string',\n            to: '?string',\n        },\n    },\n    ReportChart: {\n        type: 'ReportChart',\n        props: {\n            backgroundColor1: '?string',\n            backgroundColor2: '?string',\n            backgroundFadeDir: '?string',\n            chartSummaries: ['ChartSummary'],\n            chartType: 'string',\n            enableHoverLabels: '?boolean',\n            expandOthers: '?boolean',\n            groupingColumn: '?string',\n            legendPosition: '?string',\n            location: '?string',\n            secondaryGroupingColumn: '?string',\n            showAxisLabels: '?boolean',\n            showPercentage: '?boolean',\n            showTotal: '?boolean',\n            showValues: '?boolean',\n            size: '?string',\n            summaryAxisManualRangeEnd: '?number',\n            summaryAxisManualRangeStart: '?number',\n            summaryAxisRange: '?string',\n            textColor: '?string',\n            textSize: '?number',\n            title: '?string',\n            titleColor: '?string',\n            titleSize: '?number',\n        },\n    },\n    ReportColorRange: {\n        type: 'ReportColorRange',\n        props: {\n            aggregate: '?string',\n            columnName: 'string',\n            highBreakpoint: '?number',\n            highColor: 'string',\n            lowBreakpoint: '?number',\n            lowColor: 'string',\n            midColor: 'string',\n        },\n    },\n    ReportColumn: {\n        type: 'ReportColumn',\n        props: {\n            aggregateTypes: ['string'],\n            field: 'string',\n            reverseColors: '?boolean',\n            showChanges: '?boolean',\n        },\n    },\n    ReportCrossFilter: {\n        type: 'ReportCrossFilter',\n        props: {\n            criteriaItems: ['ReportFilterItem'],\n            operation: 'string',\n            primaryTableColumn: 'string',\n            relatedTable: 'string',\n            relatedTableJoinColumn: 'string',\n        },\n    },\n    ReportFilterItem: {\n        type: 'ReportFilterItem',\n        props: {\n            column: 'string',\n            columnToColumn: '?boolean',\n            isUnlocked: '?boolean',\n            operator: 'string',\n            snapshot: '?string',\n            value: '?string',\n        },\n    },\n    ReportCustomDetailFormula: {\n        type: 'ReportCustomDetailFormula',\n        props: {\n            calculatedFormula: 'string',\n            dataType: 'string',\n            description: '?string',\n            developerName: 'string',\n            label: 'string',\n            scale: 'number',\n        },\n    },\n    ReportDataCategoryFilter: {\n        type: 'ReportDataCategoryFilter',\n        props: {\n            dataCategory: 'string',\n            dataCategoryGroup: 'string',\n            operator: 'string',\n        },\n    },\n    ReportFilter: {\n        type: 'ReportFilter',\n        props: {\n            booleanFilter: '?string',\n            criteriaItems: ['ReportFilterItem'],\n            language: '?string',\n        },\n    },\n    ReportFormattingRule: {\n        type: 'ReportFormattingRule',\n        props: {\n            aggregate: '?string',\n            columnName: 'string',\n            values: ['ReportFormattingRuleValue'],\n        },\n    },\n    ReportFormattingRuleValue: {\n        type: 'ReportFormattingRuleValue',\n        props: {\n            backgroundColor: '?string',\n            rangeUpperBound: '?number',\n        },\n    },\n    ReportGrouping: {\n        type: 'ReportGrouping',\n        props: {\n            aggregateType: '?string',\n            dateGranularity: '?string',\n            field: 'string',\n            sortByName: '?string',\n            sortOrder: 'string',\n            sortType: '?string',\n        },\n    },\n    ReportHistoricalSelector: {\n        type: 'ReportHistoricalSelector',\n        props: {\n            snapshot: ['string'],\n        },\n    },\n    ReportParam: {\n        type: 'ReportParam',\n        props: {\n            name: 'string',\n            value: 'string',\n        },\n    },\n    ReportTimeFrameFilter: {\n        type: 'ReportTimeFrameFilter',\n        props: {\n            dateColumn: 'string',\n            endDate: '?string',\n            interval: 'string',\n            startDate: '?string',\n        },\n    },\n    ReportType: {\n        type: 'ReportType',\n        props: {\n            autogenerated: '?boolean',\n            baseObject: 'string',\n            category: 'string',\n            deployed: 'boolean',\n            description: '?string',\n            join: '?ObjectRelationship',\n            label: 'string',\n            sections: ['ReportLayoutSection'],\n        },\n        extends: 'Metadata',\n    },\n    ObjectRelationship: {\n        type: 'ObjectRelationship',\n        props: {\n            join: '?ObjectRelationship',\n            outerJoin: 'boolean',\n            relationship: 'string',\n        },\n    },\n    ReportLayoutSection: {\n        type: 'ReportLayoutSection',\n        props: {\n            columns: ['ReportTypeColumn'],\n            masterLabel: 'string',\n        },\n    },\n    ReportTypeColumn: {\n        type: 'ReportTypeColumn',\n        props: {\n            checkedByDefault: 'boolean',\n            displayNameOverride: '?string',\n            field: 'string',\n            table: 'string',\n        },\n    },\n    RestrictionRule: {\n        type: 'RestrictionRule',\n        props: {\n            active: 'boolean',\n            description: 'string',\n            enforcementType: 'string',\n            masterLabel: 'string',\n            recordFilter: 'string',\n            targetEntity: 'string',\n            userCriteria: 'string',\n            version: 'number',\n        },\n        extends: 'Metadata',\n    },\n    RetailExecutionSettings: {\n        type: 'RetailExecutionSettings',\n        props: {\n            enableRetailExecution: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    RoleOrTerritory: {\n        type: 'RoleOrTerritory',\n        props: {\n            caseAccessLevel: '?string',\n            contactAccessLevel: '?string',\n            description: '?string',\n            mayForecastManagerShare: '?boolean',\n            name: 'string',\n            opportunityAccessLevel: '?string',\n        },\n        extends: 'Metadata',\n    },\n    Role: {\n        type: 'Role',\n        props: {\n            parentRole: '?string',\n        },\n        extends: 'RoleOrTerritory',\n    },\n    Territory: {\n        type: 'Territory',\n        props: {\n            accountAccessLevel: '?string',\n            parentTerritory: '?string',\n        },\n        extends: 'RoleOrTerritory',\n    },\n    SamlSsoConfig: {\n        type: 'SamlSsoConfig',\n        props: {\n            attributeName: '?string',\n            attributeNameIdFormat: '?string',\n            decryptionCertificate: '?string',\n            errorUrl: '?string',\n            executionUserId: '?string',\n            identityLocation: 'string',\n            identityMapping: 'string',\n            issuer: 'string',\n            loginUrl: '?string',\n            logoutUrl: '?string',\n            name: 'string',\n            oauthTokenEndpoint: '?string',\n            redirectBinding: '?boolean',\n            requestSignatureMethod: '?string',\n            requestSigningCertId: '?string',\n            salesforceLoginUrl: '?string',\n            samlEntityId: 'string',\n            samlJitHandlerId: '?string',\n            samlVersion: 'string',\n            singleLogoutBinding: '?string',\n            singleLogoutUrl: '?string',\n            userProvisioning: '?boolean',\n            validationCert: 'string',\n        },\n        extends: 'Metadata',\n    },\n    SchemaSettings: {\n        type: 'SchemaSettings',\n        props: {\n            enableAdvancedCMTSecurity: '?boolean',\n            enableAdvancedCSSecurity: '?boolean',\n            enableListCustomSettingCreation: '?boolean',\n            enableSOSLOnCustomSettings: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    SearchSettings: {\n        type: 'SearchSettings',\n        props: {\n            documentContentSearchEnabled: 'boolean',\n            enableAdvancedSearchInAlohaSidebar: '?boolean',\n            enableEinsteinSearchPersonalization: '?boolean',\n            enableQuerySuggestionPigOn: '?boolean',\n            enableSalesforceGeneratedSynonyms: '?boolean',\n            enableSetupSearch: '?boolean',\n            optimizeSearchForCJKEnabled: 'boolean',\n            recentlyViewedUsersForBlankLookupEnabled: 'boolean',\n            searchSettingsByObject: 'SearchSettingsByObject',\n            sidebarAutoCompleteEnabled: 'boolean',\n            sidebarDropDownListEnabled: 'boolean',\n            sidebarLimitToItemsIOwnCheckboxEnabled: 'boolean',\n            singleSearchResultShortcutEnabled: 'boolean',\n            spellCorrectKnowledgeSearchEnabled: 'boolean',\n        },\n        extends: 'Metadata',\n    },\n    SearchSettingsByObject: {\n        type: 'SearchSettingsByObject',\n        props: {\n            searchSettingsByObject: ['ObjectSearchSetting'],\n        },\n    },\n    ObjectSearchSetting: {\n        type: 'ObjectSearchSetting',\n        props: {\n            enhancedLookupEnabled: 'boolean',\n            lookupAutoCompleteEnabled: 'boolean',\n            name: 'string',\n            resultsPerPageCount: 'number',\n        },\n    },\n    SecuritySettings: {\n        type: 'SecuritySettings',\n        props: {\n            canUsersGrantLoginAccess: '?boolean',\n            enableAdminLoginAsAnyUser: '?boolean',\n            enableAuditFieldsInactiveOwner: '?boolean',\n            enableAuraSecureEvalPref: '?boolean',\n            enableRequireHttpsConnection: '?boolean',\n            isTLSv12Required: '?boolean',\n            isTLSv12RequiredCommunities: '?boolean',\n            networkAccess: '?NetworkAccess',\n            passwordPolicies: '?PasswordPolicies',\n            sessionSettings: '?SessionSettings',\n            singleSignOnSettings: '?SingleSignOnSettings',\n        },\n        extends: 'Metadata',\n    },\n    NetworkAccess: {\n        type: 'NetworkAccess',\n        props: {\n            ipRanges: ['IpRange'],\n        },\n    },\n    IpRange: {\n        type: 'IpRange',\n        props: {\n            description: '?string',\n            end: '?string',\n            start: '?string',\n        },\n    },\n    PasswordPolicies: {\n        type: 'PasswordPolicies',\n        props: {\n            apiOnlyUserHomePageURL: '?string',\n            complexity: '?string',\n            enableSetPasswordInApi: '?boolean',\n            expiration: '?string',\n            historyRestriction: '?string',\n            lockoutInterval: '?string',\n            maxLoginAttempts: '?string',\n            minimumPasswordLength: '?string',\n            minimumPasswordLifetime: '?boolean',\n            obscureSecretAnswer: '?boolean',\n            passwordAssistanceMessage: '?string',\n            passwordAssistanceURL: '?string',\n            questionRestriction: '?string',\n        },\n    },\n    SessionSettings: {\n        type: 'SessionSettings',\n        props: {\n            allowUserAuthenticationByCertificate: '?boolean',\n            canConfirmEmailChangeInLightningCommunities: '?boolean',\n            disableTimeoutWarning: '?boolean',\n            enableCSPOnEmail: '?boolean',\n            enableCSRFOnGet: '?boolean',\n            enableCSRFOnPost: '?boolean',\n            enableCacheAndAutocomplete: '?boolean',\n            enableClickjackNonsetupSFDC: '?boolean',\n            enableClickjackNonsetupUser: '?boolean',\n            enableClickjackNonsetupUserHeaderless: '?boolean',\n            enableClickjackSetup: '?boolean',\n            enableContentSniffingProtection: '?boolean',\n            enableLightningLogin: '?boolean',\n            enableLightningLoginOnlyWithUserPerm: '?boolean',\n            enablePostForSessions: '?boolean',\n            enableSMSIdentity: '?boolean',\n            enableU2F: '?boolean',\n            enableUpgradeInsecureRequests: '?boolean',\n            enableXssProtection: '?boolean',\n            enforceIpRangesEveryRequest: '?boolean',\n            forceLogoutOnSessionTimeout: '?boolean',\n            forceRelogin: '?boolean',\n            hasRetainedLoginHints: '?boolean',\n            hasUserSwitching: '?boolean',\n            hstsOnForcecomSites: '?boolean',\n            identityConfirmationOnEmailChange: '?boolean',\n            identityConfirmationOnTwoFactorRegistrationEnabled: '?boolean',\n            lockSessionsToDomain: '?boolean',\n            lockSessionsToIp: '?boolean',\n            lockerServiceAPIVersion: '?string',\n            lockerServiceCSP: '?boolean',\n            lockerServiceFrozenRealm: '?boolean',\n            logoutURL: '?string',\n            redirectionWarning: '?boolean',\n            referrerPolicy: '?boolean',\n            requireHttpOnly: '?boolean',\n            requireHttps: '?boolean',\n            securityCentralKillSession: '?boolean',\n            sessionTimeout: '?string',\n        },\n    },\n    SingleSignOnSettings: {\n        type: 'SingleSignOnSettings',\n        props: {\n            enableForceDelegatedCallout: '?boolean',\n            enableMultipleSamlConfigs: '?boolean',\n            enableSamlJitProvisioning: '?boolean',\n            enableSamlLogin: '?boolean',\n        },\n    },\n    ServiceChannel: {\n        type: 'ServiceChannel',\n        props: {\n            interactionComponent: '?string',\n            label: 'string',\n            relatedEntityType: 'string',\n            secondaryRoutingPriorityField: '?string',\n            serviceChannelFieldPriorities: ['ServiceChannelFieldPriority'],\n        },\n        extends: 'Metadata',\n    },\n    ServiceChannelFieldPriority: {\n        type: 'ServiceChannelFieldPriority',\n        props: {\n            priority: 'number',\n            value: 'string',\n        },\n    },\n    ServicePresenceStatus: {\n        type: 'ServicePresenceStatus',\n        props: {\n            channels: '?ServiceChannelStatus',\n            label: 'string',\n        },\n        extends: 'Metadata',\n    },\n    ServiceChannelStatus: {\n        type: 'ServiceChannelStatus',\n        props: {\n            channel: ['string'],\n        },\n    },\n    SharingBaseRule: {\n        type: 'SharingBaseRule',\n        props: {\n            accessLevel: 'string',\n            accountSettings: '?AccountSharingRuleSettings',\n            description: '?string',\n            label: 'string',\n            sharedTo: 'SharedTo',\n        },\n        extends: 'Metadata',\n    },\n    AccountSharingRuleSettings: {\n        type: 'AccountSharingRuleSettings',\n        props: {\n            caseAccessLevel: 'string',\n            contactAccessLevel: 'string',\n            opportunityAccessLevel: 'string',\n        },\n    },\n    SharingCriteriaRule: {\n        type: 'SharingCriteriaRule',\n        props: {\n            booleanFilter: '?string',\n            criteriaItems: ['FilterItem'],\n        },\n        extends: 'SharingBaseRule',\n    },\n    SharingGuestRule: {\n        type: 'SharingGuestRule',\n        props: {\n            booleanFilter: '?string',\n            criteriaItems: ['FilterItem'],\n        },\n        extends: 'SharingBaseRule',\n    },\n    SharingOwnerRule: {\n        type: 'SharingOwnerRule',\n        props: {\n            sharedFrom: 'SharedTo',\n        },\n        extends: 'SharingBaseRule',\n    },\n    SharingTerritoryRule: {\n        type: 'SharingTerritoryRule',\n        props: {},\n        extends: 'SharingOwnerRule',\n    },\n    SharingRules: {\n        type: 'SharingRules',\n        props: {\n            sharingCriteriaRules: ['SharingCriteriaRule'],\n            sharingGuestRules: ['SharingGuestRule'],\n            sharingOwnerRules: ['SharingOwnerRule'],\n            sharingTerritoryRules: ['SharingTerritoryRule'],\n        },\n        extends: 'Metadata',\n    },\n    SharingSet: {\n        type: 'SharingSet',\n        props: {\n            accessMappings: ['AccessMapping'],\n            description: '?string',\n            name: 'string',\n            profiles: ['string'],\n        },\n        extends: 'Metadata',\n    },\n    AccessMapping: {\n        type: 'AccessMapping',\n        props: {\n            accessLevel: 'string',\n            object: 'string',\n            objectField: 'string',\n            userField: 'string',\n        },\n    },\n    SharingSettings: {\n        type: 'SharingSettings',\n        props: {\n            enableAccountRoleOptimization: '?boolean',\n            enableAssetSharing: '?boolean',\n            enableCommunityUserVisibility: '?boolean',\n            enableExternalSharingModel: '?boolean',\n            enableManagerGroups: '?boolean',\n            enableManualUserRecordSharing: '?boolean',\n            enablePartnerSuperUserAccess: '?boolean',\n            enablePortalUserCaseSharing: '?boolean',\n            enablePortalUserVisibility: '?boolean',\n            enableRemoveTMGroupMembership: '?boolean',\n            enableSecureGuestAccess: '?boolean',\n            enableStandardReportVisibility: '?boolean',\n            enableTerritoryForecastManager: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    SiteSettings: {\n        type: 'SiteSettings',\n        props: {\n            enableProxyLoginICHeader: '?boolean',\n            enableTopicsInSites: '?boolean',\n            enableVisualforceApiAccessAllowed: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    Skill: {\n        type: 'Skill',\n        props: {\n            assignments: '?SkillAssignments',\n            description: '?string',\n            label: 'string',\n        },\n        extends: 'Metadata',\n    },\n    SkillAssignments: {\n        type: 'SkillAssignments',\n        props: {\n            profiles: '?SkillProfileAssignments',\n            users: '?SkillUserAssignments',\n        },\n    },\n    SkillProfileAssignments: {\n        type: 'SkillProfileAssignments',\n        props: {\n            profile: ['string'],\n        },\n    },\n    SkillUserAssignments: {\n        type: 'SkillUserAssignments',\n        props: {\n            user: ['string'],\n        },\n    },\n    SocialCustomerServiceSettings: {\n        type: 'SocialCustomerServiceSettings',\n        props: {\n            caseSubjectOption: 'string',\n            enableSocialApprovals: '?boolean',\n            enableSocialCaseAssignmentRules: '?boolean',\n            enableSocialCustomerService: '?boolean',\n            enableSocialPersonaHistoryTracking: '?boolean',\n            enableSocialPostHistoryTracking: '?boolean',\n            enableSocialReceiveParentPost: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    SocialProfileSettings: {\n        type: 'SocialProfileSettings',\n        props: {\n            enableSocialProfiles: '?boolean',\n            isFacebookSocialProfilesDisabled: '?boolean',\n            isLinkedInSocialProfilesDisabled: '?boolean',\n            isTwitterSocialProfilesDisabled: '?boolean',\n            isYouTubeSocialProfilesDisabled: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    StandardValueSet: {\n        type: 'StandardValueSet',\n        props: {\n            groupingStringEnum: '?string',\n            sorted: 'boolean',\n            standardValue: ['StandardValue'],\n        },\n        extends: 'Metadata',\n    },\n    StandardValueSetTranslation: {\n        type: 'StandardValueSetTranslation',\n        props: {\n            valueTranslation: ['ValueTranslation'],\n        },\n        extends: 'Metadata',\n    },\n    SurveySettings: {\n        type: 'SurveySettings',\n        props: {\n            enableSurvey: '?boolean',\n            enableSurveyOwnerCanManageResponse: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    SynonymDictionary: {\n        type: 'SynonymDictionary',\n        props: {\n            groups: ['SynonymGroup'],\n            isProtected: '?boolean',\n            label: 'string',\n        },\n        extends: 'Metadata',\n    },\n    SystemNotificationSettings: {\n        type: 'SystemNotificationSettings',\n        props: {\n            disableDowntimeNotifications: '?boolean',\n            disableMaintenanceNotifications: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    Territory2: {\n        type: 'Territory2',\n        props: {\n            accountAccessLevel: '?string',\n            caseAccessLevel: '?string',\n            contactAccessLevel: '?string',\n            customFields: ['FieldValue'],\n            description: '?string',\n            name: 'string',\n            opportunityAccessLevel: '?string',\n            parentTerritory: '?string',\n            ruleAssociations: ['Territory2RuleAssociation'],\n            territory2Type: 'string',\n        },\n        extends: 'Metadata',\n    },\n    FieldValue: {\n        type: 'FieldValue',\n        props: {\n            name: 'string',\n            value: '?any',\n        },\n    },\n    Territory2RuleAssociation: {\n        type: 'Territory2RuleAssociation',\n        props: {\n            inherited: 'boolean',\n            ruleName: 'string',\n        },\n    },\n    Territory2Model: {\n        type: 'Territory2Model',\n        props: {\n            customFields: ['FieldValue'],\n            description: '?string',\n            name: 'string',\n        },\n        extends: 'Metadata',\n    },\n    Territory2Rule: {\n        type: 'Territory2Rule',\n        props: {\n            active: 'boolean',\n            booleanFilter: '?string',\n            name: 'string',\n            objectType: 'string',\n            ruleItems: ['Territory2RuleItem'],\n        },\n        extends: 'Metadata',\n    },\n    Territory2RuleItem: {\n        type: 'Territory2RuleItem',\n        props: {\n            field: 'string',\n            operation: 'string',\n            value: '?string',\n        },\n    },\n    Territory2Settings: {\n        type: 'Territory2Settings',\n        props: {\n            defaultAccountAccessLevel: '?string',\n            defaultCaseAccessLevel: '?string',\n            defaultContactAccessLevel: '?string',\n            defaultOpportunityAccessLevel: '?string',\n            enableTerritoryManagement2: '?boolean',\n            opportunityFilterSettings: '?Territory2SettingsOpportunityFilter',\n        },\n        extends: 'Metadata',\n    },\n    Territory2SettingsOpportunityFilter: {\n        type: 'Territory2SettingsOpportunityFilter',\n        props: {\n            apexClassName: '?string',\n            enableFilter: 'boolean',\n            runOnCreate: 'boolean',\n        },\n    },\n    Territory2Type: {\n        type: 'Territory2Type',\n        props: {\n            description: '?string',\n            name: 'string',\n            priority: 'number',\n        },\n        extends: 'Metadata',\n    },\n    TimeSheetTemplate: {\n        type: 'TimeSheetTemplate',\n        props: {\n            active: 'boolean',\n            description: '?string',\n            frequency: 'string',\n            masterLabel: 'string',\n            startDate: 'string',\n            timeSheetTemplateAssignments: ['TimeSheetTemplateAssignment'],\n            workWeekEndDay: 'string',\n            workWeekStartDay: 'string',\n        },\n        extends: 'Metadata',\n    },\n    TimeSheetTemplateAssignment: {\n        type: 'TimeSheetTemplateAssignment',\n        props: {\n            assignedTo: '?string',\n        },\n    },\n    TopicsForObjects: {\n        type: 'TopicsForObjects',\n        props: {\n            enableTopics: 'boolean',\n            entityApiName: 'string',\n        },\n        extends: 'Metadata',\n    },\n    TrailheadSettings: {\n        type: 'TrailheadSettings',\n        props: {\n            enableMyTrailheadPref: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    TransactionSecurityPolicy: {\n        type: 'TransactionSecurityPolicy',\n        props: {\n            action: 'TransactionSecurityAction',\n            active: 'boolean',\n            apexClass: '?string',\n            description: '?string',\n            developerName: '?string',\n            eventName: '?string',\n            eventType: '?string',\n            executionUser: '?string',\n            flow: '?string',\n            masterLabel: '?string',\n            resourceName: '?string',\n            type: '?string',\n        },\n        extends: 'Metadata',\n    },\n    TransactionSecurityAction: {\n        type: 'TransactionSecurityAction',\n        props: {\n            block: 'boolean',\n            endSession: 'boolean',\n            freezeUser: 'boolean',\n            notifications: ['TransactionSecurityNotification'],\n            twoFactorAuthentication: 'boolean',\n        },\n    },\n    TransactionSecurityNotification: {\n        type: 'TransactionSecurityNotification',\n        props: {\n            inApp: 'boolean',\n            sendEmail: 'boolean',\n            user: 'string',\n        },\n    },\n    Translations: {\n        type: 'Translations',\n        props: {\n            customApplications: ['CustomApplicationTranslation'],\n            customDataTypeTranslations: ['CustomDataTypeTranslation'],\n            customLabels: ['CustomLabelTranslation'],\n            customPageWebLinks: ['CustomPageWebLinkTranslation'],\n            customTabs: ['CustomTabTranslation'],\n            flowDefinitions: ['FlowDefinitionTranslation'],\n            quickActions: ['GlobalQuickActionTranslation'],\n            reportTypes: ['ReportTypeTranslation'],\n            scontrols: ['ScontrolTranslation'],\n        },\n        extends: 'Metadata',\n    },\n    CustomApplicationTranslation: {\n        type: 'CustomApplicationTranslation',\n        props: {\n            label: 'string',\n            name: 'string',\n        },\n    },\n    CustomDataTypeTranslation: {\n        type: 'CustomDataTypeTranslation',\n        props: {\n            components: ['CustomDataTypeComponentTranslation'],\n            customDataTypeName: 'string',\n            description: '?string',\n            label: '?string',\n        },\n    },\n    CustomDataTypeComponentTranslation: {\n        type: 'CustomDataTypeComponentTranslation',\n        props: {\n            developerSuffix: 'string',\n            label: '?string',\n        },\n    },\n    CustomLabelTranslation: {\n        type: 'CustomLabelTranslation',\n        props: {\n            label: 'string',\n            name: 'string',\n        },\n    },\n    CustomPageWebLinkTranslation: {\n        type: 'CustomPageWebLinkTranslation',\n        props: {\n            label: 'string',\n            name: 'string',\n        },\n    },\n    CustomTabTranslation: {\n        type: 'CustomTabTranslation',\n        props: {\n            label: 'string',\n            name: 'string',\n        },\n    },\n    FlowDefinitionTranslation: {\n        type: 'FlowDefinitionTranslation',\n        props: {\n            flows: ['FlowTranslation'],\n            fullName: 'string',\n            label: '?string',\n        },\n    },\n    FlowTranslation: {\n        type: 'FlowTranslation',\n        props: {\n            choices: ['FlowChoiceTranslation'],\n            fullName: 'string',\n            label: '?string',\n            screens: ['FlowScreenTranslation'],\n            stages: ['FlowStageTranslation'],\n            textTemplates: ['FlowTextTemplateTranslation'],\n        },\n    },\n    FlowChoiceTranslation: {\n        type: 'FlowChoiceTranslation',\n        props: {\n            choiceText: '?string',\n            name: 'string',\n            userInput: '?FlowChoiceUserInputTranslation',\n        },\n    },\n    FlowChoiceUserInputTranslation: {\n        type: 'FlowChoiceUserInputTranslation',\n        props: {\n            promptText: '?string',\n            validationRule: '?FlowInputValidationRuleTranslation',\n        },\n    },\n    FlowInputValidationRuleTranslation: {\n        type: 'FlowInputValidationRuleTranslation',\n        props: {\n            errorMessage: '?string',\n        },\n    },\n    FlowScreenTranslation: {\n        type: 'FlowScreenTranslation',\n        props: {\n            fields: ['FlowScreenFieldTranslation'],\n            helpText: '?string',\n            name: 'string',\n            pausedText: '?string',\n        },\n    },\n    FlowScreenFieldTranslation: {\n        type: 'FlowScreenFieldTranslation',\n        props: {\n            fieldText: '?string',\n            helpText: '?string',\n            name: 'string',\n            validationRule: '?FlowInputValidationRuleTranslation',\n        },\n    },\n    FlowStageTranslation: {\n        type: 'FlowStageTranslation',\n        props: {\n            label: '?string',\n            name: 'string',\n        },\n    },\n    FlowTextTemplateTranslation: {\n        type: 'FlowTextTemplateTranslation',\n        props: {\n            name: 'string',\n            text: '?string',\n        },\n    },\n    GlobalQuickActionTranslation: {\n        type: 'GlobalQuickActionTranslation',\n        props: {\n            label: 'string',\n            name: 'string',\n        },\n    },\n    ReportTypeTranslation: {\n        type: 'ReportTypeTranslation',\n        props: {\n            description: '?string',\n            label: '?string',\n            name: 'string',\n            sections: ['ReportTypeSectionTranslation'],\n        },\n    },\n    ReportTypeSectionTranslation: {\n        type: 'ReportTypeSectionTranslation',\n        props: {\n            columns: ['ReportTypeColumnTranslation'],\n            label: '?string',\n            name: 'string',\n        },\n    },\n    ReportTypeColumnTranslation: {\n        type: 'ReportTypeColumnTranslation',\n        props: {\n            label: 'string',\n            name: 'string',\n        },\n    },\n    ScontrolTranslation: {\n        type: 'ScontrolTranslation',\n        props: {\n            label: 'string',\n            name: 'string',\n        },\n    },\n    UIObjectRelationConfig: {\n        type: 'UIObjectRelationConfig',\n        props: {\n            UIObjectRelationFieldConfigs: ['UIObjectRelationFieldConfig'],\n            contextObject: 'string',\n            contextObjectRecordType: '?string',\n            directRelationshipField: '?string',\n            indirectObjectContextField: '?string',\n            indirectObjectRelatedField: '?string',\n            indirectRelationshipObject: '?string',\n            isActive: 'boolean',\n            masterLabel: 'string',\n            relatedObject: 'string',\n            relatedObjectRecordType: '?string',\n            relationshipType: 'string',\n        },\n        extends: 'Metadata',\n    },\n    UIObjectRelationFieldConfig: {\n        type: 'UIObjectRelationFieldConfig',\n        props: {\n            displayLabel: 'string',\n            queryText: 'string',\n            rowOrder: 'number',\n        },\n    },\n    UserCriteria: {\n        type: 'UserCriteria',\n        props: {\n            creationAgeInSeconds: '?number',\n            description: '?string',\n            lastChatterActivityAgeInSeconds: '?number',\n            masterLabel: 'string',\n            profiles: ['string'],\n            userTypes: ['string'],\n        },\n        extends: 'Metadata',\n    },\n    UserEngagementSettings: {\n        type: 'UserEngagementSettings',\n        props: {\n            canGovCloudUseAdoptionApps: '?boolean',\n            doesScheduledSwitcherRunDaily: '?boolean',\n            enableCustomHelpGlobalSection: '?boolean',\n            enableHelpMenuShowFeedback: '?boolean',\n            enableHelpMenuShowHelp: '?boolean',\n            enableHelpMenuShowNewUser: '?boolean',\n            enableHelpMenuShowSearch: '?boolean',\n            enableHelpMenuShowSfdcContent: '?boolean',\n            enableHelpMenuShowShortcut: '?boolean',\n            enableHelpMenuShowSupport: '?boolean',\n            enableHelpMenuShowTrailhead: '?boolean',\n            enableIBILOptOutDashboards: '?boolean',\n            enableIBILOptOutEvents: '?boolean',\n            enableIBILOptOutReports: '?boolean',\n            enableIBILOptOutTasks: '?boolean',\n            enableLexToClassicFeedbackEnable: '?boolean',\n            enableOrchestrationInSandbox: '?boolean',\n            enableOrgUserAssistEnabled: '?boolean',\n            enableScheduledSwitcher: '?boolean',\n            enableSfdcProductFeedbackSurvey: '?boolean',\n            enableShowSalesforceUserAssist: '?boolean',\n            isAutoTransitionDelayed: '?boolean',\n            isCrucNotificationDisabled: '?boolean',\n            isCustomProfileAutoTransitionDelayed: '?boolean',\n            isLEXWelcomeMatDisabled: '?boolean',\n            isMeetTheAssistantDisabledInClassic: '?boolean',\n            isMeetTheAssistantDisabledInLightning: '?boolean',\n            optimizerAppEnabled: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    UserInterfaceSettings: {\n        type: 'UserInterfaceSettings',\n        props: {\n            alternateAlohaListView: '?boolean',\n            enableAsyncRelatedLists: '?boolean',\n            enableClickjackUserPageHeaderless: '?boolean',\n            enableCollapsibleSections: '?boolean',\n            enableCollapsibleSideBar: '?boolean',\n            enableCustomObjectTruncate: '?boolean',\n            enableCustomeSideBarOnAllPages: '?boolean',\n            enableDeleteFieldHistory: '?boolean',\n            enableHoverDetails: '?boolean',\n            enableInlineEdit: '?boolean',\n            enableNewPageLayoutEditor: '?boolean',\n            enablePersonalCanvas: '?boolean',\n            enablePrintableListViews: '?boolean',\n            enableProfileCustomTabsets: '?boolean',\n            enableQuickCreate: '?boolean',\n            enableTabOrganizer: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    UserManagementSettings: {\n        type: 'UserManagementSettings',\n        props: {\n            enableCanAnswerContainUsername: '?boolean',\n            enableCanSaveUserPerm: '?boolean',\n            enableConcealPersonalInfo: '?boolean',\n            enableContactlessExternalIdentityUsers: '?boolean',\n            enableEnhancedPermsetMgmt: '?boolean',\n            enableEnhancedProfileMgmt: '?boolean',\n            enableNewProfileUI: '?boolean',\n            enableScrambleUserData: '?boolean',\n            enableUserSelfDeactivate: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    VoiceSettings: {\n        type: 'VoiceSettings',\n        props: {\n            enableCallDisposition: '?boolean',\n            enableVoiceCallList: '?boolean',\n            enableVoiceCallRecording: '?boolean',\n            enableVoiceCoaching: '?boolean',\n            enableVoiceConferencing: '?boolean',\n            enableVoiceLocalPresence: '?boolean',\n            enableVoiceMail: '?boolean',\n            enableVoiceMailDrop: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    WaveApplication: {\n        type: 'WaveApplication',\n        props: {\n            assetIcon: '?string',\n            description: '?string',\n            folder: 'string',\n            masterLabel: 'string',\n            shares: ['FolderShare'],\n            templateOrigin: '?string',\n            templateVersion: '?string',\n        },\n        extends: 'Metadata',\n    },\n    WaveDataset: {\n        type: 'WaveDataset',\n        props: {\n            application: 'string',\n            description: '?string',\n            masterLabel: 'string',\n            templateAssetSourceName: '?string',\n        },\n        extends: 'Metadata',\n    },\n    WaveTemplateBundle: {\n        type: 'WaveTemplateBundle',\n        props: {\n            assetIcon: '?string',\n            assetVersion: '?number',\n            description: '?string',\n            label: 'string',\n            templateType: 'string',\n        },\n        extends: 'Metadata',\n    },\n    WaveXmd: {\n        type: 'WaveXmd',\n        props: {\n            application: '?string',\n            dataset: 'string',\n            datasetConnector: '?string',\n            datasetFullyQualifiedName: '?string',\n            dates: ['WaveXmdDate'],\n            dimensions: ['WaveXmdDimension'],\n            measures: ['WaveXmdMeasure'],\n            organizations: ['WaveXmdOrganization'],\n            origin: '?string',\n            type: '?string',\n            waveVisualization: '?string',\n        },\n        extends: 'Metadata',\n    },\n    WaveXmdDate: {\n        type: 'WaveXmdDate',\n        props: {\n            alias: 'string',\n            compact: '?boolean',\n            dateFieldDay: '?string',\n            dateFieldEpochDay: '?string',\n            dateFieldEpochSecond: '?string',\n            dateFieldFiscalMonth: '?string',\n            dateFieldFiscalQuarter: '?string',\n            dateFieldFiscalWeek: '?string',\n            dateFieldFiscalYear: '?string',\n            dateFieldFullYear: '?string',\n            dateFieldHour: '?string',\n            dateFieldMinute: '?string',\n            dateFieldMonth: '?string',\n            dateFieldQuarter: '?string',\n            dateFieldSecond: '?string',\n            dateFieldWeek: '?string',\n            dateFieldYear: '?string',\n            description: '?string',\n            firstDayOfWeek: 'number',\n            fiscalMonthOffset: 'number',\n            isYearEndFiscalYear: '?boolean',\n            label: '?string',\n            showInExplorer: '?boolean',\n            sortIndex: 'number',\n            type: 'string',\n        },\n    },\n    WaveXmdDimension: {\n        type: 'WaveXmdDimension',\n        props: {\n            conditionalFormatting: ['WaveXmdFormattingProperty'],\n            customActions: ['WaveXmdDimensionCustomAction'],\n            customActionsEnabled: '?boolean',\n            dateFormat: '?string',\n            description: '?string',\n            field: 'string',\n            fullyQualifiedName: '?string',\n            imageTemplate: '?string',\n            isDerived: 'boolean',\n            isMultiValue: '?boolean',\n            label: '?string',\n            linkTemplate: '?string',\n            linkTemplateEnabled: '?boolean',\n            linkTooltip: '?string',\n            members: ['WaveXmdDimensionMember'],\n            origin: '?string',\n            recordDisplayFields: ['WaveXmdRecordDisplayLookup'],\n            recordIdField: '?string',\n            recordOrganizationIdField: '?string',\n            salesforceActions: ['WaveXmdDimensionSalesforceAction'],\n            salesforceActionsEnabled: '?boolean',\n            showDetailsDefaultFieldIndex: '?number',\n            showInExplorer: '?boolean',\n            sortIndex: 'number',\n        },\n    },\n    WaveXmdFormattingProperty: {\n        type: 'WaveXmdFormattingProperty',\n        props: {\n            formattingBins: ['WaveXmdFormattingBin'],\n            formattingPredicates: ['WaveXmdFormattingPredicate'],\n            property: 'string',\n            referenceField: 'string',\n            sortIndex: 'number',\n            type: 'string',\n        },\n    },\n    WaveXmdFormattingBin: {\n        type: 'WaveXmdFormattingBin',\n        props: {\n            bin: 'string',\n            formatValue: 'string',\n            label: 'string',\n            sortIndex: 'number',\n        },\n    },\n    WaveXmdFormattingPredicate: {\n        type: 'WaveXmdFormattingPredicate',\n        props: {\n            formatValue: 'string',\n            operator: 'string',\n            sortIndex: 'number',\n            value: 'string',\n        },\n    },\n    WaveXmdDimensionCustomAction: {\n        type: 'WaveXmdDimensionCustomAction',\n        props: {\n            customActionName: 'string',\n            enabled: 'boolean',\n            icon: '?string',\n            method: '?string',\n            sortIndex: 'number',\n            target: '?string',\n            tooltip: '?string',\n            url: '?string',\n        },\n    },\n    WaveXmdDimensionMember: {\n        type: 'WaveXmdDimensionMember',\n        props: {\n            color: '?string',\n            label: '?string',\n            member: 'string',\n            sortIndex: 'number',\n        },\n    },\n    WaveXmdRecordDisplayLookup: {\n        type: 'WaveXmdRecordDisplayLookup',\n        props: {\n            recordDisplayField: 'string',\n        },\n    },\n    WaveXmdDimensionSalesforceAction: {\n        type: 'WaveXmdDimensionSalesforceAction',\n        props: {\n            enabled: 'boolean',\n            salesforceActionName: 'string',\n            sortIndex: 'number',\n        },\n    },\n    WaveXmdMeasure: {\n        type: 'WaveXmdMeasure',\n        props: {\n            conditionalFormatting: ['WaveXmdFormattingProperty'],\n            dateFormat: '?string',\n            description: '?string',\n            field: 'string',\n            formatCustomFormat: '?string',\n            formatDecimalDigits: '?number',\n            formatIsNegativeParens: '?boolean',\n            formatPrefix: '?string',\n            formatSuffix: '?string',\n            formatUnit: '?string',\n            formatUnitMultiplier: '?number',\n            fullyQualifiedName: '?string',\n            isDerived: 'boolean',\n            label: '?string',\n            origin: '?string',\n            showDetailsDefaultFieldIndex: '?number',\n            showInExplorer: '?boolean',\n            sortIndex: 'number',\n        },\n    },\n    WaveXmdOrganization: {\n        type: 'WaveXmdOrganization',\n        props: {\n            instanceUrl: 'string',\n            label: 'string',\n            organizationIdentifier: 'string',\n            sortIndex: 'number',\n        },\n    },\n    WorkDotComSettings: {\n        type: 'WorkDotComSettings',\n        props: {\n            enableCoachingManagerGroupAccess: '?boolean',\n            enableGoalManagerGroupAccess: '?boolean',\n            enableProfileSkills: '?boolean',\n            enableProfileSkillsAddFeedPost: '?boolean',\n            enableProfileSkillsAutoSuggest: '?boolean',\n            enableProfileSkillsUsePlatform: '?boolean',\n            enableWorkBadgeDefRestrictPref: '?boolean',\n            enableWorkCalibration: '?boolean',\n            enableWorkCanvasPref: '?boolean',\n            enableWorkCertification: '?boolean',\n            enableWorkCertificationNotification: '?boolean',\n            enableWorkRewardsPref: '?boolean',\n            enableWorkThanksPref: '?boolean',\n            enableWorkUseObjectivesForGoals: '?boolean',\n        },\n        extends: 'Metadata',\n    },\n    Workflow: {\n        type: 'Workflow',\n        props: {\n            alerts: ['WorkflowAlert'],\n            fieldUpdates: ['WorkflowFieldUpdate'],\n            flowActions: ['WorkflowFlowAction'],\n            knowledgePublishes: ['WorkflowKnowledgePublish'],\n            outboundMessages: ['WorkflowOutboundMessage'],\n            rules: ['WorkflowRule'],\n            send: ['WorkflowSend'],\n            tasks: ['WorkflowTask'],\n        },\n        extends: 'Metadata',\n    },\n    WorkflowAlert: {\n        type: 'WorkflowAlert',\n        props: {\n            ccEmails: ['string'],\n            description: 'string',\n            protected: 'boolean',\n            recipients: ['WorkflowEmailRecipient'],\n            senderAddress: '?string',\n            senderType: '?string',\n            template: 'string',\n        },\n        extends: 'WorkflowAction',\n    },\n    WorkflowAction: {\n        type: 'WorkflowAction',\n        props: {},\n        extends: 'Metadata',\n    },\n    WorkflowFieldUpdate: {\n        type: 'WorkflowFieldUpdate',\n        props: {\n            description: '?string',\n            field: 'string',\n            formula: '?string',\n            literalValue: '?string',\n            lookupValue: '?string',\n            lookupValueType: '?string',\n            name: 'string',\n            notifyAssignee: 'boolean',\n            operation: 'string',\n            protected: 'boolean',\n            reevaluateOnChange: '?boolean',\n            targetObject: '?string',\n        },\n        extends: 'WorkflowAction',\n    },\n    WorkflowFlowAction: {\n        type: 'WorkflowFlowAction',\n        props: {\n            description: '?string',\n            flow: 'string',\n            flowInputs: ['WorkflowFlowActionParameter'],\n            label: 'string',\n            language: '?string',\n            protected: 'boolean',\n        },\n        extends: 'WorkflowAction',\n    },\n    WorkflowFlowActionParameter: {\n        type: 'WorkflowFlowActionParameter',\n        props: {\n            name: 'string',\n            value: '?string',\n        },\n    },\n    WorkflowKnowledgePublish: {\n        type: 'WorkflowKnowledgePublish',\n        props: {\n            action: 'string',\n            description: '?string',\n            label: 'string',\n            language: '?string',\n            protected: 'boolean',\n        },\n        extends: 'WorkflowAction',\n    },\n    WorkflowOutboundMessage: {\n        type: 'WorkflowOutboundMessage',\n        props: {\n            apiVersion: 'number',\n            description: '?string',\n            endpointUrl: 'string',\n            fields: ['string'],\n            includeSessionId: 'boolean',\n            integrationUser: 'string',\n            name: 'string',\n            protected: 'boolean',\n            useDeadLetterQueue: '?boolean',\n        },\n        extends: 'WorkflowAction',\n    },\n    WorkflowSend: {\n        type: 'WorkflowSend',\n        props: {\n            action: 'string',\n            description: '?string',\n            label: 'string',\n            language: '?string',\n            protected: 'boolean',\n        },\n        extends: 'WorkflowAction',\n    },\n    WorkflowTask: {\n        type: 'WorkflowTask',\n        props: {\n            assignedTo: '?string',\n            assignedToType: 'string',\n            description: '?string',\n            dueDateOffset: 'number',\n            notifyAssignee: 'boolean',\n            offsetFromField: '?string',\n            priority: 'string',\n            protected: 'boolean',\n            status: 'string',\n            subject: 'string',\n        },\n        extends: 'WorkflowAction',\n    },\n    WorkflowEmailRecipient: {\n        type: 'WorkflowEmailRecipient',\n        props: {\n            field: '?string',\n            recipient: '?string',\n            type: 'string',\n        },\n    },\n    WorkflowRule: {\n        type: 'WorkflowRule',\n        props: {\n            actions: ['WorkflowActionReference'],\n            active: 'boolean',\n            booleanFilter: '?string',\n            criteriaItems: ['FilterItem'],\n            description: '?string',\n            formula: '?string',\n            triggerType: 'string',\n            workflowTimeTriggers: ['WorkflowTimeTrigger'],\n        },\n        extends: 'Metadata',\n    },\n    WorkflowTimeTrigger: {\n        type: 'WorkflowTimeTrigger',\n        props: {\n            actions: ['WorkflowActionReference'],\n            offsetFromField: '?string',\n            timeLength: '?string',\n            workflowTimeTriggerUnit: 'string',\n        },\n    },\n    SaveResult: {\n        type: 'SaveResult',\n        props: {\n            errors: ['Error'],\n            fullName: 'string',\n            success: 'boolean',\n        },\n    },\n    Error: {\n        type: 'Error',\n        props: {\n            extendedErrorDetails: ['ExtendedErrorDetails'],\n            fields: ['string'],\n            message: 'string',\n            statusCode: 'string',\n        },\n    },\n    ExtendedErrorDetails: {\n        type: 'ExtendedErrorDetails',\n        props: {\n            extendedErrorCode: 'string',\n        },\n    },\n    DeleteResult: {\n        type: 'DeleteResult',\n        props: {\n            errors: ['Error'],\n            fullName: 'string',\n            success: 'boolean',\n        },\n    },\n    DeployOptions: {\n        type: 'DeployOptions',\n        props: {\n            allowMissingFiles: 'boolean',\n            autoUpdatePackage: 'boolean',\n            checkOnly: 'boolean',\n            ignoreWarnings: 'boolean',\n            performRetrieve: 'boolean',\n            purgeOnDelete: 'boolean',\n            rollbackOnError: 'boolean',\n            runTests: ['string'],\n            singlePackage: 'boolean',\n            testLevel: 'string',\n        },\n    },\n    AsyncResult: {\n        type: 'AsyncResult',\n        props: {\n            done: 'boolean',\n            id: 'string',\n            message: '?string',\n            state: 'string',\n            statusCode: '?string',\n        },\n    },\n    DescribeMetadataResult: {\n        type: 'DescribeMetadataResult',\n        props: {\n            metadataObjects: ['DescribeMetadataObject'],\n            organizationNamespace: 'string',\n            partialSaveAllowed: 'boolean',\n            testRequired: 'boolean',\n        },\n    },\n    DescribeMetadataObject: {\n        type: 'DescribeMetadataObject',\n        props: {\n            childXmlNames: ['string'],\n            directoryName: 'string',\n            inFolder: 'boolean',\n            metaFile: 'boolean',\n            suffix: '?string',\n            xmlName: 'string',\n        },\n    },\n    DescribeValueTypeResult: {\n        type: 'DescribeValueTypeResult',\n        props: {\n            apiCreatable: 'boolean',\n            apiDeletable: 'boolean',\n            apiReadable: 'boolean',\n            apiUpdatable: 'boolean',\n            parentField: '?ValueTypeField',\n            valueTypeFields: ['ValueTypeField'],\n        },\n    },\n    ValueTypeField: {\n        type: 'ValueTypeField',\n        props: {\n            fields: ['ValueTypeField'],\n            foreignKeyDomain: ['string'],\n            isForeignKey: 'boolean',\n            isNameField: 'boolean',\n            minOccurs: 'number',\n            name: 'string',\n            picklistValues: ['PicklistEntry'],\n            soapType: 'string',\n            valueRequired: 'boolean',\n        },\n    },\n    PicklistEntry: {\n        type: 'PicklistEntry',\n        props: {\n            active: 'boolean',\n            defaultValue: 'boolean',\n            label: 'string',\n            validFor: '?string',\n            value: 'string',\n        },\n    },\n    ListMetadataQuery: {\n        type: 'ListMetadataQuery',\n        props: {\n            folder: '?string',\n            type: 'string',\n        },\n    },\n    ReadResult: {\n        type: 'ReadResult',\n        props: {\n            records: ['Metadata'],\n        },\n    },\n    RetrieveRequest: {\n        type: 'RetrieveRequest',\n        props: {\n            apiVersion: 'number',\n            packageNames: ['string'],\n            singlePackage: 'boolean',\n            specificFiles: ['string'],\n            unpackaged: '?Package',\n        },\n    },\n    UpsertResult: {\n        type: 'UpsertResult',\n        props: {\n            created: 'boolean',\n            errors: ['Error'],\n            fullName: 'string',\n            success: 'boolean',\n        },\n    },\n    LogInfo: {\n        type: 'LogInfo',\n        props: {\n            category: 'string',\n            level: 'string',\n        },\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/api/metadata/schema.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/api/soap.js":
/*!**********************************************!*\
  !*** ./node_modules/jsforce/lib/api/soap.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SoapApi = void 0;\n/**\n * @file Salesforce SOAP API\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\nconst jsforce_1 = __webpack_require__(/*! ../jsforce */ \"(rsc)/./node_modules/jsforce/lib/jsforce.js\");\nconst soap_1 = __importDefault(__webpack_require__(/*! ../soap */ \"(rsc)/./node_modules/jsforce/lib/soap.js\"));\nconst schema_1 = __webpack_require__(/*! ./soap/schema */ \"(rsc)/./node_modules/jsforce/lib/api/soap/schema.js\");\n/**\n *\n */\nfunction toSoapRecord(records) {\n    return (Array.isArray(records) ? records : [records]).map((record) => {\n        const { type, attributes, ...rec } = record;\n        const t = type || attributes?.type;\n        if (!t) {\n            throw new Error('Given record is not including sObject type information');\n        }\n        const fieldsToNull = Object.keys(rec).filter((field) => record[field] === null);\n        for (const field of fieldsToNull) {\n            delete rec[field];\n        }\n        return fieldsToNull.length > 0\n            ? { type: t, fieldsToNull, ...rec }\n            : { type: t, ...rec };\n    });\n}\n/**\n * API class for Partner SOAP call\n */\nclass SoapApi {\n    _conn;\n    constructor(conn) {\n        this._conn = conn;\n    }\n    /**\n     * Call SOAP Api (Partner) endpoint\n     * @private\n     */\n    async _invoke(method, message, schema) {\n        const soapEndpoint = new soap_1.default(this._conn, {\n            xmlns: 'urn:partner.soap.sforce.com',\n            endpointUrl: `${this._conn.instanceUrl}/services/Soap/u/${this._conn.version}`,\n        });\n        const res = await soapEndpoint.invoke(method, message, schema ? { result: schema } : undefined, schema_1.ApiSchemas);\n        return res.result;\n    }\n    async convertLead(leadConverts) {\n        const schema = Array.isArray(leadConverts)\n            ? [schema_1.ApiSchemas.LeadConvertResult]\n            : schema_1.ApiSchemas.LeadConvertResult;\n        return this._invoke('convertLead', { leadConverts }, schema);\n    }\n    async merge(mergeRequests) {\n        const schema = Array.isArray(mergeRequests)\n            ? [schema_1.ApiSchemas.MergeResult]\n            : schema_1.ApiSchemas.MergeResult;\n        return this._invoke('merge', { mergeRequests }, schema);\n    }\n    /**\n     * Delete records from the recycle bin immediately\n     */\n    async emptyRecycleBin(ids) {\n        return this._invoke('emptyRecycleBin', { ids }, [\n            schema_1.ApiSchemas.EmptyRecycleBinResult,\n        ]);\n    }\n    /**\n     * Returns information about the standard and custom apps available to the logged-in user\n     */\n    async describeTabs() {\n        return this._invoke('describeTabs', {}, [schema_1.ApiSchemas.DescribeTabSetResult]);\n    }\n    /**\n     * Retrieves the current system timestamp (Coordinated Universal Time (UTC) time zone) from the API\n     */\n    async getServerTimestamp() {\n        return this._invoke('getServerTimestamp', {}, schema_1.ApiSchemas.GetServerTimestampResult);\n    }\n    /**\n     * Retrieves personal information for the user associated with the current session\n     */\n    async getUserInfo() {\n        return this._invoke('getUserInfo', {}, schema_1.ApiSchemas.GetUserInfoResult);\n    }\n    /**\n     * Sets the specified user’s password to the specified value\n     */\n    setPassword(userId, password) {\n        return this._invoke('setPassword', { userId, password }, 'string');\n    }\n    /**\n     * Resets the specified user’s password\n     */\n    resetPassword(userId) {\n        return this._invoke('resetPassword', { userId }, schema_1.ApiSchemas.ResetPasswordResult);\n    }\n    create(sObjects) {\n        const schema = Array.isArray(sObjects)\n            ? [schema_1.ApiSchemas.SaveResult]\n            : schema_1.ApiSchemas.SaveResult;\n        const args = {\n            '@xmlns': 'urn:partner.soap.sforce.com',\n            '@xmlns:ns1': 'sobject.partner.soap.sforce.com',\n            'ns1:sObjects': toSoapRecord(sObjects),\n        };\n        return this._invoke('create', args, schema);\n    }\n    update(sObjects) {\n        const schema = Array.isArray(sObjects)\n            ? [schema_1.ApiSchemas.SaveResult]\n            : schema_1.ApiSchemas.SaveResult;\n        const args = {\n            '@xmlns': 'urn:partner.soap.sforce.com',\n            '@xmlns:ns1': 'sobject.partner.soap.sforce.com',\n            'ns1:sObjects': toSoapRecord(sObjects),\n        };\n        return this._invoke('update', args, schema);\n    }\n    upsert(externalIdFieldName, sObjects) {\n        const schema = Array.isArray(sObjects)\n            ? [schema_1.ApiSchemas.UpsertResult]\n            : schema_1.ApiSchemas.UpsertResult;\n        const args = {\n            '@xmlns': 'urn:partner.soap.sforce.com',\n            '@xmlns:ns1': 'sobject.partner.soap.sforce.com',\n            'ns1:externalIDFieldName': externalIdFieldName,\n            'ns1:sObjects': toSoapRecord(sObjects),\n        };\n        return this._invoke('upsert', args, schema);\n    }\n    delete(ids) {\n        const schema = Array.isArray(ids)\n            ? [schema_1.ApiSchemas.DeleteResult]\n            : schema_1.ApiSchemas.DeleteResult;\n        const args = {\n            '@xmlns': 'urn:partner.soap.sforce.com',\n            '@xmlns:ns1': 'sobject.partner.soap.sforce.com',\n            'ns1:ids': ids,\n        };\n        return this._invoke('delete', args, schema);\n    }\n    /**\n     * Undelete records from the recycle bin immediately\n     */\n    undelete(ids) {\n        const schema = [schema_1.ApiSchemas.UndeleteResult];\n        const args = {\n            '@xmlns': 'urn:partner.soap.sforce.com',\n            '@xmlns:ns1': 'sobject.partner.soap.sforce.com',\n            'ns1:ids': ids,\n        };\n        return this._invoke('undelete', args, schema);\n    }\n}\nexports.SoapApi = SoapApi;\n/*--------------------------------------------*/\n/*\n * Register hook in connection instantiation for dynamically adding this API module features\n */\n(0, jsforce_1.registerModule)('soap', (conn) => new SoapApi(conn));\nexports[\"default\"] = SoapApi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/api/soap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/api/soap/schema.js":
/*!*****************************************************!*\
  !*** ./node_modules/jsforce/lib/api/soap/schema.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n/**\n * This file is generated from WSDL file by wsdl2schema.ts.\n * Do not modify directly.\n * To generate the file, run \"ts-node path/to/wsdl2schema.ts path/to/wsdl.xml path/to/schema.ts\"\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ApiSchemas = void 0;\nexports.ApiSchemas = {\n    sObject: {\n        type: 'sObject',\n        props: {\n            type: 'string',\n            fieldsToNull: ['?', 'string'],\n            Id: '?string',\n        },\n    },\n    address: {\n        type: 'address',\n        props: {\n            city: '?string',\n            country: '?string',\n            countryCode: '?string',\n            geocodeAccuracy: '?string',\n            postalCode: '?string',\n            state: '?string',\n            stateCode: '?string',\n            street: '?string',\n        },\n        extends: 'location',\n    },\n    location: {\n        type: 'location',\n        props: {\n            latitude: '?number',\n            longitude: '?number',\n        },\n    },\n    QueryResult: {\n        type: 'QueryResult',\n        props: {\n            done: 'boolean',\n            queryLocator: '?string',\n            records: ['?', 'sObject'],\n            size: 'number',\n        },\n    },\n    SearchResult: {\n        type: 'SearchResult',\n        props: {\n            queryId: 'string',\n            searchRecords: ['SearchRecord'],\n            searchResultsMetadata: '?SearchResultsMetadata',\n        },\n    },\n    SearchRecord: {\n        type: 'SearchRecord',\n        props: {\n            record: 'sObject',\n            searchRecordMetadata: '?SearchRecordMetadata',\n            snippet: '?SearchSnippet',\n        },\n    },\n    SearchRecordMetadata: {\n        type: 'SearchRecordMetadata',\n        props: {\n            searchPromoted: 'boolean',\n            spellCorrected: 'boolean',\n        },\n    },\n    SearchSnippet: {\n        type: 'SearchSnippet',\n        props: {\n            text: '?string',\n            wholeFields: ['NameValuePair'],\n        },\n    },\n    SearchResultsMetadata: {\n        type: 'SearchResultsMetadata',\n        props: {\n            entityLabelMetadata: ['LabelsSearchMetadata'],\n            entityMetadata: ['EntitySearchMetadata'],\n        },\n    },\n    LabelsSearchMetadata: {\n        type: 'LabelsSearchMetadata',\n        props: {\n            entityFieldLabels: ['NameValuePair'],\n            entityName: 'string',\n        },\n    },\n    EntitySearchMetadata: {\n        type: 'EntitySearchMetadata',\n        props: {\n            entityName: 'string',\n            errorMetadata: '?EntityErrorMetadata',\n            fieldMetadata: ['FieldLevelSearchMetadata'],\n            intentQueryMetadata: '?EntityIntentQueryMetadata',\n            searchPromotionMetadata: '?EntitySearchPromotionMetadata',\n            spellCorrectionMetadata: '?EntitySpellCorrectionMetadata',\n        },\n    },\n    FieldLevelSearchMetadata: {\n        type: 'FieldLevelSearchMetadata',\n        props: {\n            label: '?string',\n            name: 'string',\n            type: '?string',\n        },\n    },\n    EntitySpellCorrectionMetadata: {\n        type: 'EntitySpellCorrectionMetadata',\n        props: {\n            correctedQuery: 'string',\n            hasNonCorrectedResults: 'boolean',\n        },\n    },\n    EntitySearchPromotionMetadata: {\n        type: 'EntitySearchPromotionMetadata',\n        props: {\n            promotedResultCount: 'number',\n        },\n    },\n    EntityIntentQueryMetadata: {\n        type: 'EntityIntentQueryMetadata',\n        props: {\n            intentQuery: 'boolean',\n            message: '?string',\n        },\n    },\n    EntityErrorMetadata: {\n        type: 'EntityErrorMetadata',\n        props: {\n            errorCode: '?string',\n            message: '?string',\n        },\n    },\n    RelationshipReferenceTo: {\n        type: 'RelationshipReferenceTo',\n        props: {\n            referenceTo: ['string'],\n        },\n    },\n    RecordTypesSupported: {\n        type: 'RecordTypesSupported',\n        props: {\n            recordTypeInfos: ['RecordTypeInfo'],\n        },\n    },\n    JunctionIdListNames: {\n        type: 'JunctionIdListNames',\n        props: {\n            names: ['string'],\n        },\n    },\n    SearchLayoutButtonsDisplayed: {\n        type: 'SearchLayoutButtonsDisplayed',\n        props: {\n            applicable: 'boolean',\n            buttons: ['SearchLayoutButton'],\n        },\n    },\n    SearchLayoutButton: {\n        type: 'SearchLayoutButton',\n        props: {\n            apiName: 'string',\n            label: 'string',\n        },\n    },\n    SearchLayoutFieldsDisplayed: {\n        type: 'SearchLayoutFieldsDisplayed',\n        props: {\n            applicable: 'boolean',\n            fields: ['SearchLayoutField'],\n        },\n    },\n    SearchLayoutField: {\n        type: 'SearchLayoutField',\n        props: {\n            apiName: 'string',\n            label: 'string',\n            sortable: 'boolean',\n        },\n    },\n    NameValuePair: {\n        type: 'NameValuePair',\n        props: {\n            name: 'string',\n            value: 'string',\n        },\n    },\n    NameObjectValuePair: {\n        type: 'NameObjectValuePair',\n        props: {\n            isVisible: '?boolean',\n            name: 'string',\n            value: ['any'],\n        },\n    },\n    GetUpdatedResult: {\n        type: 'GetUpdatedResult',\n        props: {\n            ids: ['string'],\n            latestDateCovered: 'string',\n        },\n    },\n    GetDeletedResult: {\n        type: 'GetDeletedResult',\n        props: {\n            deletedRecords: ['DeletedRecord'],\n            earliestDateAvailable: 'string',\n            latestDateCovered: 'string',\n        },\n    },\n    DeletedRecord: {\n        type: 'DeletedRecord',\n        props: {\n            deletedDate: 'string',\n            id: 'string',\n        },\n    },\n    GetServerTimestampResult: {\n        type: 'GetServerTimestampResult',\n        props: {\n            timestamp: 'string',\n        },\n    },\n    InvalidateSessionsResult: {\n        type: 'InvalidateSessionsResult',\n        props: {\n            errors: ['Error'],\n            success: 'boolean',\n        },\n    },\n    SetPasswordResult: {\n        type: 'SetPasswordResult',\n        props: {},\n    },\n    ChangeOwnPasswordResult: {\n        type: 'ChangeOwnPasswordResult',\n        props: {},\n    },\n    ResetPasswordResult: {\n        type: 'ResetPasswordResult',\n        props: {\n            password: 'string',\n        },\n    },\n    GetUserInfoResult: {\n        type: 'GetUserInfoResult',\n        props: {\n            accessibilityMode: 'boolean',\n            chatterExternal: 'boolean',\n            currencySymbol: '?string',\n            orgAttachmentFileSizeLimit: 'number',\n            orgDefaultCurrencyIsoCode: '?string',\n            orgDefaultCurrencyLocale: '?string',\n            orgDisallowHtmlAttachments: 'boolean',\n            orgHasPersonAccounts: 'boolean',\n            organizationId: 'string',\n            organizationMultiCurrency: 'boolean',\n            organizationName: 'string',\n            profileId: 'string',\n            roleId: '?string',\n            sessionSecondsValid: 'number',\n            userDefaultCurrencyIsoCode: '?string',\n            userEmail: 'string',\n            userFullName: 'string',\n            userId: 'string',\n            userLanguage: 'string',\n            userLocale: 'string',\n            userName: 'string',\n            userTimeZone: 'string',\n            userType: 'string',\n            userUiSkin: 'string',\n        },\n    },\n    LoginResult: {\n        type: 'LoginResult',\n        props: {\n            metadataServerUrl: '?string',\n            passwordExpired: 'boolean',\n            sandbox: 'boolean',\n            serverUrl: '?string',\n            sessionId: '?string',\n            userId: '?string',\n            userInfo: '?GetUserInfoResult',\n        },\n    },\n    ExtendedErrorDetails: {\n        type: 'ExtendedErrorDetails',\n        props: {\n            extendedErrorCode: 'string',\n        },\n    },\n    Error: {\n        type: 'Error',\n        props: {\n            extendedErrorDetails: ['?', 'ExtendedErrorDetails'],\n            fields: ['?', 'string'],\n            message: 'string',\n            statusCode: 'string',\n        },\n    },\n    SendEmailError: {\n        type: 'SendEmailError',\n        props: {\n            fields: ['?', 'string'],\n            message: 'string',\n            statusCode: 'string',\n            targetObjectId: '?string',\n        },\n    },\n    SaveResult: {\n        type: 'SaveResult',\n        props: {\n            errors: ['Error'],\n            id: '?string',\n            success: 'boolean',\n        },\n    },\n    RenderEmailTemplateError: {\n        type: 'RenderEmailTemplateError',\n        props: {\n            fieldName: 'string',\n            message: 'string',\n            offset: 'number',\n            statusCode: 'string',\n        },\n    },\n    UpsertResult: {\n        type: 'UpsertResult',\n        props: {\n            created: 'boolean',\n            errors: ['Error'],\n            id: '?string',\n            success: 'boolean',\n        },\n    },\n    PerformQuickActionResult: {\n        type: 'PerformQuickActionResult',\n        props: {\n            contextId: '?string',\n            created: 'boolean',\n            errors: ['Error'],\n            feedItemIds: ['?', 'string'],\n            ids: ['?', 'string'],\n            success: 'boolean',\n            successMessage: '?string',\n        },\n    },\n    QuickActionTemplateResult: {\n        type: 'QuickActionTemplateResult',\n        props: {\n            contextId: '?string',\n            defaultValueFormulas: '?sObject',\n            defaultValues: '?sObject',\n            errors: ['Error'],\n            success: 'boolean',\n        },\n    },\n    MergeRequest: {\n        type: 'MergeRequest',\n        props: {\n            additionalInformationMap: ['AdditionalInformationMap'],\n            masterRecord: 'sObject',\n            recordToMergeIds: ['string'],\n        },\n    },\n    MergeResult: {\n        type: 'MergeResult',\n        props: {\n            errors: ['Error'],\n            id: '?string',\n            mergedRecordIds: ['string'],\n            success: 'boolean',\n            updatedRelatedIds: ['string'],\n        },\n    },\n    ProcessRequest: {\n        type: 'ProcessRequest',\n        props: {\n            comments: '?string',\n            nextApproverIds: ['?', 'string'],\n        },\n    },\n    ProcessSubmitRequest: {\n        type: 'ProcessSubmitRequest',\n        props: {\n            objectId: 'string',\n            submitterId: '?string',\n            processDefinitionNameOrId: '?string',\n            skipEntryCriteria: '?boolean',\n        },\n        extends: 'ProcessRequest',\n    },\n    ProcessWorkitemRequest: {\n        type: 'ProcessWorkitemRequest',\n        props: {\n            action: 'string',\n            workitemId: 'string',\n        },\n        extends: 'ProcessRequest',\n    },\n    PerformQuickActionRequest: {\n        type: 'PerformQuickActionRequest',\n        props: {\n            contextId: '?string',\n            quickActionName: 'string',\n            records: ['?', 'sObject'],\n        },\n    },\n    DescribeAvailableQuickActionResult: {\n        type: 'DescribeAvailableQuickActionResult',\n        props: {\n            actionEnumOrId: 'string',\n            label: 'string',\n            name: 'string',\n            type: 'string',\n        },\n    },\n    DescribeQuickActionResult: {\n        type: 'DescribeQuickActionResult',\n        props: {\n            accessLevelRequired: '?string',\n            actionEnumOrId: 'string',\n            canvasApplicationId: '?string',\n            canvasApplicationName: '?string',\n            colors: ['DescribeColor'],\n            contextSobjectType: '?string',\n            defaultValues: ['?', 'DescribeQuickActionDefaultValue'],\n            flowDevName: '?string',\n            flowRecordIdVar: '?string',\n            height: '?number',\n            iconName: '?string',\n            iconUrl: '?string',\n            icons: ['DescribeIcon'],\n            label: 'string',\n            layout: '?DescribeLayoutSection',\n            lightningComponentBundleId: '?string',\n            lightningComponentBundleName: '?string',\n            lightningComponentQualifiedName: '?string',\n            miniIconUrl: '?string',\n            mobileExtensionDisplayMode: '?string',\n            mobileExtensionId: '?string',\n            name: 'string',\n            showQuickActionLcHeader: 'boolean',\n            showQuickActionVfHeader: 'boolean',\n            targetParentField: '?string',\n            targetRecordTypeId: '?string',\n            targetSobjectType: '?string',\n            type: 'string',\n            visualforcePageName: '?string',\n            visualforcePageUrl: '?string',\n            width: '?number',\n        },\n    },\n    DescribeQuickActionDefaultValue: {\n        type: 'DescribeQuickActionDefaultValue',\n        props: {\n            defaultValue: '?string',\n            field: 'string',\n        },\n    },\n    DescribeVisualForceResult: {\n        type: 'DescribeVisualForceResult',\n        props: {\n            domain: 'string',\n        },\n    },\n    ProcessResult: {\n        type: 'ProcessResult',\n        props: {\n            actorIds: ['string'],\n            entityId: '?string',\n            errors: ['Error'],\n            instanceId: '?string',\n            instanceStatus: '?string',\n            newWorkitemIds: ['?', 'string'],\n            success: 'boolean',\n        },\n    },\n    DeleteResult: {\n        type: 'DeleteResult',\n        props: {\n            errors: ['?', 'Error'],\n            id: '?string',\n            success: 'boolean',\n        },\n    },\n    UndeleteResult: {\n        type: 'UndeleteResult',\n        props: {\n            errors: ['Error'],\n            id: '?string',\n            success: 'boolean',\n        },\n    },\n    DeleteByExampleResult: {\n        type: 'DeleteByExampleResult',\n        props: {\n            entity: '?sObject',\n            errors: ['?', 'Error'],\n            rowCount: 'number',\n            success: 'boolean',\n        },\n    },\n    EmptyRecycleBinResult: {\n        type: 'EmptyRecycleBinResult',\n        props: {\n            errors: ['Error'],\n            id: '?string',\n            success: 'boolean',\n        },\n    },\n    LeadConvert: {\n        type: 'LeadConvert',\n        props: {\n            accountId: '?string',\n            accountRecord: '?sObject',\n            bypassAccountDedupeCheck: '?boolean',\n            bypassContactDedupeCheck: '?boolean',\n            contactId: '?string',\n            contactRecord: '?sObject',\n            convertedStatus: 'string',\n            doNotCreateOpportunity: 'boolean',\n            leadId: 'string',\n            opportunityId: '?string',\n            opportunityName: '?string',\n            opportunityRecord: '?sObject',\n            overwriteLeadSource: 'boolean',\n            ownerId: '?string',\n            sendNotificationEmail: 'boolean',\n        },\n    },\n    LeadConvertResult: {\n        type: 'LeadConvertResult',\n        props: {\n            accountId: '?string',\n            contactId: '?string',\n            errors: ['Error'],\n            leadId: '?string',\n            opportunityId: '?string',\n            success: 'boolean',\n        },\n    },\n    DescribeSObjectResult: {\n        type: 'DescribeSObjectResult',\n        props: {\n            actionOverrides: ['?', 'ActionOverride'],\n            activateable: 'boolean',\n            childRelationships: ['ChildRelationship'],\n            compactLayoutable: 'boolean',\n            createable: 'boolean',\n            custom: 'boolean',\n            customSetting: 'boolean',\n            dataTranslationEnabled: '?boolean',\n            deepCloneable: 'boolean',\n            defaultImplementation: '?string',\n            deletable: 'boolean',\n            deprecatedAndHidden: 'boolean',\n            feedEnabled: 'boolean',\n            fields: ['?', 'Field'],\n            hasSubtypes: 'boolean',\n            idEnabled: 'boolean',\n            implementedBy: '?string',\n            implementsInterfaces: '?string',\n            isInterface: 'boolean',\n            isSubtype: 'boolean',\n            keyPrefix: '?string',\n            label: 'string',\n            labelPlural: 'string',\n            layoutable: 'boolean',\n            mergeable: 'boolean',\n            mruEnabled: 'boolean',\n            name: 'string',\n            namedLayoutInfos: ['NamedLayoutInfo'],\n            networkScopeFieldName: '?string',\n            queryable: 'boolean',\n            recordTypeInfos: ['RecordTypeInfo'],\n            replicateable: 'boolean',\n            retrieveable: 'boolean',\n            searchLayoutable: '?boolean',\n            searchable: 'boolean',\n            supportedScopes: ['?', 'ScopeInfo'],\n            triggerable: '?boolean',\n            undeletable: 'boolean',\n            updateable: 'boolean',\n            urlDetail: '?string',\n            urlEdit: '?string',\n            urlNew: '?string',\n        },\n    },\n    DescribeGlobalSObjectResult: {\n        type: 'DescribeGlobalSObjectResult',\n        props: {\n            activateable: 'boolean',\n            createable: 'boolean',\n            custom: 'boolean',\n            customSetting: 'boolean',\n            dataTranslationEnabled: '?boolean',\n            deepCloneable: 'boolean',\n            deletable: 'boolean',\n            deprecatedAndHidden: 'boolean',\n            feedEnabled: 'boolean',\n            hasSubtypes: 'boolean',\n            idEnabled: 'boolean',\n            isInterface: 'boolean',\n            isSubtype: 'boolean',\n            keyPrefix: '?string',\n            label: 'string',\n            labelPlural: 'string',\n            layoutable: 'boolean',\n            mergeable: 'boolean',\n            mruEnabled: 'boolean',\n            name: 'string',\n            queryable: 'boolean',\n            replicateable: 'boolean',\n            retrieveable: 'boolean',\n            searchable: 'boolean',\n            triggerable: 'boolean',\n            undeletable: 'boolean',\n            updateable: 'boolean',\n        },\n    },\n    ChildRelationship: {\n        type: 'ChildRelationship',\n        props: {\n            cascadeDelete: 'boolean',\n            childSObject: 'string',\n            deprecatedAndHidden: 'boolean',\n            field: 'string',\n            junctionIdListNames: ['?', 'string'],\n            junctionReferenceTo: ['?', 'string'],\n            relationshipName: '?string',\n            restrictedDelete: '?boolean',\n        },\n    },\n    DescribeGlobalResult: {\n        type: 'DescribeGlobalResult',\n        props: {\n            encoding: '?string',\n            maxBatchSize: 'number',\n            sobjects: ['DescribeGlobalSObjectResult'],\n        },\n    },\n    DescribeGlobalTheme: {\n        type: 'DescribeGlobalTheme',\n        props: {\n            global: 'DescribeGlobalResult',\n            theme: 'DescribeThemeResult',\n        },\n    },\n    ScopeInfo: {\n        type: 'ScopeInfo',\n        props: {\n            label: 'string',\n            name: 'string',\n        },\n    },\n    StringList: {\n        type: 'StringList',\n        props: {\n            values: ['string'],\n        },\n    },\n    ChangeEventHeader: {\n        type: 'ChangeEventHeader',\n        props: {\n            entityName: 'string',\n            recordIds: ['string'],\n            commitTimestamp: 'number',\n            commitNumber: 'number',\n            commitUser: 'string',\n            diffFields: ['string'],\n            changeType: 'string',\n            changeOrigin: 'string',\n            transactionKey: 'string',\n            sequenceNumber: 'number',\n            nulledFields: ['string'],\n            changedFields: ['string'],\n        },\n    },\n    FilteredLookupInfo: {\n        type: 'FilteredLookupInfo',\n        props: {\n            controllingFields: ['string'],\n            dependent: 'boolean',\n            optionalFilter: 'boolean',\n        },\n    },\n    Field: {\n        type: 'Field',\n        props: {\n            aggregatable: 'boolean',\n            aiPredictionField: 'boolean',\n            autoNumber: 'boolean',\n            byteLength: 'number',\n            calculated: 'boolean',\n            calculatedFormula: '?string',\n            cascadeDelete: '?boolean',\n            caseSensitive: 'boolean',\n            compoundFieldName: '?string',\n            controllerName: '?string',\n            createable: 'boolean',\n            custom: 'boolean',\n            dataTranslationEnabled: '?boolean',\n            defaultValue: '?any',\n            defaultValueFormula: '?string',\n            defaultedOnCreate: 'boolean',\n            dependentPicklist: '?boolean',\n            deprecatedAndHidden: 'boolean',\n            digits: 'number',\n            displayLocationInDecimal: '?boolean',\n            encrypted: '?boolean',\n            externalId: '?boolean',\n            extraTypeInfo: '?string',\n            filterable: 'boolean',\n            filteredLookupInfo: '?FilteredLookupInfo',\n            formulaTreatNullNumberAsZero: '?boolean',\n            groupable: 'boolean',\n            highScaleNumber: '?boolean',\n            htmlFormatted: '?boolean',\n            idLookup: 'boolean',\n            inlineHelpText: '?string',\n            label: 'string',\n            length: 'number',\n            mask: '?string',\n            maskType: '?string',\n            name: 'string',\n            nameField: 'boolean',\n            namePointing: '?boolean',\n            nillable: 'boolean',\n            permissionable: 'boolean',\n            picklistValues: ['?', 'PicklistEntry'],\n            polymorphicForeignKey: 'boolean',\n            precision: 'number',\n            queryByDistance: 'boolean',\n            referenceTargetField: '?string',\n            referenceTo: ['?', 'string'],\n            relationshipName: '?string',\n            relationshipOrder: '?number',\n            restrictedDelete: '?boolean',\n            restrictedPicklist: 'boolean',\n            scale: 'number',\n            searchPrefilterable: 'boolean',\n            soapType: 'string',\n            sortable: '?boolean',\n            type: 'string',\n            unique: 'boolean',\n            updateable: 'boolean',\n            writeRequiresMasterRead: '?boolean',\n        },\n    },\n    PicklistEntry: {\n        type: 'PicklistEntry',\n        props: {\n            active: 'boolean',\n            defaultValue: 'boolean',\n            label: '?string',\n            validFor: '?string',\n            value: 'string',\n        },\n    },\n    DescribeDataCategoryGroupResult: {\n        type: 'DescribeDataCategoryGroupResult',\n        props: {\n            categoryCount: 'number',\n            description: 'string',\n            label: 'string',\n            name: 'string',\n            sobject: 'string',\n        },\n    },\n    DescribeDataCategoryGroupStructureResult: {\n        type: 'DescribeDataCategoryGroupStructureResult',\n        props: {\n            description: 'string',\n            label: 'string',\n            name: 'string',\n            sobject: 'string',\n            topCategories: ['DataCategory'],\n        },\n    },\n    DataCategoryGroupSobjectTypePair: {\n        type: 'DataCategoryGroupSobjectTypePair',\n        props: {\n            dataCategoryGroupName: 'string',\n            sobject: 'string',\n        },\n    },\n    DataCategory: {\n        type: 'DataCategory',\n        props: {\n            childCategories: ['DataCategory'],\n            label: 'string',\n            name: 'string',\n        },\n    },\n    DescribeDataCategoryMappingResult: {\n        type: 'DescribeDataCategoryMappingResult',\n        props: {\n            dataCategoryGroupId: 'string',\n            dataCategoryGroupLabel: 'string',\n            dataCategoryGroupName: 'string',\n            dataCategoryId: 'string',\n            dataCategoryLabel: 'string',\n            dataCategoryName: 'string',\n            id: 'string',\n            mappedEntity: 'string',\n            mappedField: 'string',\n        },\n    },\n    KnowledgeSettings: {\n        type: 'KnowledgeSettings',\n        props: {\n            defaultLanguage: '?string',\n            knowledgeEnabled: 'boolean',\n            languages: ['KnowledgeLanguageItem'],\n        },\n    },\n    KnowledgeLanguageItem: {\n        type: 'KnowledgeLanguageItem',\n        props: {\n            active: 'boolean',\n            assigneeId: '?string',\n            name: 'string',\n        },\n    },\n    FieldDiff: {\n        type: 'FieldDiff',\n        props: {\n            difference: 'string',\n            name: 'string',\n        },\n    },\n    AdditionalInformationMap: {\n        type: 'AdditionalInformationMap',\n        props: {\n            name: 'string',\n            value: 'string',\n        },\n    },\n    MatchRecord: {\n        type: 'MatchRecord',\n        props: {\n            additionalInformation: ['AdditionalInformationMap'],\n            fieldDiffs: ['FieldDiff'],\n            matchConfidence: 'number',\n            record: 'sObject',\n        },\n    },\n    MatchResult: {\n        type: 'MatchResult',\n        props: {\n            entityType: 'string',\n            errors: ['Error'],\n            matchEngine: 'string',\n            matchRecords: ['MatchRecord'],\n            rule: 'string',\n            size: 'number',\n            success: 'boolean',\n        },\n    },\n    DuplicateResult: {\n        type: 'DuplicateResult',\n        props: {\n            allowSave: 'boolean',\n            duplicateRule: 'string',\n            duplicateRuleEntityType: 'string',\n            errorMessage: '?string',\n            matchResults: ['MatchResult'],\n        },\n    },\n    DuplicateError: {\n        type: 'DuplicateError',\n        props: {\n            duplicateResult: 'DuplicateResult',\n        },\n        extends: 'Error',\n    },\n    DescribeNounResult: {\n        type: 'DescribeNounResult',\n        props: {\n            caseValues: ['NameCaseValue'],\n            developerName: 'string',\n            gender: '?string',\n            name: 'string',\n            pluralAlias: '?string',\n            startsWith: '?string',\n        },\n    },\n    NameCaseValue: {\n        type: 'NameCaseValue',\n        props: {\n            article: '?string',\n            caseType: '?string',\n            number: '?string',\n            possessive: '?string',\n            value: '?string',\n        },\n    },\n    FindDuplicatesResult: {\n        type: 'FindDuplicatesResult',\n        props: {\n            duplicateResults: ['DuplicateResult'],\n            errors: ['Error'],\n            success: 'boolean',\n        },\n    },\n    DescribeAppMenuResult: {\n        type: 'DescribeAppMenuResult',\n        props: {\n            appMenuItems: ['DescribeAppMenuItem'],\n        },\n    },\n    DescribeAppMenuItem: {\n        type: 'DescribeAppMenuItem',\n        props: {\n            colors: ['DescribeColor'],\n            content: 'string',\n            icons: ['DescribeIcon'],\n            label: 'string',\n            name: 'string',\n            type: 'string',\n            url: 'string',\n        },\n    },\n    DescribeThemeResult: {\n        type: 'DescribeThemeResult',\n        props: {\n            themeItems: ['DescribeThemeItem'],\n        },\n    },\n    DescribeThemeItem: {\n        type: 'DescribeThemeItem',\n        props: {\n            colors: ['DescribeColor'],\n            icons: ['DescribeIcon'],\n            name: 'string',\n        },\n    },\n    DescribeSoftphoneLayoutResult: {\n        type: 'DescribeSoftphoneLayoutResult',\n        props: {\n            callTypes: ['DescribeSoftphoneLayoutCallType'],\n            id: 'string',\n            name: 'string',\n        },\n    },\n    DescribeSoftphoneLayoutCallType: {\n        type: 'DescribeSoftphoneLayoutCallType',\n        props: {\n            infoFields: ['DescribeSoftphoneLayoutInfoField'],\n            name: 'string',\n            screenPopOptions: ['DescribeSoftphoneScreenPopOption'],\n            screenPopsOpenWithin: '?string',\n            sections: ['DescribeSoftphoneLayoutSection'],\n        },\n    },\n    DescribeSoftphoneScreenPopOption: {\n        type: 'DescribeSoftphoneScreenPopOption',\n        props: {\n            matchType: 'string',\n            screenPopData: 'string',\n            screenPopType: 'string',\n        },\n    },\n    DescribeSoftphoneLayoutInfoField: {\n        type: 'DescribeSoftphoneLayoutInfoField',\n        props: {\n            name: 'string',\n        },\n    },\n    DescribeSoftphoneLayoutSection: {\n        type: 'DescribeSoftphoneLayoutSection',\n        props: {\n            entityApiName: 'string',\n            items: ['DescribeSoftphoneLayoutItem'],\n        },\n    },\n    DescribeSoftphoneLayoutItem: {\n        type: 'DescribeSoftphoneLayoutItem',\n        props: {\n            itemApiName: 'string',\n        },\n    },\n    DescribeCompactLayoutsResult: {\n        type: 'DescribeCompactLayoutsResult',\n        props: {\n            compactLayouts: ['DescribeCompactLayout'],\n            defaultCompactLayoutId: 'string',\n            recordTypeCompactLayoutMappings: ['RecordTypeCompactLayoutMapping'],\n        },\n    },\n    DescribeCompactLayout: {\n        type: 'DescribeCompactLayout',\n        props: {\n            actions: ['DescribeLayoutButton'],\n            fieldItems: ['DescribeLayoutItem'],\n            id: 'string',\n            imageItems: ['DescribeLayoutItem'],\n            label: 'string',\n            name: 'string',\n            objectType: 'string',\n        },\n    },\n    RecordTypeCompactLayoutMapping: {\n        type: 'RecordTypeCompactLayoutMapping',\n        props: {\n            available: 'boolean',\n            compactLayoutId: '?string',\n            compactLayoutName: 'string',\n            recordTypeId: 'string',\n            recordTypeName: 'string',\n        },\n    },\n    DescribePathAssistantsResult: {\n        type: 'DescribePathAssistantsResult',\n        props: {\n            pathAssistants: ['DescribePathAssistant'],\n        },\n    },\n    DescribePathAssistant: {\n        type: 'DescribePathAssistant',\n        props: {\n            active: 'boolean',\n            animationRule: ['?', 'DescribeAnimationRule'],\n            apiName: 'string',\n            label: 'string',\n            pathPicklistField: 'string',\n            picklistsForRecordType: ['?', 'PicklistForRecordType'],\n            recordTypeId: '?string',\n            steps: ['DescribePathAssistantStep'],\n        },\n    },\n    DescribePathAssistantStep: {\n        type: 'DescribePathAssistantStep',\n        props: {\n            closed: 'boolean',\n            converted: 'boolean',\n            fields: ['DescribePathAssistantField'],\n            info: '?string',\n            layoutSection: '?DescribeLayoutSection',\n            picklistLabel: 'string',\n            picklistValue: 'string',\n            won: 'boolean',\n        },\n    },\n    DescribePathAssistantField: {\n        type: 'DescribePathAssistantField',\n        props: {\n            apiName: 'string',\n            label: 'string',\n            readOnly: 'boolean',\n            required: 'boolean',\n        },\n    },\n    DescribeAnimationRule: {\n        type: 'DescribeAnimationRule',\n        props: {\n            animationFrequency: 'string',\n            isActive: 'boolean',\n            recordTypeContext: 'string',\n            recordTypeId: '?string',\n            targetField: 'string',\n            targetFieldChangeToValues: 'string',\n        },\n    },\n    DescribeApprovalLayoutResult: {\n        type: 'DescribeApprovalLayoutResult',\n        props: {\n            approvalLayouts: ['DescribeApprovalLayout'],\n        },\n    },\n    DescribeApprovalLayout: {\n        type: 'DescribeApprovalLayout',\n        props: {\n            id: 'string',\n            label: 'string',\n            layoutItems: ['DescribeLayoutItem'],\n            name: 'string',\n        },\n    },\n    DescribeLayoutResult: {\n        type: 'DescribeLayoutResult',\n        props: {\n            layouts: ['DescribeLayout'],\n            recordTypeMappings: ['RecordTypeMapping'],\n            recordTypeSelectorRequired: 'boolean',\n        },\n    },\n    DescribeLayout: {\n        type: 'DescribeLayout',\n        props: {\n            buttonLayoutSection: '?DescribeLayoutButtonSection',\n            detailLayoutSections: ['DescribeLayoutSection'],\n            editLayoutSections: ['DescribeLayoutSection'],\n            feedView: '?DescribeLayoutFeedView',\n            highlightsPanelLayoutSection: '?DescribeLayoutSection',\n            id: '?string',\n            quickActionList: '?DescribeQuickActionListResult',\n            relatedContent: '?RelatedContent',\n            relatedLists: ['RelatedList'],\n            saveOptions: ['DescribeLayoutSaveOption'],\n        },\n    },\n    DescribeQuickActionListResult: {\n        type: 'DescribeQuickActionListResult',\n        props: {\n            quickActionListItems: ['DescribeQuickActionListItemResult'],\n        },\n    },\n    DescribeQuickActionListItemResult: {\n        type: 'DescribeQuickActionListItemResult',\n        props: {\n            accessLevelRequired: '?string',\n            colors: ['DescribeColor'],\n            iconUrl: '?string',\n            icons: ['DescribeIcon'],\n            label: 'string',\n            miniIconUrl: 'string',\n            quickActionName: 'string',\n            targetSobjectType: '?string',\n            type: 'string',\n        },\n    },\n    DescribeLayoutFeedView: {\n        type: 'DescribeLayoutFeedView',\n        props: {\n            feedFilters: ['DescribeLayoutFeedFilter'],\n        },\n    },\n    DescribeLayoutFeedFilter: {\n        type: 'DescribeLayoutFeedFilter',\n        props: {\n            label: 'string',\n            name: 'string',\n            type: 'string',\n        },\n    },\n    DescribeLayoutSaveOption: {\n        type: 'DescribeLayoutSaveOption',\n        props: {\n            defaultValue: 'boolean',\n            isDisplayed: 'boolean',\n            label: 'string',\n            name: 'string',\n            restHeaderName: 'string',\n            soapHeaderName: 'string',\n        },\n    },\n    DescribeLayoutSection: {\n        type: 'DescribeLayoutSection',\n        props: {\n            collapsed: 'boolean',\n            columns: 'number',\n            heading: '?string',\n            layoutRows: ['DescribeLayoutRow'],\n            layoutSectionId: '?string',\n            parentLayoutId: 'string',\n            rows: 'number',\n            tabOrder: 'string',\n            useCollapsibleSection: 'boolean',\n            useHeading: 'boolean',\n        },\n    },\n    DescribeLayoutButtonSection: {\n        type: 'DescribeLayoutButtonSection',\n        props: {\n            detailButtons: ['DescribeLayoutButton'],\n        },\n    },\n    DescribeLayoutRow: {\n        type: 'DescribeLayoutRow',\n        props: {\n            layoutItems: ['DescribeLayoutItem'],\n            numItems: 'number',\n        },\n    },\n    DescribeLayoutItem: {\n        type: 'DescribeLayoutItem',\n        props: {\n            editableForNew: 'boolean',\n            editableForUpdate: 'boolean',\n            label: '?string',\n            layoutComponents: ['DescribeLayoutComponent'],\n            placeholder: 'boolean',\n            required: 'boolean',\n        },\n    },\n    DescribeLayoutButton: {\n        type: 'DescribeLayoutButton',\n        props: {\n            behavior: '?string',\n            colors: ['DescribeColor'],\n            content: '?string',\n            contentSource: '?string',\n            custom: 'boolean',\n            encoding: '?string',\n            height: '?number',\n            icons: ['DescribeIcon'],\n            label: '?string',\n            menubar: '?boolean',\n            name: '?string',\n            overridden: 'boolean',\n            resizeable: '?boolean',\n            scrollbars: '?boolean',\n            showsLocation: '?boolean',\n            showsStatus: '?boolean',\n            toolbar: '?boolean',\n            url: '?string',\n            width: '?number',\n            windowPosition: '?string',\n        },\n    },\n    DescribeLayoutComponent: {\n        type: 'DescribeLayoutComponent',\n        props: {\n            displayLines: 'number',\n            tabOrder: 'number',\n            type: 'string',\n            value: '?string',\n        },\n    },\n    FieldComponent: {\n        type: 'FieldComponent',\n        props: {\n            field: 'Field',\n        },\n        extends: 'DescribeLayoutComponent',\n    },\n    FieldLayoutComponent: {\n        type: 'FieldLayoutComponent',\n        props: {\n            components: ['DescribeLayoutComponent'],\n            fieldType: 'string',\n        },\n        extends: 'DescribeLayoutComponent',\n    },\n    VisualforcePage: {\n        type: 'VisualforcePage',\n        props: {\n            showLabel: 'boolean',\n            showScrollbars: 'boolean',\n            suggestedHeight: 'string',\n            suggestedWidth: 'string',\n            url: 'string',\n        },\n        extends: 'DescribeLayoutComponent',\n    },\n    Canvas: {\n        type: 'Canvas',\n        props: {\n            displayLocation: 'string',\n            referenceId: 'string',\n            showLabel: 'boolean',\n            showScrollbars: 'boolean',\n            suggestedHeight: 'string',\n            suggestedWidth: 'string',\n        },\n        extends: 'DescribeLayoutComponent',\n    },\n    ReportChartComponent: {\n        type: 'ReportChartComponent',\n        props: {\n            cacheData: 'boolean',\n            contextFilterableField: 'string',\n            error: 'string',\n            hideOnError: 'boolean',\n            includeContext: 'boolean',\n            showTitle: 'boolean',\n            size: 'string',\n        },\n        extends: 'DescribeLayoutComponent',\n    },\n    AnalyticsCloudComponent: {\n        type: 'AnalyticsCloudComponent',\n        props: {\n            error: 'string',\n            filter: 'string',\n            height: 'string',\n            hideOnError: 'boolean',\n            showSharing: 'boolean',\n            showTitle: 'boolean',\n            width: 'string',\n        },\n        extends: 'DescribeLayoutComponent',\n    },\n    CustomLinkComponent: {\n        type: 'CustomLinkComponent',\n        props: {\n            customLink: 'DescribeLayoutButton',\n        },\n        extends: 'DescribeLayoutComponent',\n    },\n    NamedLayoutInfo: {\n        type: 'NamedLayoutInfo',\n        props: {\n            name: 'string',\n        },\n    },\n    RecordTypeInfo: {\n        type: 'RecordTypeInfo',\n        props: {\n            active: 'boolean',\n            available: 'boolean',\n            defaultRecordTypeMapping: 'boolean',\n            developerName: 'string',\n            master: 'boolean',\n            name: 'string',\n            recordTypeId: '?string',\n        },\n    },\n    RecordTypeMapping: {\n        type: 'RecordTypeMapping',\n        props: {\n            active: 'boolean',\n            available: 'boolean',\n            defaultRecordTypeMapping: 'boolean',\n            developerName: 'string',\n            layoutId: 'string',\n            master: 'boolean',\n            name: 'string',\n            picklistsForRecordType: ['?', 'PicklistForRecordType'],\n            recordTypeId: '?string',\n        },\n    },\n    PicklistForRecordType: {\n        type: 'PicklistForRecordType',\n        props: {\n            picklistName: 'string',\n            picklistValues: ['?', 'PicklistEntry'],\n        },\n    },\n    RelatedContent: {\n        type: 'RelatedContent',\n        props: {\n            relatedContentItems: ['DescribeRelatedContentItem'],\n        },\n    },\n    DescribeRelatedContentItem: {\n        type: 'DescribeRelatedContentItem',\n        props: {\n            describeLayoutItem: 'DescribeLayoutItem',\n        },\n    },\n    RelatedList: {\n        type: 'RelatedList',\n        props: {\n            accessLevelRequiredForCreate: '?string',\n            buttons: ['?', 'DescribeLayoutButton'],\n            columns: ['RelatedListColumn'],\n            custom: 'boolean',\n            field: '?string',\n            label: 'string',\n            limitRows: 'number',\n            name: 'string',\n            sobject: '?string',\n            sort: ['RelatedListSort'],\n        },\n    },\n    RelatedListColumn: {\n        type: 'RelatedListColumn',\n        props: {\n            field: '?string',\n            fieldApiName: 'string',\n            format: '?string',\n            label: 'string',\n            lookupId: '?string',\n            name: 'string',\n            sortable: 'boolean',\n        },\n    },\n    RelatedListSort: {\n        type: 'RelatedListSort',\n        props: {\n            ascending: 'boolean',\n            column: 'string',\n        },\n    },\n    EmailFileAttachment: {\n        type: 'EmailFileAttachment',\n        props: {\n            body: '?string',\n            contentType: '?string',\n            fileName: 'string',\n            id: '?string',\n            inline: '?boolean',\n        },\n    },\n    Email: {\n        type: 'Email',\n        props: {\n            bccSender: '?boolean',\n            emailPriority: '?string',\n            replyTo: '?string',\n            saveAsActivity: '?boolean',\n            senderDisplayName: '?string',\n            subject: '?string',\n            useSignature: '?boolean',\n        },\n    },\n    MassEmailMessage: {\n        type: 'MassEmailMessage',\n        props: {\n            description: '?string',\n            targetObjectIds: '?string',\n            templateId: 'string',\n            whatIds: '?string',\n        },\n        extends: 'Email',\n    },\n    SingleEmailMessage: {\n        type: 'SingleEmailMessage',\n        props: {\n            bccAddresses: '?string',\n            ccAddresses: '?string',\n            charset: '?string',\n            documentAttachments: ['string'],\n            entityAttachments: ['string'],\n            fileAttachments: ['EmailFileAttachment'],\n            htmlBody: '?string',\n            inReplyTo: '?string',\n            optOutPolicy: '?string',\n            orgWideEmailAddressId: '?string',\n            plainTextBody: '?string',\n            references: '?string',\n            targetObjectId: '?string',\n            templateId: '?string',\n            templateName: '?string',\n            toAddresses: '?string',\n            treatBodiesAsTemplate: '?boolean',\n            treatTargetObjectAsRecipient: '?boolean',\n            whatId: '?string',\n        },\n        extends: 'Email',\n    },\n    SendEmailResult: {\n        type: 'SendEmailResult',\n        props: {\n            errors: ['SendEmailError'],\n            success: 'boolean',\n        },\n    },\n    ListViewColumn: {\n        type: 'ListViewColumn',\n        props: {\n            ascendingLabel: '?string',\n            descendingLabel: '?string',\n            fieldNameOrPath: 'string',\n            hidden: 'boolean',\n            label: 'string',\n            searchable: 'boolean',\n            selectListItem: 'string',\n            sortDirection: '?string',\n            sortIndex: '?number',\n            sortable: 'boolean',\n            type: 'string',\n        },\n    },\n    ListViewOrderBy: {\n        type: 'ListViewOrderBy',\n        props: {\n            fieldNameOrPath: 'string',\n            nullsPosition: '?string',\n            sortDirection: '?string',\n        },\n    },\n    DescribeSoqlListView: {\n        type: 'DescribeSoqlListView',\n        props: {\n            columns: ['ListViewColumn'],\n            id: 'string',\n            orderBy: ['ListViewOrderBy'],\n            query: 'string',\n            relatedEntityId: '?string',\n            scope: '?string',\n            scopeEntityId: '?string',\n            sobjectType: 'string',\n            whereCondition: '?SoqlWhereCondition',\n        },\n    },\n    DescribeSoqlListViewsRequest: {\n        type: 'DescribeSoqlListViewsRequest',\n        props: {\n            listViewParams: ['DescribeSoqlListViewParams'],\n        },\n    },\n    DescribeSoqlListViewParams: {\n        type: 'DescribeSoqlListViewParams',\n        props: {\n            developerNameOrId: 'string',\n            sobjectType: '?string',\n        },\n    },\n    DescribeSoqlListViewResult: {\n        type: 'DescribeSoqlListViewResult',\n        props: {\n            describeSoqlListViews: ['DescribeSoqlListView'],\n        },\n    },\n    ExecuteListViewRequest: {\n        type: 'ExecuteListViewRequest',\n        props: {\n            developerNameOrId: 'string',\n            limit: '?number',\n            offset: '?number',\n            orderBy: ['ListViewOrderBy'],\n            sobjectType: 'string',\n        },\n    },\n    ExecuteListViewResult: {\n        type: 'ExecuteListViewResult',\n        props: {\n            columns: ['ListViewColumn'],\n            developerName: 'string',\n            done: 'boolean',\n            id: 'string',\n            label: 'string',\n            records: ['ListViewRecord'],\n            size: 'number',\n        },\n    },\n    ListViewRecord: {\n        type: 'ListViewRecord',\n        props: {\n            columns: ['ListViewRecordColumn'],\n        },\n    },\n    ListViewRecordColumn: {\n        type: 'ListViewRecordColumn',\n        props: {\n            fieldNameOrPath: 'string',\n            value: '?string',\n        },\n    },\n    SoqlWhereCondition: {\n        type: 'SoqlWhereCondition',\n        props: {},\n    },\n    SoqlCondition: {\n        type: 'SoqlCondition',\n        props: {\n            field: 'string',\n            operator: 'string',\n            values: ['string'],\n        },\n        extends: 'SoqlWhereCondition',\n    },\n    SoqlNotCondition: {\n        type: 'SoqlNotCondition',\n        props: {\n            condition: 'SoqlWhereCondition',\n        },\n        extends: 'SoqlWhereCondition',\n    },\n    SoqlConditionGroup: {\n        type: 'SoqlConditionGroup',\n        props: {\n            conditions: ['SoqlWhereCondition'],\n            conjunction: 'string',\n        },\n        extends: 'SoqlWhereCondition',\n    },\n    SoqlSubQueryCondition: {\n        type: 'SoqlSubQueryCondition',\n        props: {\n            field: 'string',\n            operator: 'string',\n            subQuery: 'string',\n        },\n        extends: 'SoqlWhereCondition',\n    },\n    DescribeSearchLayoutResult: {\n        type: 'DescribeSearchLayoutResult',\n        props: {\n            errorMsg: '?string',\n            label: '?string',\n            limitRows: '?number',\n            objectType: 'string',\n            searchColumns: ['?', 'DescribeColumn'],\n        },\n    },\n    DescribeColumn: {\n        type: 'DescribeColumn',\n        props: {\n            field: 'string',\n            format: '?string',\n            label: 'string',\n            name: 'string',\n        },\n    },\n    DescribeSearchScopeOrderResult: {\n        type: 'DescribeSearchScopeOrderResult',\n        props: {\n            keyPrefix: 'string',\n            name: 'string',\n        },\n    },\n    DescribeSearchableEntityResult: {\n        type: 'DescribeSearchableEntityResult',\n        props: {\n            label: 'string',\n            name: 'string',\n            pluralLabel: 'string',\n        },\n    },\n    DescribeTabSetResult: {\n        type: 'DescribeTabSetResult',\n        props: {\n            description: 'string',\n            label: 'string',\n            logoUrl: 'string',\n            namespace: '?string',\n            selected: 'boolean',\n            tabSetId: 'string',\n            tabs: ['DescribeTab'],\n        },\n    },\n    DescribeTab: {\n        type: 'DescribeTab',\n        props: {\n            colors: ['DescribeColor'],\n            custom: 'boolean',\n            iconUrl: 'string',\n            icons: ['DescribeIcon'],\n            label: 'string',\n            miniIconUrl: 'string',\n            name: 'string',\n            sobjectName: '?string',\n            url: 'string',\n        },\n    },\n    DescribeColor: {\n        type: 'DescribeColor',\n        props: {\n            color: 'string',\n            context: 'string',\n            theme: 'string',\n        },\n    },\n    DescribeIcon: {\n        type: 'DescribeIcon',\n        props: {\n            contentType: 'string',\n            height: '?number',\n            theme: 'string',\n            url: 'string',\n            width: '?number',\n        },\n    },\n    ActionOverride: {\n        type: 'ActionOverride',\n        props: {\n            formFactor: 'string',\n            isAvailableInTouch: 'boolean',\n            name: 'string',\n            pageId: 'string',\n            url: '?string',\n        },\n    },\n    RenderEmailTemplateRequest: {\n        type: 'RenderEmailTemplateRequest',\n        props: {\n            escapeHtmlInMergeFields: '?boolean',\n            templateBodies: 'string',\n            whatId: '?string',\n            whoId: '?string',\n        },\n    },\n    RenderEmailTemplateBodyResult: {\n        type: 'RenderEmailTemplateBodyResult',\n        props: {\n            errors: ['RenderEmailTemplateError'],\n            mergedBody: '?string',\n            success: 'boolean',\n        },\n    },\n    RenderEmailTemplateResult: {\n        type: 'RenderEmailTemplateResult',\n        props: {\n            bodyResults: '?RenderEmailTemplateBodyResult',\n            errors: ['Error'],\n            success: 'boolean',\n        },\n    },\n    RenderStoredEmailTemplateRequest: {\n        type: 'RenderStoredEmailTemplateRequest',\n        props: {\n            attachmentRetrievalOption: '?string',\n            templateId: 'string',\n            updateTemplateUsage: '?boolean',\n            whatId: '?string',\n            whoId: '?string',\n        },\n    },\n    RenderStoredEmailTemplateResult: {\n        type: 'RenderStoredEmailTemplateResult',\n        props: {\n            errors: ['Error'],\n            renderedEmail: '?SingleEmailMessage',\n            success: 'boolean',\n        },\n    },\n    LimitInfo: {\n        type: 'LimitInfo',\n        props: {\n            current: 'number',\n            limit: 'number',\n            type: 'string',\n        },\n    },\n    OwnerChangeOption: {\n        type: 'OwnerChangeOption',\n        props: {\n            type: 'string',\n            execute: 'boolean',\n        },\n    },\n    ApiFault: {\n        type: 'ApiFault',\n        props: {\n            exceptionCode: 'string',\n            exceptionMessage: 'string',\n            extendedErrorDetails: ['?', 'ExtendedErrorDetails'],\n        },\n    },\n    ApiQueryFault: {\n        type: 'ApiQueryFault',\n        props: {\n            row: 'number',\n            column: 'number',\n        },\n        extends: 'ApiFault',\n    },\n    LoginFault: {\n        type: 'LoginFault',\n        props: {},\n        extends: 'ApiFault',\n    },\n    InvalidQueryLocatorFault: {\n        type: 'InvalidQueryLocatorFault',\n        props: {},\n        extends: 'ApiFault',\n    },\n    InvalidNewPasswordFault: {\n        type: 'InvalidNewPasswordFault',\n        props: {},\n        extends: 'ApiFault',\n    },\n    InvalidOldPasswordFault: {\n        type: 'InvalidOldPasswordFault',\n        props: {},\n        extends: 'ApiFault',\n    },\n    InvalidIdFault: {\n        type: 'InvalidIdFault',\n        props: {},\n        extends: 'ApiFault',\n    },\n    UnexpectedErrorFault: {\n        type: 'UnexpectedErrorFault',\n        props: {},\n        extends: 'ApiFault',\n    },\n    InvalidFieldFault: {\n        type: 'InvalidFieldFault',\n        props: {},\n        extends: 'ApiQueryFault',\n    },\n    InvalidSObjectFault: {\n        type: 'InvalidSObjectFault',\n        props: {},\n        extends: 'ApiQueryFault',\n    },\n    MalformedQueryFault: {\n        type: 'MalformedQueryFault',\n        props: {},\n        extends: 'ApiQueryFault',\n    },\n    MalformedSearchFault: {\n        type: 'MalformedSearchFault',\n        props: {},\n        extends: 'ApiQueryFault',\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/api/soap/schema.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/api/streaming.js":
/*!***************************************************!*\
  !*** ./node_modules/jsforce/lib/api/streaming.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StreamingExtension = exports.Streaming = exports.Subscription = exports.Client = void 0;\n/**\n * @file Manages Streaming APIs\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst faye_1 = __webpack_require__(/*! faye */ \"(rsc)/./node_modules/faye/src/faye_node.js\");\nObject.defineProperty(exports, \"Client\", ({ enumerable: true, get: function () { return faye_1.Client; } }));\nObject.defineProperty(exports, \"Subscription\", ({ enumerable: true, get: function () { return faye_1.Subscription; } }));\nconst jsforce_1 = __webpack_require__(/*! ../jsforce */ \"(rsc)/./node_modules/jsforce/lib/jsforce.js\");\nconst StreamingExtension = __importStar(__webpack_require__(/*! ./streaming/extension */ \"(rsc)/./node_modules/jsforce/lib/api/streaming/extension.js\"));\nexports.StreamingExtension = StreamingExtension;\n/*--------------------------------------------*/\n/**\n * Streaming API topic class\n */\nclass Topic {\n    _streaming;\n    name;\n    constructor(streaming, name) {\n        this._streaming = streaming;\n        this.name = name;\n    }\n    /**\n     * Subscribe listener to topic\n     */\n    subscribe(listener) {\n        return this._streaming.subscribe(this.name, listener);\n    }\n    /**\n     * Unsubscribe listener from topic\n     */\n    unsubscribe(subscr) {\n        this._streaming.unsubscribe(this.name, subscr);\n        return this;\n    }\n}\n/*--------------------------------------------*/\n/**\n * Streaming API Generic Streaming Channel\n */\nclass Channel {\n    _streaming;\n    _id;\n    name;\n    constructor(streaming, name) {\n        this._streaming = streaming;\n        this.name = name;\n    }\n    /**\n     * Subscribe to channel\n     */\n    subscribe(listener) {\n        return this._streaming.subscribe(this.name, listener);\n    }\n    unsubscribe(subscr) {\n        this._streaming.unsubscribe(this.name, subscr);\n        return this;\n    }\n    async push(events) {\n        const isArray = Array.isArray(events);\n        const pushEvents = Array.isArray(events) ? events : [events];\n        const conn = this._streaming._conn;\n        if (!this._id) {\n            this._id = conn\n                .sobject('StreamingChannel')\n                .findOne({ Name: this.name }, ['Id'])\n                .then((rec) => rec?.Id);\n        }\n        const id = await this._id;\n        if (!id) {\n            throw new Error(`No streaming channel available for name: ${this.name}`);\n        }\n        const channelUrl = `/sobjects/StreamingChannel/${id}/push`;\n        const rets = await conn.requestPost(channelUrl, {\n            pushEvents,\n        });\n        return isArray ? rets : rets[0];\n    }\n}\n/*--------------------------------------------*/\n/**\n * Streaming API class\n */\nclass Streaming extends events_1.EventEmitter {\n    _conn;\n    _topics = {};\n    _fayeClients = {};\n    /**\n     *\n     */\n    constructor(conn) {\n        super();\n        this._conn = conn;\n    }\n    /* @private */\n    _createClient(forChannelName, extensions) {\n        // forChannelName is advisory, for an API workaround. It does not restrict or select the channel.\n        const needsReplayFix = typeof forChannelName === 'string' && forChannelName.startsWith('/u/');\n        const endpointUrl = [\n            this._conn.instanceUrl,\n            // special endpoint \"/cometd/replay/xx.x\" is only available in 36.0.\n            // See https://releasenotes.docs.salesforce.com/en-us/summer16/release-notes/rn_api_streaming_classic_replay.htm\n            'cometd' +\n                (needsReplayFix && this._conn.version === '36.0'\n                    ? '/replay'\n                    : ''),\n            this._conn.version,\n        ].join('/');\n        const fayeClient = new faye_1.Client(endpointUrl, {});\n        fayeClient.setHeader('Authorization', 'OAuth ' + this._conn.accessToken);\n        if (Array.isArray(extensions)) {\n            for (const extension of extensions) {\n                fayeClient.addExtension(extension);\n            }\n        }\n        // prevent streaming API server error\n        const dispatcher = fayeClient._dispatcher;\n        if (dispatcher.getConnectionTypes().indexOf('callback-polling') === -1) {\n            dispatcher.selectTransport('long-polling');\n            dispatcher._transport.batching = false;\n        }\n        return fayeClient;\n    }\n    /** @private **/\n    _getFayeClient(channelName) {\n        const isGeneric = channelName.startsWith('/u/');\n        const clientType = isGeneric ? 'generic' : 'pushTopic';\n        if (!this._fayeClients[clientType]) {\n            this._fayeClients[clientType] = this._createClient(channelName);\n        }\n        return this._fayeClients[clientType];\n    }\n    /**\n     * Get named topic\n     */\n    topic(name) {\n        this._topics = this._topics || {};\n        const topic = (this._topics[name] =\n            this._topics[name] || new Topic(this, name));\n        return topic;\n    }\n    /**\n     * Get channel for channel name\n     */\n    channel(name) {\n        return new Channel(this, name);\n    }\n    /**\n     * Subscribe topic/channel\n     */\n    subscribe(name, listener) {\n        const channelName = name.startsWith('/') ? name : '/topic/' + name;\n        const fayeClient = this._getFayeClient(channelName);\n        return fayeClient.subscribe(channelName, listener);\n    }\n    /**\n     * Unsubscribe topic\n     */\n    unsubscribe(name, subscription) {\n        const channelName = name.startsWith('/') ? name : '/topic/' + name;\n        const fayeClient = this._getFayeClient(channelName);\n        fayeClient.unsubscribe(channelName, subscription);\n        return this;\n    }\n    /**\n     * Create a Streaming client, optionally with extensions\n     *\n     * See Faye docs for implementation details: https://faye.jcoglan.com/browser/extensions.html\n     *\n     * Example usage:\n     *\n     * ```javascript\n     * const jsforce = require('jsforce');\n     *\n     * // Establish a Salesforce connection. (Details elided)\n     * const conn = new jsforce.Connection({ … });\n     *\n     * const fayeClient = conn.streaming.createClient();\n     *\n     * const subscription = fayeClient.subscribe(channel, data => {\n     *   console.log('topic received data', data);\n     * });\n     *\n     * subscription.cancel();\n     * ```\n     *\n     * Example with extensions, using Replay & Auth Failure extensions in a server-side Node.js app:\n     *\n     * ```javascript\n     * const jsforce = require('jsforce');\n     * const { StreamingExtension } = require('jsforce/api/streaming');\n     *\n     * // Establish a Salesforce connection. (Details elided)\n     * const conn = new jsforce.Connection({ … });\n     *\n     * const channel = \"/event/My_Event__e\";\n     * const replayId = -2; // -2 is all retained events\n     *\n     * const exitCallback = () => process.exit(1);\n     * const authFailureExt = new StreamingExtension.AuthFailure(exitCallback);\n     *\n     * const replayExt = new StreamingExtension.Replay(channel, replayId);\n     *\n     * const fayeClient = conn.streaming.createClient([\n     *   authFailureExt,\n     *   replayExt\n     * ]);\n     *\n     * const subscription = fayeClient.subscribe(channel, data => {\n     *   console.log('topic received data', data);\n     * });\n     *\n     * subscription.cancel();\n     * ```\n     */\n    createClient(extensions) {\n        return this._createClient(null, extensions);\n    }\n}\nexports.Streaming = Streaming;\n/*--------------------------------------------*/\n/*\n * Register hook in connection instantiation for dynamically adding this API module features\n */\n(0, jsforce_1.registerModule)('streaming', (conn) => new Streaming(conn));\nexports[\"default\"] = Streaming;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/api/streaming.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/api/streaming/extension.js":
/*!*************************************************************!*\
  !*** ./node_modules/jsforce/lib/api/streaming/extension.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n/**\n * Faye Client extensions: https://faye.jcoglan.com/browser/extensions.html\n *\n * For use with Streaming.prototype.createClient()\n **/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Replay = exports.AuthFailure = void 0;\n/*-------------------------------------------*/\n/**\n * Constructor for an auth failure detector extension\n *\n * Based on new feature released with Salesforce Spring '18:\n * https://releasenotes.docs.salesforce.com/en-us/spring18/release-notes/rn_messaging_cometd_auth_validation.htm?edition=&impact=\n *\n * Example triggering error message:\n *\n * ```\n * {\n *   \"ext\":{\n *     \"sfdc\":{\"failureReason\":\"401::Authentication invalid\"},\n *     \"replay\":true},\n *   \"advice\":{\"reconnect\":\"none\"},\n *   \"channel\":\"/meta/handshake\",\n *   \"error\":\"403::Handshake denied\",\n *   \"successful\":false\n * }\n * ```\n *\n * Example usage:\n *\n * ```javascript\n * const jsforce = require('jsforce');\n * const { StreamingExtension } = require('jsforce/api/streaming');\n *\n * const conn = new jsforce.Connection({ … });\n *\n * const channel = \"/event/My_Event__e\";\n *\n * // Exit the Node process when auth fails\n * const exitCallback = () => process.exit(1);\n * const authFailureExt = new StreamingExtension.AuthFailure(exitCallback);\n *\n * const fayeClient = conn.streaming.createClient([ authFailureExt ]);\n *\n * const subscription = fayeClient.subscribe(channel, data => {\n *   console.log('topic received data', data);\n * });\n *\n * subscription.cancel();\n * ```\n *\n * @param {Function} failureCallback - Invoked when authentication becomes invalid\n */\nclass AuthFailure {\n    _failureCallback;\n    constructor(failureCallback) {\n        this._failureCallback = failureCallback;\n    }\n    incoming(message, callback) {\n        if ((message.channel === '/meta/connect' ||\n            message.channel === '/meta/handshake') &&\n            message.advice &&\n            message.advice.reconnect == 'none') {\n            this._failureCallback(message);\n        }\n        else {\n            callback(message);\n        }\n    }\n}\nexports.AuthFailure = AuthFailure;\n/*-------------------------------------------*/\nconst REPLAY_FROM_KEY = 'replay';\n/**\n * Constructor for a durable streaming replay extension\n *\n * Modified from original Salesforce demo source code:\n * https://github.com/developerforce/SalesforceDurableStreamingDemo/blob/3d4a56eac956f744ad6c22e6a8141b6feb57abb9/staticresources/cometdReplayExtension.resource\n *\n * Example usage:\n *\n * ```javascript\n * const jsforce = require('jsforce');\n * const { StreamingExtension } = require('jsforce/api/streaming');\n \n * const conn = new jsforce.Connection({ … });\n *\n * const channel = \"/event/My_Event__e\";\n * const replayId = -2; // -2 is all retained events\n *\n * const replayExt = new StreamingExtension.Replay(channel, replayId);\n *\n * const fayeClient = conn.streaming.createClient([ replayExt ]);\n *\n * const subscription = fayeClient.subscribe(channel, data => {\n *   console.log('topic received data', data);\n * });\n *\n * subscription.cancel();\n * ```\n */\nclass Replay {\n    _extensionEnabled;\n    _replay;\n    _channel;\n    constructor(channel, replayId) {\n        this._extensionEnabled = replayId != null;\n        this._channel = channel;\n        this._replay = replayId;\n    }\n    setExtensionEnabled(extensionEnabled) {\n        this._extensionEnabled = extensionEnabled;\n    }\n    setReplay(replay) {\n        this._replay = parseInt(replay, 10);\n    }\n    setChannel(channel) {\n        this._channel = channel;\n    }\n    incoming(message, callback) {\n        if (message.channel === '/meta/handshake') {\n            if (message.ext && message.ext[REPLAY_FROM_KEY] == true) {\n                this._extensionEnabled = true;\n            }\n        }\n        else if (message.channel === this._channel &&\n            message.data?.event?.replayId) {\n            this._replay = message.data.event.replayId;\n        }\n        callback(message);\n    }\n    outgoing(message, callback) {\n        if (message.channel === '/meta/subscribe') {\n            if (this._extensionEnabled) {\n                if (!message.ext) {\n                    message.ext = {};\n                }\n                const replayFromMap = {\n                    [this._channel]: this._replay,\n                };\n                // add \"ext : { \"replay\" : { CHANNEL : REPLAY_VALUE }}\" to subscribe message\n                message.ext[REPLAY_FROM_KEY] = replayFromMap;\n            }\n        }\n        callback(message);\n    }\n}\nexports.Replay = Replay;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvYXBpL3N0cmVhbWluZy9leHRlbnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxtQkFBbUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw4Q0FBOEM7QUFDN0QscUJBQXFCO0FBQ3JCLGVBQWUsbUJBQW1CO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxxQkFBcUI7QUFDaEM7QUFDQSx5Q0FBeUMsR0FBRztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHFCQUFxQjtBQUNoQztBQUNBLHlDQUF5QyxHQUFHO0FBQzVDO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsYUFBYSx5QkFBeUI7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyIsInNvdXJjZXMiOlsiL1VzZXJzL25lem9iZW5hcmRpL0FJX3N0dWZmL09uYm9hcmRpbmdQb3J0YWwvbm9kZV9tb2R1bGVzL2pzZm9yY2UvbGliL2FwaS9zdHJlYW1pbmcvZXh0ZW5zaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBGYXllIENsaWVudCBleHRlbnNpb25zOiBodHRwczovL2ZheWUuamNvZ2xhbi5jb20vYnJvd3Nlci9leHRlbnNpb25zLmh0bWxcbiAqXG4gKiBGb3IgdXNlIHdpdGggU3RyZWFtaW5nLnByb3RvdHlwZS5jcmVhdGVDbGllbnQoKVxuICoqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZXBsYXkgPSBleHBvcnRzLkF1dGhGYWlsdXJlID0gdm9pZCAwO1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogQ29uc3RydWN0b3IgZm9yIGFuIGF1dGggZmFpbHVyZSBkZXRlY3RvciBleHRlbnNpb25cbiAqXG4gKiBCYXNlZCBvbiBuZXcgZmVhdHVyZSByZWxlYXNlZCB3aXRoIFNhbGVzZm9yY2UgU3ByaW5nICcxODpcbiAqIGh0dHBzOi8vcmVsZWFzZW5vdGVzLmRvY3Muc2FsZXNmb3JjZS5jb20vZW4tdXMvc3ByaW5nMTgvcmVsZWFzZS1ub3Rlcy9ybl9tZXNzYWdpbmdfY29tZXRkX2F1dGhfdmFsaWRhdGlvbi5odG0/ZWRpdGlvbj0maW1wYWN0PVxuICpcbiAqIEV4YW1wbGUgdHJpZ2dlcmluZyBlcnJvciBtZXNzYWdlOlxuICpcbiAqIGBgYFxuICoge1xuICogICBcImV4dFwiOntcbiAqICAgICBcInNmZGNcIjp7XCJmYWlsdXJlUmVhc29uXCI6XCI0MDE6OkF1dGhlbnRpY2F0aW9uIGludmFsaWRcIn0sXG4gKiAgICAgXCJyZXBsYXlcIjp0cnVlfSxcbiAqICAgXCJhZHZpY2VcIjp7XCJyZWNvbm5lY3RcIjpcIm5vbmVcIn0sXG4gKiAgIFwiY2hhbm5lbFwiOlwiL21ldGEvaGFuZHNoYWtlXCIsXG4gKiAgIFwiZXJyb3JcIjpcIjQwMzo6SGFuZHNoYWtlIGRlbmllZFwiLFxuICogICBcInN1Y2Nlc3NmdWxcIjpmYWxzZVxuICogfVxuICogYGBgXG4gKlxuICogRXhhbXBsZSB1c2FnZTpcbiAqXG4gKiBgYGBqYXZhc2NyaXB0XG4gKiBjb25zdCBqc2ZvcmNlID0gcmVxdWlyZSgnanNmb3JjZScpO1xuICogY29uc3QgeyBTdHJlYW1pbmdFeHRlbnNpb24gfSA9IHJlcXVpcmUoJ2pzZm9yY2UvYXBpL3N0cmVhbWluZycpO1xuICpcbiAqIGNvbnN0IGNvbm4gPSBuZXcganNmb3JjZS5Db25uZWN0aW9uKHsg4oCmIH0pO1xuICpcbiAqIGNvbnN0IGNoYW5uZWwgPSBcIi9ldmVudC9NeV9FdmVudF9fZVwiO1xuICpcbiAqIC8vIEV4aXQgdGhlIE5vZGUgcHJvY2VzcyB3aGVuIGF1dGggZmFpbHNcbiAqIGNvbnN0IGV4aXRDYWxsYmFjayA9ICgpID0+IHByb2Nlc3MuZXhpdCgxKTtcbiAqIGNvbnN0IGF1dGhGYWlsdXJlRXh0ID0gbmV3IFN0cmVhbWluZ0V4dGVuc2lvbi5BdXRoRmFpbHVyZShleGl0Q2FsbGJhY2spO1xuICpcbiAqIGNvbnN0IGZheWVDbGllbnQgPSBjb25uLnN0cmVhbWluZy5jcmVhdGVDbGllbnQoWyBhdXRoRmFpbHVyZUV4dCBdKTtcbiAqXG4gKiBjb25zdCBzdWJzY3JpcHRpb24gPSBmYXllQ2xpZW50LnN1YnNjcmliZShjaGFubmVsLCBkYXRhID0+IHtcbiAqICAgY29uc29sZS5sb2coJ3RvcGljIHJlY2VpdmVkIGRhdGEnLCBkYXRhKTtcbiAqIH0pO1xuICpcbiAqIHN1YnNjcmlwdGlvbi5jYW5jZWwoKTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZhaWx1cmVDYWxsYmFjayAtIEludm9rZWQgd2hlbiBhdXRoZW50aWNhdGlvbiBiZWNvbWVzIGludmFsaWRcbiAqL1xuY2xhc3MgQXV0aEZhaWx1cmUge1xuICAgIF9mYWlsdXJlQ2FsbGJhY2s7XG4gICAgY29uc3RydWN0b3IoZmFpbHVyZUNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX2ZhaWx1cmVDYWxsYmFjayA9IGZhaWx1cmVDYWxsYmFjaztcbiAgICB9XG4gICAgaW5jb21pbmcobWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgICAgICAgaWYgKChtZXNzYWdlLmNoYW5uZWwgPT09ICcvbWV0YS9jb25uZWN0JyB8fFxuICAgICAgICAgICAgbWVzc2FnZS5jaGFubmVsID09PSAnL21ldGEvaGFuZHNoYWtlJykgJiZcbiAgICAgICAgICAgIG1lc3NhZ2UuYWR2aWNlICYmXG4gICAgICAgICAgICBtZXNzYWdlLmFkdmljZS5yZWNvbm5lY3QgPT0gJ25vbmUnKSB7XG4gICAgICAgICAgICB0aGlzLl9mYWlsdXJlQ2FsbGJhY2sobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjYWxsYmFjayhtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuQXV0aEZhaWx1cmUgPSBBdXRoRmFpbHVyZTtcbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5jb25zdCBSRVBMQVlfRlJPTV9LRVkgPSAncmVwbGF5Jztcbi8qKlxuICogQ29uc3RydWN0b3IgZm9yIGEgZHVyYWJsZSBzdHJlYW1pbmcgcmVwbGF5IGV4dGVuc2lvblxuICpcbiAqIE1vZGlmaWVkIGZyb20gb3JpZ2luYWwgU2FsZXNmb3JjZSBkZW1vIHNvdXJjZSBjb2RlOlxuICogaHR0cHM6Ly9naXRodWIuY29tL2RldmVsb3BlcmZvcmNlL1NhbGVzZm9yY2VEdXJhYmxlU3RyZWFtaW5nRGVtby9ibG9iLzNkNGE1NmVhYzk1NmY3NDRhZDZjMjJlNmE4MTQxYjZmZWI1N2FiYjkvc3RhdGljcmVzb3VyY2VzL2NvbWV0ZFJlcGxheUV4dGVuc2lvbi5yZXNvdXJjZVxuICpcbiAqIEV4YW1wbGUgdXNhZ2U6XG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogY29uc3QganNmb3JjZSA9IHJlcXVpcmUoJ2pzZm9yY2UnKTtcbiAqIGNvbnN0IHsgU3RyZWFtaW5nRXh0ZW5zaW9uIH0gPSByZXF1aXJlKCdqc2ZvcmNlL2FwaS9zdHJlYW1pbmcnKTtcbiBcbiAqIGNvbnN0IGNvbm4gPSBuZXcganNmb3JjZS5Db25uZWN0aW9uKHsg4oCmIH0pO1xuICpcbiAqIGNvbnN0IGNoYW5uZWwgPSBcIi9ldmVudC9NeV9FdmVudF9fZVwiO1xuICogY29uc3QgcmVwbGF5SWQgPSAtMjsgLy8gLTIgaXMgYWxsIHJldGFpbmVkIGV2ZW50c1xuICpcbiAqIGNvbnN0IHJlcGxheUV4dCA9IG5ldyBTdHJlYW1pbmdFeHRlbnNpb24uUmVwbGF5KGNoYW5uZWwsIHJlcGxheUlkKTtcbiAqXG4gKiBjb25zdCBmYXllQ2xpZW50ID0gY29ubi5zdHJlYW1pbmcuY3JlYXRlQ2xpZW50KFsgcmVwbGF5RXh0IF0pO1xuICpcbiAqIGNvbnN0IHN1YnNjcmlwdGlvbiA9IGZheWVDbGllbnQuc3Vic2NyaWJlKGNoYW5uZWwsIGRhdGEgPT4ge1xuICogICBjb25zb2xlLmxvZygndG9waWMgcmVjZWl2ZWQgZGF0YScsIGRhdGEpO1xuICogfSk7XG4gKlxuICogc3Vic2NyaXB0aW9uLmNhbmNlbCgpO1xuICogYGBgXG4gKi9cbmNsYXNzIFJlcGxheSB7XG4gICAgX2V4dGVuc2lvbkVuYWJsZWQ7XG4gICAgX3JlcGxheTtcbiAgICBfY2hhbm5lbDtcbiAgICBjb25zdHJ1Y3RvcihjaGFubmVsLCByZXBsYXlJZCkge1xuICAgICAgICB0aGlzLl9leHRlbnNpb25FbmFibGVkID0gcmVwbGF5SWQgIT0gbnVsbDtcbiAgICAgICAgdGhpcy5fY2hhbm5lbCA9IGNoYW5uZWw7XG4gICAgICAgIHRoaXMuX3JlcGxheSA9IHJlcGxheUlkO1xuICAgIH1cbiAgICBzZXRFeHRlbnNpb25FbmFibGVkKGV4dGVuc2lvbkVuYWJsZWQpIHtcbiAgICAgICAgdGhpcy5fZXh0ZW5zaW9uRW5hYmxlZCA9IGV4dGVuc2lvbkVuYWJsZWQ7XG4gICAgfVxuICAgIHNldFJlcGxheShyZXBsYXkpIHtcbiAgICAgICAgdGhpcy5fcmVwbGF5ID0gcGFyc2VJbnQocmVwbGF5LCAxMCk7XG4gICAgfVxuICAgIHNldENoYW5uZWwoY2hhbm5lbCkge1xuICAgICAgICB0aGlzLl9jaGFubmVsID0gY2hhbm5lbDtcbiAgICB9XG4gICAgaW5jb21pbmcobWVzc2FnZSwgY2FsbGJhY2spIHtcbiAgICAgICAgaWYgKG1lc3NhZ2UuY2hhbm5lbCA9PT0gJy9tZXRhL2hhbmRzaGFrZScpIHtcbiAgICAgICAgICAgIGlmIChtZXNzYWdlLmV4dCAmJiBtZXNzYWdlLmV4dFtSRVBMQVlfRlJPTV9LRVldID09IHRydWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9leHRlbnNpb25FbmFibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChtZXNzYWdlLmNoYW5uZWwgPT09IHRoaXMuX2NoYW5uZWwgJiZcbiAgICAgICAgICAgIG1lc3NhZ2UuZGF0YT8uZXZlbnQ/LnJlcGxheUlkKSB7XG4gICAgICAgICAgICB0aGlzLl9yZXBsYXkgPSBtZXNzYWdlLmRhdGEuZXZlbnQucmVwbGF5SWQ7XG4gICAgICAgIH1cbiAgICAgICAgY2FsbGJhY2sobWVzc2FnZSk7XG4gICAgfVxuICAgIG91dGdvaW5nKG1lc3NhZ2UsIGNhbGxiYWNrKSB7XG4gICAgICAgIGlmIChtZXNzYWdlLmNoYW5uZWwgPT09ICcvbWV0YS9zdWJzY3JpYmUnKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fZXh0ZW5zaW9uRW5hYmxlZCkge1xuICAgICAgICAgICAgICAgIGlmICghbWVzc2FnZS5leHQpIHtcbiAgICAgICAgICAgICAgICAgICAgbWVzc2FnZS5leHQgPSB7fTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgcmVwbGF5RnJvbU1hcCA9IHtcbiAgICAgICAgICAgICAgICAgICAgW3RoaXMuX2NoYW5uZWxdOiB0aGlzLl9yZXBsYXksXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAvLyBhZGQgXCJleHQgOiB7IFwicmVwbGF5XCIgOiB7IENIQU5ORUwgOiBSRVBMQVlfVkFMVUUgfX1cIiB0byBzdWJzY3JpYmUgbWVzc2FnZVxuICAgICAgICAgICAgICAgIG1lc3NhZ2UuZXh0W1JFUExBWV9GUk9NX0tFWV0gPSByZXBsYXlGcm9tTWFwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhbGxiYWNrKG1lc3NhZ2UpO1xuICAgIH1cbn1cbmV4cG9ydHMuUmVwbGF5ID0gUmVwbGF5O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/api/streaming/extension.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/api/tooling.js":
/*!*************************************************!*\
  !*** ./node_modules/jsforce/lib/api/tooling.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Tooling = void 0;\n/**\n * @file Manages Tooling APIs\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\nconst jsforce_1 = __webpack_require__(/*! ../jsforce */ \"(rsc)/./node_modules/jsforce/lib/jsforce.js\");\nconst connection_1 = __importDefault(__webpack_require__(/*! ../connection */ \"(rsc)/./node_modules/jsforce/lib/connection.js\"));\nconst cache_1 = __importDefault(__webpack_require__(/*! ../cache */ \"(rsc)/./node_modules/jsforce/lib/cache.js\"));\n/**\n *\n */\nconst { query, queryMore, _ensureVersion, create, _createSingle, _createMany, _createParallel, retrieve, _retrieveSingle, _retrieveParallel, _retrieveMany, update, _updateSingle, _updateParallel, _updateMany, upsert, destroy, _destroySingle, _destroyParallel, _destroyMany, describe, describeGlobal, sobject, } = connection_1.default.prototype;\nconst describeCacheKey = (type) => type ? `describe.${type}` : 'describe';\n/**\n * API class for Tooling API call\n */\nclass Tooling {\n    _conn;\n    get version() {\n        return this._conn.version;\n    }\n    /**\n     * Execute query by using SOQL\n     */\n    query = query;\n    /**\n     * Query next record set by using query locator\n     */\n    queryMore = queryMore;\n    _ensureVersion = _ensureVersion;\n    /**\n     * Create records\n     */\n    create = create;\n    _createSingle = _createSingle;\n    _createParallel = _createParallel;\n    _createMany = _createMany;\n    /**\n     * Synonym of Tooling#create()\n     */\n    insert = create;\n    /**\n     * Retrieve specified records\n     */\n    retrieve = retrieve;\n    _retrieveSingle = _retrieveSingle;\n    _retrieveParallel = _retrieveParallel;\n    _retrieveMany = _retrieveMany;\n    /**\n     * Update records\n     */\n    update = update;\n    _updateSingle = _updateSingle;\n    _updateParallel = _updateParallel;\n    _updateMany = _updateMany;\n    /**\n     * Upsert records\n     */\n    upsert = upsert;\n    /**\n     * Delete records\n     */\n    destroy = destroy;\n    _destroySingle = _destroySingle;\n    _destroyParallel = _destroyParallel;\n    _destroyMany = _destroyMany;\n    /**\n     * Synonym of Tooling#destroy()\n     */\n    delete = destroy;\n    /**\n     * Synonym of Tooling#destroy()\n     */\n    del = destroy;\n    cache = new cache_1.default();\n    /**\n     * Describe SObject metadata\n     */\n    describe = this.cache.createCachedFunction(describe, this, {\n        key: describeCacheKey,\n        strategy: 'NOCACHE',\n    });\n    describe$ = this.cache.createCachedFunction(describe, this, {\n        key: describeCacheKey,\n        strategy: 'HIT',\n    });\n    describe$$ = this.cache.createCachedFunction(describe, this, {\n        key: describeCacheKey,\n        strategy: 'IMMEDIATE',\n    });\n    /**\n     * Synonym of Tooling#describe()\n     */\n    describeSObject = this.describe;\n    describeSObject$ = this.describe$;\n    describeSObject$$ = this.describe$$;\n    /**\n     * Describe global SObjects\n     */\n    describeGlobal = this.cache.createCachedFunction(describeGlobal, this, {\n        key: 'describeGlobal',\n        strategy: 'NOCACHE',\n    });\n    describeGlobal$ = this.cache.createCachedFunction(describeGlobal, this, {\n        key: 'describeGlobal',\n        strategy: 'HIT',\n    });\n    describeGlobal$$ = this.cache.createCachedFunction(describeGlobal, this, {\n        key: 'describeGlobal',\n        strategy: 'IMMEDIATE',\n    });\n    /**\n     * Get SObject instance\n     */\n    sobject = sobject;\n    sobjects = {};\n    /**\n     *\n     */\n    constructor(conn) {\n        this._conn = conn;\n    }\n    /**\n     * @private\n     */\n    _establish() {\n        this.sobjects = {};\n        this.cache.clear();\n        this.cache.get('describeGlobal').removeAllListeners('value');\n        this.cache.get('describeGlobal').on('value', (res) => {\n            if (res.result) {\n                for (const { name: type } of res.result.sobjects) {\n                    this.sobject(type);\n                }\n            }\n        });\n    }\n    /**\n     * @private\n     */\n    _baseUrl() {\n        return this._conn._baseUrl() + '/tooling';\n    }\n    /**\n     * @private\n     */\n    _supports(feature) {\n        return this._conn._supports(feature);\n    }\n    /**\n     *\n     */\n    request(request, options) {\n        return this._conn.request(request, options);\n    }\n    /**\n     * Executes Apex code anonymously\n     */\n    executeAnonymous(body) {\n        const url = this._baseUrl() +\n            '/executeAnonymous?anonymousBody=' +\n            encodeURIComponent(body);\n        return this.request(url);\n    }\n    /**\n     * Executes Apex tests asynchronously\n     */\n    runTestsAsynchronous(req) {\n        const url = this._baseUrl() + '/runTestsAsynchronous/';\n        return this._conn.requestPost(url, req);\n    }\n    /**\n     * Executes Apex tests synchronously\n     */\n    runTestsSynchronous(req) {\n        const url = this._baseUrl() + '/runTestsSynchronous/';\n        return this._conn.requestPost(url, req);\n    }\n    /**\n     * Retrieves available code completions of the referenced type\n     */\n    completions(type = 'apex') {\n        const url = this._baseUrl() + '/completions?type=' + encodeURIComponent(type);\n        return this.request({\n            method: 'GET',\n            url,\n            headers: { Accept: 'application/json' },\n        });\n    }\n}\nexports.Tooling = Tooling;\n/*--------------------------------------------*/\n/*\n * Register hook in connection instantiation for dynamically adding this API module features\n */\n(0, jsforce_1.registerModule)('tooling', (conn) => new Tooling(conn));\nexports[\"default\"] = Tooling;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/api/tooling.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/browser/canvas.js":
/*!****************************************************!*\
  !*** ./node_modules/jsforce/lib/browser/canvas.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n *\n */\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nfunction parseHeaders(hs) {\n    const headers = {};\n    for (const line of hs.split(/\\n/)) {\n        const [name, value] = line.split(/\\s*:\\s*/);\n        headers[name.toLowerCase()] = value;\n    }\n    return headers;\n}\nasync function processCanvasRequest(params, signedRequest, requestBody) {\n    const settings = {\n        client: signedRequest.client,\n        method: params.method,\n        data: requestBody,\n    };\n    const paramHeaders = params.headers;\n    if (paramHeaders) {\n        settings.headers = {};\n        for (const name of Object.keys(paramHeaders)) {\n            if (name.toLowerCase() === 'content-type') {\n                settings.contentType = paramHeaders[name];\n            }\n            else {\n                settings.headers[name] = paramHeaders[name];\n            }\n        }\n    }\n    const data = await new Promise((resolve, reject) => {\n        settings.success = resolve;\n        settings.failure = reject;\n        Sfdc.canvas.client.ajax(params.url, settings);\n    });\n    const headers = parseHeaders(data.responseHeaders);\n    let responseBody = data.payload;\n    if (typeof responseBody !== 'string') {\n        responseBody = JSON.stringify(responseBody);\n    }\n    return {\n        statusCode: data.status,\n        headers,\n        body: responseBody,\n    };\n}\nfunction createRequest(signedRequest) {\n    return (params) => {\n        const buf = [];\n        const stream = new stream_1.Transform({\n            transform(chunk, encoding, callback) {\n                buf.push(typeof chunk === 'string' ? chunk : chunk.toString('utf8'));\n                callback();\n            },\n            flush() {\n                (async () => {\n                    const body = buf.join('');\n                    const response = await processCanvasRequest(params, signedRequest, body);\n                    stream.emit('response', response);\n                    stream.emit('complete', response);\n                    stream.push(response.body);\n                    stream.push(null);\n                })();\n            },\n        });\n        if (params.body) {\n            stream.end(params.body);\n        }\n        return stream;\n    };\n}\nexports[\"default\"] = {\n    supported: typeof Sfdc === 'object' && typeof Sfdc.canvas !== 'undefined',\n    createRequest,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvYnJvd3Nlci9jYW52YXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uZXpvYmVuYXJkaS9BSV9zdHVmZi9PbmJvYXJkaW5nUG9ydGFsL25vZGVfbW9kdWxlcy9qc2ZvcmNlL2xpYi9icm93c2VyL2NhbnZhcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKlxuICpcbiAqL1xuY29uc3Qgc3RyZWFtXzEgPSByZXF1aXJlKFwic3RyZWFtXCIpO1xuZnVuY3Rpb24gcGFyc2VIZWFkZXJzKGhzKSB7XG4gICAgY29uc3QgaGVhZGVycyA9IHt9O1xuICAgIGZvciAoY29uc3QgbGluZSBvZiBocy5zcGxpdCgvXFxuLykpIHtcbiAgICAgICAgY29uc3QgW25hbWUsIHZhbHVlXSA9IGxpbmUuc3BsaXQoL1xccyo6XFxzKi8pO1xuICAgICAgICBoZWFkZXJzW25hbWUudG9Mb3dlckNhc2UoKV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGhlYWRlcnM7XG59XG5hc3luYyBmdW5jdGlvbiBwcm9jZXNzQ2FudmFzUmVxdWVzdChwYXJhbXMsIHNpZ25lZFJlcXVlc3QsIHJlcXVlc3RCb2R5KSB7XG4gICAgY29uc3Qgc2V0dGluZ3MgPSB7XG4gICAgICAgIGNsaWVudDogc2lnbmVkUmVxdWVzdC5jbGllbnQsXG4gICAgICAgIG1ldGhvZDogcGFyYW1zLm1ldGhvZCxcbiAgICAgICAgZGF0YTogcmVxdWVzdEJvZHksXG4gICAgfTtcbiAgICBjb25zdCBwYXJhbUhlYWRlcnMgPSBwYXJhbXMuaGVhZGVycztcbiAgICBpZiAocGFyYW1IZWFkZXJzKSB7XG4gICAgICAgIHNldHRpbmdzLmhlYWRlcnMgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBuYW1lIG9mIE9iamVjdC5rZXlzKHBhcmFtSGVhZGVycykpIHtcbiAgICAgICAgICAgIGlmIChuYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdjb250ZW50LXR5cGUnKSB7XG4gICAgICAgICAgICAgICAgc2V0dGluZ3MuY29udGVudFR5cGUgPSBwYXJhbUhlYWRlcnNbbmFtZV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZXR0aW5ncy5oZWFkZXJzW25hbWVdID0gcGFyYW1IZWFkZXJzW25hbWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIHNldHRpbmdzLnN1Y2Nlc3MgPSByZXNvbHZlO1xuICAgICAgICBzZXR0aW5ncy5mYWlsdXJlID0gcmVqZWN0O1xuICAgICAgICBTZmRjLmNhbnZhcy5jbGllbnQuYWpheChwYXJhbXMudXJsLCBzZXR0aW5ncyk7XG4gICAgfSk7XG4gICAgY29uc3QgaGVhZGVycyA9IHBhcnNlSGVhZGVycyhkYXRhLnJlc3BvbnNlSGVhZGVycyk7XG4gICAgbGV0IHJlc3BvbnNlQm9keSA9IGRhdGEucGF5bG9hZDtcbiAgICBpZiAodHlwZW9mIHJlc3BvbnNlQm9keSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmVzcG9uc2VCb2R5ID0gSlNPTi5zdHJpbmdpZnkocmVzcG9uc2VCb2R5KTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3RhdHVzQ29kZTogZGF0YS5zdGF0dXMsXG4gICAgICAgIGhlYWRlcnMsXG4gICAgICAgIGJvZHk6IHJlc3BvbnNlQm9keSxcbiAgICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlUmVxdWVzdChzaWduZWRSZXF1ZXN0KSB7XG4gICAgcmV0dXJuIChwYXJhbXMpID0+IHtcbiAgICAgICAgY29uc3QgYnVmID0gW107XG4gICAgICAgIGNvbnN0IHN0cmVhbSA9IG5ldyBzdHJlYW1fMS5UcmFuc2Zvcm0oe1xuICAgICAgICAgICAgdHJhbnNmb3JtKGNodW5rLCBlbmNvZGluZywgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICBidWYucHVzaCh0eXBlb2YgY2h1bmsgPT09ICdzdHJpbmcnID8gY2h1bmsgOiBjaHVuay50b1N0cmluZygndXRmOCcpKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZsdXNoKCkge1xuICAgICAgICAgICAgICAgIChhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGJvZHkgPSBidWYuam9pbignJyk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcHJvY2Vzc0NhbnZhc1JlcXVlc3QocGFyYW1zLCBzaWduZWRSZXF1ZXN0LCBib2R5KTtcbiAgICAgICAgICAgICAgICAgICAgc3RyZWFtLmVtaXQoJ3Jlc3BvbnNlJywgcmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgICAgICBzdHJlYW0uZW1pdCgnY29tcGxldGUnLCByZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgICAgIHN0cmVhbS5wdXNoKHJlc3BvbnNlLmJvZHkpO1xuICAgICAgICAgICAgICAgICAgICBzdHJlYW0ucHVzaChudWxsKTtcbiAgICAgICAgICAgICAgICB9KSgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChwYXJhbXMuYm9keSkge1xuICAgICAgICAgICAgc3RyZWFtLmVuZChwYXJhbXMuYm9keSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN0cmVhbTtcbiAgICB9O1xufVxuZXhwb3J0cy5kZWZhdWx0ID0ge1xuICAgIHN1cHBvcnRlZDogdHlwZW9mIFNmZGMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBTZmRjLmNhbnZhcyAhPT0gJ3VuZGVmaW5lZCcsXG4gICAgY3JlYXRlUmVxdWVzdCxcbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/browser/canvas.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/browser/client.js":
/*!****************************************************!*\
  !*** ./node_modules/jsforce/lib/browser/client.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BrowserClient = void 0;\n/**\n * @file Browser client connection management class\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst connection_1 = __importDefault(__webpack_require__(/*! ../connection */ \"(rsc)/./node_modules/jsforce/lib/connection.js\"));\nconst oauth2_1 = __importDefault(__webpack_require__(/*! ../oauth2 */ \"(rsc)/./node_modules/jsforce/lib/oauth2.js\"));\n/**\n * @private\n */\nfunction popupWin(url, w, h) {\n    const left = screen.width / 2 - w / 2;\n    const top = screen.height / 2 - h / 2;\n    return window.open(url, undefined, `location=yes,toolbar=no,status=no,menubar=no,width=${w},height=${h},top=${top},left=${left}`);\n}\n/**\n * @private\n */\nfunction handleCallbackResponse() {\n    const res = checkCallbackResponse();\n    const state = localStorage.getItem('jsforce_state');\n    if (res && state && res.body.get('state') === state) {\n        localStorage.removeItem('jsforce_state');\n        const [prefix, promptType] = state.split('.');\n        const cli = new BrowserClient(prefix);\n        if (res.success) {\n            cli._storeTokens(Object.fromEntries(res.body));\n            location.hash = '';\n        }\n        else {\n            cli._storeError(res.body);\n        }\n        if (promptType === 'popup') {\n            window.close();\n        }\n        return true;\n    }\n}\n/**\n * @private\n */\nfunction checkCallbackResponse() {\n    let params;\n    if (window.location.hash) {\n        params = new URLSearchParams(window.location.hash.substring(1));\n        if (params.get('access_token')) {\n            return { success: true, body: params };\n        }\n    }\n    else if (window.location.search) {\n        params = new URLSearchParams(window.location.search.substring(1));\n        if (params.get('error')) {\n            return { success: false, body: params };\n        }\n    }\n}\n/**\n *\n */\nconst DEFAULT_POPUP_WIN_WIDTH = 912;\nconst DEFAULT_POPUP_WIN_HEIGHT = 513;\n/** @private **/\nlet clientIdx = 0;\n/**\n *\n */\nclass BrowserClient extends events_1.EventEmitter {\n    _prefix;\n    _config;\n    _connection;\n    /**\n     *\n     */\n    constructor(prefix) {\n        super();\n        this._prefix = prefix || 'jsforce' + clientIdx++;\n    }\n    get connection() {\n        if (!this._connection) {\n            this._connection = new connection_1.default(this._config);\n        }\n        return this._connection;\n    }\n    /**\n     *\n     */\n    init(config) {\n        if (handleCallbackResponse()) {\n            return;\n        }\n        this._config = config;\n        const tokens = this._getTokens();\n        if (tokens) {\n            this.connection._establish(tokens);\n            setTimeout(() => {\n                this.emit('connect', this.connection);\n            }, 10);\n        }\n    }\n    /**\n     *\n     */\n    login(options = {}) {\n        const { scope, size } = options;\n        const oauth2 = new oauth2_1.default(this._config ?? {});\n        const rand = Math.random().toString(36).substring(2);\n        const state = [this._prefix, 'popup', rand].join('.');\n        localStorage.setItem('jsforce_state', state);\n        const authzUrl = oauth2.getAuthorizationUrl({\n            response_type: 'token',\n            state,\n            ...(scope ? { scope } : {}),\n        });\n        const pw = popupWin(authzUrl, size?.width ?? DEFAULT_POPUP_WIN_WIDTH, size?.height ?? DEFAULT_POPUP_WIN_HEIGHT);\n        return new Promise((resolve, reject) => {\n            if (!pw) {\n                const state = [this._prefix, 'redirect', rand].join('.');\n                localStorage.setItem('jsforce_state', state);\n                const authzUrl = oauth2.getAuthorizationUrl({\n                    response_type: 'token',\n                    state,\n                    ...(scope ? { scope } : {}),\n                });\n                location.href = authzUrl;\n                return;\n            }\n            this._removeTokens();\n            const pid = setInterval(() => {\n                try {\n                    if (!pw || pw.closed) {\n                        clearInterval(pid);\n                        const tokens = this._getTokens();\n                        if (tokens) {\n                            this.connection._establish(tokens);\n                            this.emit('connect', this.connection);\n                            resolve({ status: 'connect' });\n                        }\n                        else {\n                            const err = this._getError();\n                            if (err) {\n                                reject(new Error(err.error + ': ' + err.error_description));\n                            }\n                            else {\n                                resolve({ status: 'cancel' });\n                            }\n                        }\n                    }\n                }\n                catch (e) {\n                    //\n                }\n            }, 1000);\n        });\n    }\n    /**\n     *\n     */\n    isLoggedIn() {\n        return !!this.connection.accessToken;\n    }\n    /**\n     *\n     */\n    logout() {\n        this.connection.logout();\n        this._removeTokens();\n        this.emit('disconnect');\n    }\n    /**\n     * @private\n     */\n    _getTokens() {\n        const regexp = new RegExp('(^|;\\\\s*)' + this._prefix + '_loggedin=true(;|$)');\n        if (document.cookie.match(regexp)) {\n            const issuedAt = Number(localStorage.getItem(this._prefix + '_issued_at'));\n            // 2 hours\n            if (Date.now() < issuedAt + 2 * 60 * 60 * 1000) {\n                let userInfo;\n                const idUrl = localStorage.getItem(this._prefix + '_id');\n                if (idUrl) {\n                    const [id, organizationId] = idUrl.split('/').reverse();\n                    userInfo = { id, organizationId, url: idUrl };\n                }\n                return {\n                    accessToken: localStorage.getItem(this._prefix + '_access_token'),\n                    instanceUrl: localStorage.getItem(this._prefix + '_instance_url'),\n                    userInfo,\n                };\n            }\n        }\n        return null;\n    }\n    /**\n     * @private\n     */\n    _storeTokens(params) {\n        localStorage.setItem(this._prefix + '_access_token', params.access_token);\n        localStorage.setItem(this._prefix + '_instance_url', params.instance_url);\n        localStorage.setItem(this._prefix + '_issued_at', params.issued_at);\n        localStorage.setItem(this._prefix + '_id', params.id);\n        document.cookie = this._prefix + '_loggedin=true;';\n    }\n    /**\n     * @private\n     */\n    _removeTokens() {\n        localStorage.removeItem(this._prefix + '_access_token');\n        localStorage.removeItem(this._prefix + '_instance_url');\n        localStorage.removeItem(this._prefix + '_issued_at');\n        localStorage.removeItem(this._prefix + '_id');\n        document.cookie = this._prefix + '_loggedin=';\n    }\n    /**\n     * @private\n     */\n    _getError() {\n        try {\n            const err = JSON.parse(localStorage.getItem(this._prefix + '_error') ?? '');\n            localStorage.removeItem(this._prefix + '_error');\n            return err;\n        }\n        catch (e) {\n            //\n        }\n    }\n    /**\n     * @private\n     */\n    _storeError(err) {\n        localStorage.setItem(this._prefix + '_error', JSON.stringify(err));\n    }\n}\nexports.BrowserClient = BrowserClient;\n/**\n *\n */\nconst client = new BrowserClient();\nexports[\"default\"] = client;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/browser/client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/browser/jsonp.js":
/*!***************************************************!*\
  !*** ./node_modules/jsforce/lib/browser/jsonp.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n *\n */\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nlet _index = 0;\nasync function processJsonpRequest(params, jsonpParam, timeout) {\n    if (params.method.toUpperCase() !== 'GET') {\n        throw new Error('JSONP only supports GET request.');\n    }\n    _index += 1;\n    const cbFuncName = `_jsforce_jsonpCallback_${_index}`;\n    const callbacks = window;\n    let url = params.url;\n    url += url.indexOf('?') > 0 ? '&' : '?';\n    url += `${jsonpParam}=${cbFuncName}`;\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    if (document.documentElement) {\n        document.documentElement.appendChild(script);\n    }\n    let pid;\n    try {\n        const res = await new Promise((resolve, reject) => {\n            pid = setTimeout(() => {\n                reject(new Error('JSONP call time out.'));\n            }, timeout);\n            callbacks[cbFuncName] = resolve;\n        });\n        return {\n            statusCode: 200,\n            headers: { 'content-type': 'application/json' },\n            body: JSON.stringify(res),\n        };\n    }\n    finally {\n        clearTimeout(pid);\n        if (document.documentElement) {\n            document.documentElement.removeChild(script);\n        }\n        delete callbacks[cbFuncName];\n    }\n}\nfunction createRequest(jsonpParam = 'callback', timeout = 10000) {\n    return (params) => {\n        const stream = new stream_1.Transform({\n            transform(chunk, encoding, callback) {\n                callback();\n            },\n            flush() {\n                (async () => {\n                    const response = await processJsonpRequest(params, jsonpParam, timeout);\n                    stream.emit('response', response);\n                    stream.emit('complete', response);\n                    stream.push(response.body);\n                    stream.push(null);\n                })();\n            },\n        });\n        stream.end();\n        return stream;\n    };\n}\nexports[\"default\"] = {\n    supported: typeof window !== 'undefined' && typeof document !== 'undefined',\n    createRequest,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvYnJvd3Nlci9qc29ucC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsT0FBTztBQUN4RDtBQUNBO0FBQ0E7QUFDQSxjQUFjLFdBQVcsR0FBRyxXQUFXO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHVCQUF1QixvQ0FBb0M7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvYnJvd3Nlci9qc29ucC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qKlxuICpcbiAqL1xuY29uc3Qgc3RyZWFtXzEgPSByZXF1aXJlKFwic3RyZWFtXCIpO1xubGV0IF9pbmRleCA9IDA7XG5hc3luYyBmdW5jdGlvbiBwcm9jZXNzSnNvbnBSZXF1ZXN0KHBhcmFtcywganNvbnBQYXJhbSwgdGltZW91dCkge1xuICAgIGlmIChwYXJhbXMubWV0aG9kLnRvVXBwZXJDYXNlKCkgIT09ICdHRVQnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSlNPTlAgb25seSBzdXBwb3J0cyBHRVQgcmVxdWVzdC4nKTtcbiAgICB9XG4gICAgX2luZGV4ICs9IDE7XG4gICAgY29uc3QgY2JGdW5jTmFtZSA9IGBfanNmb3JjZV9qc29ucENhbGxiYWNrXyR7X2luZGV4fWA7XG4gICAgY29uc3QgY2FsbGJhY2tzID0gd2luZG93O1xuICAgIGxldCB1cmwgPSBwYXJhbXMudXJsO1xuICAgIHVybCArPSB1cmwuaW5kZXhPZignPycpID4gMCA/ICcmJyA6ICc/JztcbiAgICB1cmwgKz0gYCR7anNvbnBQYXJhbX09JHtjYkZ1bmNOYW1lfWA7XG4gICAgY29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4gICAgc2NyaXB0LnR5cGUgPSAndGV4dC9qYXZhc2NyaXB0JztcbiAgICBzY3JpcHQuc3JjID0gdXJsO1xuICAgIGlmIChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpIHtcbiAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmFwcGVuZENoaWxkKHNjcmlwdCk7XG4gICAgfVxuICAgIGxldCBwaWQ7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgcGlkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcignSlNPTlAgY2FsbCB0aW1lIG91dC4nKSk7XG4gICAgICAgICAgICB9LCB0aW1lb3V0KTtcbiAgICAgICAgICAgIGNhbGxiYWNrc1tjYkZ1bmNOYW1lXSA9IHJlc29sdmU7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3RhdHVzQ29kZTogMjAwLFxuICAgICAgICAgICAgaGVhZGVyczogeyAnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShyZXMpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHBpZCk7XG4gICAgICAgIGlmIChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5yZW1vdmVDaGlsZChzY3JpcHQpO1xuICAgICAgICB9XG4gICAgICAgIGRlbGV0ZSBjYWxsYmFja3NbY2JGdW5jTmFtZV07XG4gICAgfVxufVxuZnVuY3Rpb24gY3JlYXRlUmVxdWVzdChqc29ucFBhcmFtID0gJ2NhbGxiYWNrJywgdGltZW91dCA9IDEwMDAwKSB7XG4gICAgcmV0dXJuIChwYXJhbXMpID0+IHtcbiAgICAgICAgY29uc3Qgc3RyZWFtID0gbmV3IHN0cmVhbV8xLlRyYW5zZm9ybSh7XG4gICAgICAgICAgICB0cmFuc2Zvcm0oY2h1bmssIGVuY29kaW5nLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmx1c2goKSB7XG4gICAgICAgICAgICAgICAgKGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBwcm9jZXNzSnNvbnBSZXF1ZXN0KHBhcmFtcywganNvbnBQYXJhbSwgdGltZW91dCk7XG4gICAgICAgICAgICAgICAgICAgIHN0cmVhbS5lbWl0KCdyZXNwb25zZScsIHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICAgICAgc3RyZWFtLmVtaXQoJ2NvbXBsZXRlJywgcmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgICAgICBzdHJlYW0ucHVzaChyZXNwb25zZS5ib2R5KTtcbiAgICAgICAgICAgICAgICAgICAgc3RyZWFtLnB1c2gobnVsbCk7XG4gICAgICAgICAgICAgICAgfSkoKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBzdHJlYW0uZW5kKCk7XG4gICAgICAgIHJldHVybiBzdHJlYW07XG4gICAgfTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgICBzdXBwb3J0ZWQ6IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcsXG4gICAgY3JlYXRlUmVxdWVzdCxcbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/browser/jsonp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/cache.js":
/*!*******************************************!*\
  !*** ./node_modules/jsforce/lib/cache.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Cache = void 0;\n/**\n * @file Manages asynchronous method response cache\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\nconst events_1 = __webpack_require__(/*! events */ \"events\");\n/**\n * Class for managing cache entry\n *\n * @private\n * @class\n * @constructor\n * @template T\n */\nclass CacheEntry extends events_1.EventEmitter {\n    _fetching = false;\n    _value = undefined;\n    /**\n     * Get value in the cache entry\n     *\n     * @param {() => Promise<T>} [callback] - Callback function callbacked the cache entry updated\n     * @returns {T|undefined}\n     */\n    get(callback) {\n        if (callback) {\n            const cb = callback;\n            this.once('value', (v) => cb(v));\n            if (typeof this._value !== 'undefined') {\n                this.emit('value', this._value);\n            }\n        }\n        return this._value;\n    }\n    /**\n     * Set value in the cache entry\n     */\n    set(value) {\n        this._value = value;\n        this.emit('value', this._value);\n    }\n    /**\n     * Clear cached value\n     */\n    clear() {\n        this._fetching = false;\n        this._value = undefined;\n    }\n}\n/**\n * create and return cache key from namespace and serialized arguments.\n * @private\n */\nfunction createCacheKey(namespace, args) {\n    return `${namespace || ''}(${[...args]\n        .map((a) => JSON.stringify(a))\n        .join(',')})`;\n}\nfunction generateKeyString(options, scope, args) {\n    return typeof options.key === 'string'\n        ? options.key\n        : typeof options.key === 'function'\n            ? options.key.apply(scope, args)\n            : createCacheKey(options.namespace, args);\n}\n/**\n * Caching manager for async methods\n *\n * @class\n * @constructor\n */\nclass Cache {\n    _entries = {};\n    /**\n     * retrive cache entry, or create if not exists.\n     *\n     * @param {String} [key] - Key of cache entry\n     * @returns {CacheEntry}\n     */\n    get(key) {\n        if (this._entries[key]) {\n            return this._entries[key];\n        }\n        const entry = new CacheEntry();\n        this._entries[key] = entry;\n        return entry;\n    }\n    /**\n     * clear cache entries prefix matching given key\n     */\n    clear(key) {\n        for (const k of Object.keys(this._entries)) {\n            if (!key || k.startsWith(key)) {\n                this._entries[k].clear();\n            }\n        }\n    }\n    /**\n     * Enable caching for async call fn to lookup the response cache first,\n     * then invoke original if no cached value.\n     */\n    createCachedFunction(fn, scope, options = { strategy: 'NOCACHE' }) {\n        const strategy = options.strategy;\n        const $fn = (...args) => {\n            const key = generateKeyString(options, scope, args);\n            const entry = this.get(key);\n            const executeFetch = async () => {\n                entry._fetching = true;\n                try {\n                    const result = await fn.apply(scope || this, args);\n                    entry.set({ error: undefined, result });\n                    return result;\n                }\n                catch (error) {\n                    entry.set({ error: error, result: undefined });\n                    throw error;\n                }\n            };\n            let value;\n            switch (strategy) {\n                case 'IMMEDIATE':\n                    value = entry.get();\n                    if (!value) {\n                        throw new Error('Function call result is not cached yet.');\n                    }\n                    if (value.error) {\n                        throw value.error;\n                    }\n                    return value.result;\n                case 'HIT':\n                    return (async () => {\n                        if (!entry._fetching) {\n                            // only when no other client is calling function\n                            await executeFetch();\n                        }\n                        return new Promise((resolve, reject) => {\n                            entry.get(({ error, result }) => {\n                                if (error)\n                                    reject(error);\n                                else\n                                    resolve(result);\n                            });\n                        });\n                    })();\n                case 'NOCACHE':\n                default:\n                    return executeFetch();\n            }\n        };\n        $fn.clear = (...args) => {\n            const key = generateKeyString(options, scope, args);\n            this.clear(key);\n        };\n        return $fn;\n    }\n}\nexports.Cache = Cache;\nexports[\"default\"] = Cache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/cache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/connection.js":
/*!************************************************!*\
  !*** ./node_modules/jsforce/lib/connection.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Connection = void 0;\n/**\n *\n */\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst jsforce_1 = __importDefault(__webpack_require__(/*! ./jsforce */ \"(rsc)/./node_modules/jsforce/lib/jsforce.js\"));\nconst transport_1 = __importStar(__webpack_require__(/*! ./transport */ \"(rsc)/./node_modules/jsforce/lib/transport.js\"));\nconst logger_1 = __webpack_require__(/*! ./util/logger */ \"(rsc)/./node_modules/jsforce/lib/util/logger.js\");\nconst oauth2_1 = __importDefault(__webpack_require__(/*! ./oauth2 */ \"(rsc)/./node_modules/jsforce/lib/oauth2.js\"));\nconst cache_1 = __importDefault(__webpack_require__(/*! ./cache */ \"(rsc)/./node_modules/jsforce/lib/cache.js\"));\nconst http_api_1 = __importDefault(__webpack_require__(/*! ./http-api */ \"(rsc)/./node_modules/jsforce/lib/http-api.js\"));\nconst session_refresh_delegate_1 = __importDefault(__webpack_require__(/*! ./session-refresh-delegate */ \"(rsc)/./node_modules/jsforce/lib/session-refresh-delegate.js\"));\nconst query_1 = __importDefault(__webpack_require__(/*! ./query */ \"(rsc)/./node_modules/jsforce/lib/query.js\"));\nconst sobject_1 = __importDefault(__webpack_require__(/*! ./sobject */ \"(rsc)/./node_modules/jsforce/lib/sobject.js\"));\nconst quick_action_1 = __importDefault(__webpack_require__(/*! ./quick-action */ \"(rsc)/./node_modules/jsforce/lib/quick-action.js\"));\nconst process_1 = __importDefault(__webpack_require__(/*! ./process */ \"(rsc)/./node_modules/jsforce/lib/process.js\"));\nconst formatter_1 = __webpack_require__(/*! ./util/formatter */ \"(rsc)/./node_modules/jsforce/lib/util/formatter.js\");\nconst form_data_1 = __importDefault(__webpack_require__(/*! form-data */ \"(rsc)/./node_modules/form-data/lib/form_data.js\"));\n/**\n *\n */\nconst defaultConnectionConfig = {\n    loginUrl: 'https://login.salesforce.com',\n    instanceUrl: '',\n    version: '50.0',\n    logLevel: 'NONE',\n    maxRequest: 10,\n};\n/**\n *\n */\nfunction esc(str) {\n    return String(str || '')\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;');\n}\n/**\n *\n */\nfunction parseSignedRequest(sr) {\n    if (typeof sr === 'string') {\n        if (sr.startsWith('{')) {\n            // might be JSON\n            return JSON.parse(sr);\n        } // might be original base64-encoded signed request\n        const msg = sr.split('.').pop(); // retrieve latter part\n        if (!msg) {\n            throw new Error('Invalid signed request');\n        }\n        const json = Buffer.from(msg, 'base64').toString('utf-8');\n        return JSON.parse(json);\n    }\n    return sr;\n}\n/** @private **/\nfunction parseIdUrl(url) {\n    const [organizationId, id] = url.split('/').slice(-2);\n    return { id, organizationId, url };\n}\n/**\n * Session Refresh delegate function for OAuth2 authz code flow\n * @private\n */\nasync function oauthRefreshFn(conn, callback) {\n    try {\n        if (!conn.refreshToken) {\n            throw new Error('No refresh token found in the connection');\n        }\n        const res = await conn.oauth2.refreshToken(conn.refreshToken);\n        const userInfo = parseIdUrl(res.id);\n        conn._establish({\n            instanceUrl: res.instance_url,\n            accessToken: res.access_token,\n            userInfo,\n        });\n        callback(undefined, res.access_token, res);\n    }\n    catch (err) {\n        if (err instanceof Error) {\n            callback(err);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Session Refresh delegate function for username/password login\n * @private\n */\nfunction createUsernamePasswordRefreshFn(username, password) {\n    return async (conn, callback) => {\n        try {\n            await conn.login(username, password);\n            if (!conn.accessToken) {\n                throw new Error('Access token not found after login');\n            }\n            callback(null, conn.accessToken);\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                callback(err);\n            }\n            else {\n                throw err;\n            }\n        }\n    };\n}\n/**\n * @private\n */\nfunction toSaveResult(err) {\n    return {\n        success: false,\n        errors: [err],\n    };\n}\n/**\n *\n */\nfunction raiseNoModuleError(name) {\n    throw new Error(`API module '${name}' is not loaded, load 'jsforce/api/${name}' explicitly`);\n}\n/*\n * Constant of maximum records num in DML operation (update/delete)\n */\nconst MAX_DML_COUNT = 200;\n/**\n *\n */\nclass Connection extends events_1.EventEmitter {\n    static _logger = (0, logger_1.getLogger)('connection');\n    version;\n    loginUrl;\n    instanceUrl;\n    accessToken;\n    refreshToken;\n    userInfo;\n    limitInfo = {};\n    oauth2;\n    sobjects = {};\n    cache;\n    _callOptions;\n    _maxRequest;\n    _logger;\n    _logLevel;\n    _transport;\n    _sessionType;\n    _refreshDelegate;\n    // describe: (name: string) => Promise<DescribeSObjectResult>;\n    describe$;\n    describe$$;\n    describeSObject;\n    describeSObject$;\n    describeSObject$$;\n    // describeGlobal: () => Promise<DescribeGlobalResult>;\n    describeGlobal$;\n    describeGlobal$$;\n    // API libs are not instantiated here so that core module to remain without dependencies to them\n    // It is responsible for developers to import api libs explicitly if they are using 'jsforce/core' instead of 'jsforce'.\n    get analytics() {\n        return raiseNoModuleError('analytics');\n    }\n    get apex() {\n        return raiseNoModuleError('apex');\n    }\n    get bulk() {\n        return raiseNoModuleError('bulk');\n    }\n    get bulk2() {\n        return raiseNoModuleError('bulk2');\n    }\n    get chatter() {\n        return raiseNoModuleError('chatter');\n    }\n    get metadata() {\n        return raiseNoModuleError('metadata');\n    }\n    get soap() {\n        return raiseNoModuleError('soap');\n    }\n    get streaming() {\n        return raiseNoModuleError('streaming');\n    }\n    get tooling() {\n        return raiseNoModuleError('tooling');\n    }\n    /**\n     *\n     */\n    constructor(config = {}) {\n        super();\n        const { loginUrl, instanceUrl, version, oauth2, maxRequest, logLevel, proxyUrl, httpProxy, } = config;\n        this.loginUrl = loginUrl || defaultConnectionConfig.loginUrl;\n        this.instanceUrl = instanceUrl || defaultConnectionConfig.instanceUrl;\n        if (this.isLightningInstance()) {\n            throw new Error('lightning URLs are not valid as instance URLs');\n        }\n        this.version = version || defaultConnectionConfig.version;\n        this.oauth2 =\n            oauth2 instanceof oauth2_1.default\n                ? oauth2\n                : new oauth2_1.default({\n                    loginUrl: this.loginUrl,\n                    proxyUrl,\n                    httpProxy,\n                    ...oauth2,\n                });\n        let refreshFn = config.refreshFn;\n        if (!refreshFn && this.oauth2.clientId) {\n            refreshFn = oauthRefreshFn;\n        }\n        if (refreshFn) {\n            this._refreshDelegate = new session_refresh_delegate_1.default(this, refreshFn);\n        }\n        this._maxRequest = maxRequest || defaultConnectionConfig.maxRequest;\n        this._logger = logLevel\n            ? Connection._logger.createInstance(logLevel)\n            : Connection._logger;\n        this._logLevel = logLevel;\n        this._transport = proxyUrl\n            ? new transport_1.XdProxyTransport(proxyUrl)\n            : httpProxy\n                ? new transport_1.HttpProxyTransport(httpProxy)\n                : new transport_1.default();\n        this._callOptions = config.callOptions;\n        this.cache = new cache_1.default();\n        const describeCacheKey = (type) => type ? `describe.${type}` : 'describe';\n        const describe = Connection.prototype.describe;\n        this.describe = this.cache.createCachedFunction(describe, this, {\n            key: describeCacheKey,\n            strategy: 'NOCACHE',\n        });\n        this.describe$ = this.cache.createCachedFunction(describe, this, {\n            key: describeCacheKey,\n            strategy: 'HIT',\n        });\n        this.describe$$ = this.cache.createCachedFunction(describe, this, {\n            key: describeCacheKey,\n            strategy: 'IMMEDIATE',\n        });\n        this.describeSObject = this.describe;\n        this.describeSObject$ = this.describe$;\n        this.describeSObject$$ = this.describe$$;\n        const describeGlobal = Connection.prototype.describeGlobal;\n        this.describeGlobal = this.cache.createCachedFunction(describeGlobal, this, { key: 'describeGlobal', strategy: 'NOCACHE' });\n        this.describeGlobal$ = this.cache.createCachedFunction(describeGlobal, this, { key: 'describeGlobal', strategy: 'HIT' });\n        this.describeGlobal$$ = this.cache.createCachedFunction(describeGlobal, this, { key: 'describeGlobal', strategy: 'IMMEDIATE' });\n        const { accessToken, refreshToken, sessionId, serverUrl, signedRequest, } = config;\n        this._establish({\n            accessToken,\n            refreshToken,\n            instanceUrl,\n            sessionId,\n            serverUrl,\n            signedRequest,\n        });\n        jsforce_1.default.emit('connection:new', this);\n    }\n    /* @private */\n    _establish(options) {\n        const { accessToken, refreshToken, instanceUrl, sessionId, serverUrl, signedRequest, userInfo, } = options;\n        this.instanceUrl = serverUrl\n            ? serverUrl.split('/').slice(0, 3).join('/')\n            : instanceUrl || this.instanceUrl;\n        this.accessToken = sessionId || accessToken || this.accessToken;\n        this.refreshToken = refreshToken || this.refreshToken;\n        if (this.refreshToken && !this._refreshDelegate) {\n            throw new Error('Refresh token is specified without oauth2 client information or refresh function');\n        }\n        const signedRequestObject = signedRequest && parseSignedRequest(signedRequest);\n        if (signedRequestObject) {\n            this.accessToken = signedRequestObject.client.oauthToken;\n            if (transport_1.CanvasTransport.supported) {\n                this._transport = new transport_1.CanvasTransport(signedRequestObject);\n            }\n        }\n        this.userInfo = userInfo || this.userInfo;\n        this._sessionType = sessionId ? 'soap' : 'oauth2';\n        this._resetInstance();\n    }\n    /* @priveate */\n    _clearSession() {\n        this.accessToken = null;\n        this.refreshToken = null;\n        this.instanceUrl = defaultConnectionConfig.instanceUrl;\n        this.userInfo = null;\n        this._sessionType = null;\n    }\n    /* @priveate */\n    _resetInstance() {\n        this.limitInfo = {};\n        this.sobjects = {};\n        // TODO impl cache\n        this.cache.clear();\n        this.cache.get('describeGlobal').removeAllListeners('value');\n        this.cache.get('describeGlobal').on('value', ({ result }) => {\n            if (result) {\n                for (const so of result.sobjects) {\n                    this.sobject(so.name);\n                }\n            }\n        });\n        /*\n        if (this.tooling) {\n          this.tooling._resetInstance();\n        }\n        */\n    }\n    /**\n     * Authorize the connection using OAuth2 flow.\n     * Typically, just pass the code returned from authorization server in the first argument to complete authorization.\n     * If you want to authorize with grant types other than `authorization_code`, you can also pass params object with the grant type.\n     *\n     * @returns {Promise<UserInfo>} An object that contains the user ID, org ID and identity URL.\n     *\n     */\n    async authorize(codeOrParams, params = {}) {\n        const res = await this.oauth2.requestToken(codeOrParams, params);\n        const userInfo = parseIdUrl(res.id);\n        this._establish({\n            instanceUrl: res.instance_url,\n            accessToken: res.access_token,\n            refreshToken: res.refresh_token,\n            userInfo,\n        });\n        this._logger.debug(`<login> completed. user id = ${userInfo.id}, org id = ${userInfo.organizationId}`);\n        return userInfo;\n    }\n    /**\n     *\n     */\n    async login(username, password) {\n        this._refreshDelegate = new session_refresh_delegate_1.default(this, createUsernamePasswordRefreshFn(username, password));\n        if (this.oauth2?.clientId && this.oauth2.clientSecret) {\n            return this.loginByOAuth2(username, password);\n        }\n        return this.loginBySoap(username, password);\n    }\n    /**\n     * Login by OAuth2 username & password flow\n     */\n    async loginByOAuth2(username, password) {\n        const res = await this.oauth2.authenticate(username, password);\n        const userInfo = parseIdUrl(res.id);\n        this._establish({\n            instanceUrl: res.instance_url,\n            accessToken: res.access_token,\n            userInfo,\n        });\n        this._logger.info(`<login> completed. user id = ${userInfo.id}, org id = ${userInfo.organizationId}`);\n        return userInfo;\n    }\n    /**\n     * Login by SOAP protocol\n     * @deprecated The SOAP login() API will be retired in Summer '27 (API version 65.0).\n     * Please use OAuth 2.0 Username-Password Flow instead.\n     * For more information, see https://help.salesforce.com/s/articleView?id=release-notes.rn_api_upcoming_retirement_258rn.htm&release=258&type=5\n     */\n    async loginBySoap(username, password) {\n        this._logger.warn('DEPRECATION WARNING: The SOAP login() API will be retired in Summer \\'27 (API version 65.0). ' +\n            'Please use OAuth 2.0 Username-Password Flow instead. ' +\n            'For more information, see https://help.salesforce.com/s/articleView?id=release-notes.rn_api_upcoming_retirement_258rn.htm&release=258&type=5');\n        if (!username || !password) {\n            return Promise.reject(new Error('no username password given'));\n        }\n        const body = [\n            '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\n            '<se:Header/>',\n            '<se:Body>',\n            '<login xmlns=\"urn:partner.soap.sforce.com\">',\n            `<username>${esc(username)}</username>`,\n            `<password>${esc(password)}</password>`,\n            '</login>',\n            '</se:Body>',\n            '</se:Envelope>',\n        ].join('');\n        const soapLoginEndpoint = [\n            this.loginUrl,\n            'services/Soap/u',\n            this.version,\n        ].join('/');\n        const response = await this._transport.httpRequest({\n            method: 'POST',\n            url: soapLoginEndpoint,\n            body,\n            headers: {\n                'Content-Type': 'text/xml',\n                SOAPAction: '\"\"',\n            },\n        });\n        let m;\n        if (response.statusCode >= 400) {\n            m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\n            const faultstring = m && m[1];\n            throw new Error(faultstring || response.body);\n        }\n        // the API will return 200 and a restriced token when using an expired password:\n        // https://developer.salesforce.com/docs/atlas.en-us.api.meta/api/sforce_api_calls_login_loginresult.htm\n        //\n        // we need to throw here to avoid a possible infinite loop with session refresh where:\n        //  1. login happens, `this.accessToken` is set to the restricted token\n        //  2. requests happen, get back 401\n        //  3. trigger session-refresh (username/password login has a default session refresh delegate function)\n        //  4. gets stuck refreshing a restricted token\n        if (response.body.match(/<passwordExpired>true<\\/passwordExpired>/g)) {\n            throw new Error('Unable to login because the used password has expired.');\n        }\n        this._logger.debug(`SOAP response = ${response.body}`);\n        m = response.body.match(/<serverUrl>([^<]+)<\\/serverUrl>/);\n        const serverUrl = m && m[1];\n        m = response.body.match(/<sessionId>([^<]+)<\\/sessionId>/);\n        const sessionId = m && m[1];\n        m = response.body.match(/<userId>([^<]+)<\\/userId>/);\n        const userId = m && m[1];\n        m = response.body.match(/<organizationId>([^<]+)<\\/organizationId>/);\n        const organizationId = m && m[1];\n        if (!serverUrl || !sessionId || !userId || !organizationId) {\n            throw new Error('could not extract session information from login response');\n        }\n        const idUrl = [this.loginUrl, 'id', organizationId, userId].join('/');\n        const userInfo = { id: userId, organizationId, url: idUrl };\n        this._establish({\n            serverUrl: serverUrl.split('/').slice(0, 3).join('/'),\n            sessionId,\n            userInfo,\n        });\n        this._logger.info(`<login> completed. user id = ${userId}, org id = ${organizationId}`);\n        return userInfo;\n    }\n    /**\n     * Logout the current session\n     */\n    async logout(revoke) {\n        this._refreshDelegate = undefined;\n        if (this._sessionType === 'oauth2') {\n            return this.logoutByOAuth2(revoke);\n        }\n        return this.logoutBySoap(revoke);\n    }\n    /**\n     * Logout the current session by revoking access token via OAuth2 session revoke\n     */\n    async logoutByOAuth2(revoke) {\n        const token = revoke ? this.refreshToken : this.accessToken;\n        if (token) {\n            await this.oauth2.revokeToken(token);\n        }\n        // Destroy the session bound to this connection\n        this._clearSession();\n        this._resetInstance();\n    }\n    /**\n     * Logout the session by using SOAP web service API\n     */\n    async logoutBySoap(revoke) {\n        const body = [\n            '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\n            '<se:Header>',\n            '<SessionHeader xmlns=\"urn:partner.soap.sforce.com\">',\n            `<sessionId>${esc(revoke ? this.refreshToken : this.accessToken)}</sessionId>`,\n            '</SessionHeader>',\n            '</se:Header>',\n            '<se:Body>',\n            '<logout xmlns=\"urn:partner.soap.sforce.com\"/>',\n            '</se:Body>',\n            '</se:Envelope>',\n        ].join('');\n        const response = await this._transport.httpRequest({\n            method: 'POST',\n            url: [this.instanceUrl, 'services/Soap/u', this.version].join('/'),\n            body,\n            headers: {\n                'Content-Type': 'text/xml',\n                SOAPAction: '\"\"',\n            },\n        });\n        this._logger.debug(`SOAP statusCode = ${response.statusCode}, response = ${response.body}`);\n        if (response.statusCode >= 400) {\n            const m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\n            const faultstring = m && m[1];\n            throw new Error(faultstring || response.body);\n        }\n        // Destroy the session bound to this connection\n        this._clearSession();\n        this._resetInstance();\n    }\n    /**\n     * Send REST API request with given HTTP request info, with connected session information.\n     *\n     * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n     * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n     * , or relative path from version root ('/sobjects/Account/describe').\n     */\n    request(request, options = {}) {\n        // if request is simple string, regard it as url in GET method\n        let request_ = typeof request === 'string' ? { method: 'GET', url: request } : request;\n        // if url is given in relative path, prepend base url or instance url before.\n        request_ = {\n            ...request_,\n            url: this._normalizeUrl(request_.url),\n        };\n        const httpApi = new http_api_1.default(this, options);\n        // log api usage and its quota\n        httpApi.on('response', (response) => {\n            if (response.headers && response.headers['sforce-limit-info']) {\n                const apiUsage = response.headers['sforce-limit-info'].match(/api-usage=(\\d+)\\/(\\d+)/);\n                if (apiUsage) {\n                    this.limitInfo = {\n                        apiUsage: {\n                            used: parseInt(apiUsage[1], 10),\n                            limit: parseInt(apiUsage[2], 10),\n                        },\n                    };\n                }\n            }\n        });\n        return httpApi.request(request_);\n    }\n    /**\n     * Send HTTP GET request\n     *\n     * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n     * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n     * , or relative path from version root ('/sobjects/Account/describe').\n     */\n    requestGet(url, options) {\n        const request = { method: 'GET', url };\n        return this.request(request, options);\n    }\n    /**\n     * Send HTTP POST request with JSON body, with connected session information\n     *\n     * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n     * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n     * , or relative path from version root ('/sobjects/Account/describe').\n     */\n    requestPost(url, body, options) {\n        const request = {\n            method: 'POST',\n            url,\n            body: JSON.stringify(body),\n            headers: { 'content-type': 'application/json' },\n        };\n        return this.request(request, options);\n    }\n    /**\n     * Send HTTP PUT request with JSON body, with connected session information\n     *\n     * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n     * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n     * , or relative path from version root ('/sobjects/Account/describe').\n     */\n    requestPut(url, body, options) {\n        const request = {\n            method: 'PUT',\n            url,\n            body: JSON.stringify(body),\n            headers: { 'content-type': 'application/json' },\n        };\n        return this.request(request, options);\n    }\n    /**\n     * Send HTTP PATCH request with JSON body\n     *\n     * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n     * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n     * , or relative path from version root ('/sobjects/Account/describe').\n     */\n    requestPatch(url, body, options) {\n        const request = {\n            method: 'PATCH',\n            url,\n            body: JSON.stringify(body),\n            headers: { 'content-type': 'application/json' },\n        };\n        return this.request(request, options);\n    }\n    /**\n     * Send HTTP DELETE request\n     *\n     * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n     * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n     * , or relative path from version root ('/sobjects/Account/describe').\n     */\n    requestDelete(url, options) {\n        const request = { method: 'DELETE', url };\n        return this.request(request, options);\n    }\n    /** @private **/\n    _baseUrl() {\n        return [this.instanceUrl, 'services/data', `v${this.version}`].join('/');\n    }\n    /**\n     * Convert path to absolute url\n     * @private\n     */\n    _normalizeUrl(url) {\n        if (url.startsWith('/')) {\n            if (url.startsWith(this.instanceUrl + '/services/')) {\n                return url;\n            }\n            if (url.startsWith('/services/')) {\n                return this.instanceUrl + url;\n            }\n            return this._baseUrl() + url;\n        }\n        return url;\n    }\n    /**\n     *\n     */\n    query(soql, options) {\n        return new query_1.default(this, soql, options);\n    }\n    /**\n     * Execute search by SOSL\n     *\n     * @param {String} sosl - SOSL string\n     * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n     * @returns {Promise.<Array.<RecordResult>>}\n     */\n    search(sosl) {\n        const url = this._baseUrl() + '/search?q=' + encodeURIComponent(sosl);\n        return this.request(url);\n    }\n    /**\n     *\n     */\n    queryMore(locator, options) {\n        return new query_1.default(this, { locator }, options);\n    }\n    /* */\n    _ensureVersion(majorVersion) {\n        const versions = this.version.split('.');\n        return parseInt(versions[0], 10) >= majorVersion;\n    }\n    /* */\n    _supports(feature) {\n        switch (feature) {\n            case 'sobject-collection': // sobject collection is available only in API ver 42.0+\n                return this._ensureVersion(42);\n            default:\n                return false;\n        }\n    }\n    async retrieve(type, ids, options = {}) {\n        return Array.isArray(ids)\n            ? // check the version whether SObject collection API is supported (42.0)\n                this._ensureVersion(42)\n                    ? this._retrieveMany(type, ids, options)\n                    : this._retrieveParallel(type, ids, options)\n            : this._retrieveSingle(type, ids, options);\n    }\n    /** @private */\n    async _retrieveSingle(type, id, options) {\n        if (!id) {\n            throw new Error('Invalid record ID. Specify valid record ID value');\n        }\n        let url = [this._baseUrl(), 'sobjects', type, id].join('/');\n        const { fields, headers } = options;\n        if (fields) {\n            url += `?fields=${fields.join(',')}`;\n        }\n        return this.request({ method: 'GET', url, headers });\n    }\n    /** @private */\n    async _retrieveParallel(type, ids, options) {\n        if (ids.length > this._maxRequest) {\n            throw new Error('Exceeded max limit of concurrent call');\n        }\n        return Promise.all(ids.map((id) => this._retrieveSingle(type, id, options).catch((err) => {\n            if (options.allOrNone || err.errorCode !== 'NOT_FOUND') {\n                throw err;\n            }\n            return null;\n        })));\n    }\n    /** @private */\n    async _retrieveMany(type, ids, options) {\n        if (ids.length === 0) {\n            return [];\n        }\n        const url = [this._baseUrl(), 'composite', 'sobjects', type].join('/');\n        const fields = options.fields ||\n            (await this.describe$(type)).fields.map((field) => field.name);\n        return this.request({\n            method: 'POST',\n            url,\n            body: JSON.stringify({ ids, fields }),\n            headers: {\n                ...(options.headers || {}),\n                'content-type': 'application/json',\n            },\n        });\n    }\n    /**\n     * @param type\n     * @param records\n     * @param options\n     */\n    async create(type, records, options = {}) {\n        const ret = Array.isArray(records)\n            ? // check the version whether SObject collection API is supported (42.0)\n                this._ensureVersion(42)\n                    ? await this._createMany(type, records, options)\n                    : await this._createParallel(type, records, options)\n            : await this._createSingle(type, records, options);\n        return ret;\n    }\n    /** @private */\n    async _createSingle(type, record, options) {\n        const { Id, type: rtype, attributes, ...rec } = record;\n        const sobjectType = type || attributes?.type || rtype;\n        if (!sobjectType) {\n            throw new Error('No SObject Type defined in record');\n        }\n        const url = [this._baseUrl(), 'sobjects', sobjectType].join('/');\n        let contentType, body;\n        if (options?.multipartFileFields) {\n            // Send the record as a multipart/form-data request. Useful for fields containing large binary blobs.\n            const form = new form_data_1.default();\n            // Extract the fields requested to be sent separately from the JSON\n            Object.entries(options.multipartFileFields).forEach(([fieldName, fileDetails]) => {\n                form.append(fieldName, Buffer.from(rec[fieldName], 'base64'), fileDetails);\n                delete rec[fieldName];\n            });\n            // Serialize the remaining fields as JSON\n            form.append(type, JSON.stringify(rec), {\n                contentType: 'application/json',\n            });\n            contentType = form.getHeaders()['content-type']; // This is necessary to ensure the 'boundary' is present\n            body = form;\n        }\n        else {\n            // Default behavior: send the request as JSON\n            contentType = 'application/json';\n            body = JSON.stringify(rec);\n        }\n        return this.request({\n            method: 'POST',\n            url,\n            body: body,\n            headers: {\n                ...(options.headers || {}),\n                'content-type': contentType,\n            },\n        });\n    }\n    /** @private */\n    async _createParallel(type, records, options) {\n        if (records.length > this._maxRequest) {\n            throw new Error('Exceeded max limit of concurrent call');\n        }\n        return Promise.all(records.map((record) => this._createSingle(type, record, options).catch((err) => {\n            // be aware that allOrNone in parallel mode will not revert the other successful requests\n            // it only raises error when met at least one failed request.\n            if (options.allOrNone || !err.errorCode) {\n                throw err;\n            }\n            return toSaveResult(err);\n        })));\n    }\n    /** @private */\n    async _createMany(type, records, options) {\n        if (records.length === 0) {\n            return Promise.resolve([]);\n        }\n        if (records.length > MAX_DML_COUNT && options.allowRecursive) {\n            return [\n                ...(await this._createMany(type, records.slice(0, MAX_DML_COUNT), options)),\n                ...(await this._createMany(type, records.slice(MAX_DML_COUNT), options)),\n            ];\n        }\n        const _records = records.map((record) => {\n            const { Id, type: rtype, attributes, ...rec } = record;\n            const sobjectType = type || attributes?.type || rtype;\n            if (!sobjectType) {\n                throw new Error('No SObject Type defined in record');\n            }\n            return { attributes: { type: sobjectType }, ...rec };\n        });\n        const url = [this._baseUrl(), 'composite', 'sobjects'].join('/');\n        return this.request({\n            method: 'POST',\n            url,\n            body: JSON.stringify({\n                allOrNone: options.allOrNone || false,\n                records: _records,\n            }),\n            headers: {\n                ...(options.headers || {}),\n                'content-type': 'application/json',\n            },\n        });\n    }\n    /**\n     * Synonym of Connection#create()\n     */\n    insert = this.create;\n    /**\n     * @param type\n     * @param records\n     * @param options\n     */\n    update(type, records, options = {}) {\n        return Array.isArray(records)\n            ? // check the version whether SObject collection API is supported (42.0)\n                this._ensureVersion(42)\n                    ? this._updateMany(type, records, options)\n                    : this._updateParallel(type, records, options)\n            : this._updateSingle(type, records, options);\n    }\n    /** @private */\n    async _updateSingle(type, record, options) {\n        const { Id: id, type: rtype, attributes, ...rec } = record;\n        if (!id) {\n            throw new Error('Record id is not found in record.');\n        }\n        const sobjectType = type || attributes?.type || rtype;\n        if (!sobjectType) {\n            throw new Error('No SObject Type defined in record');\n        }\n        const url = [this._baseUrl(), 'sobjects', sobjectType, id].join('/');\n        return this.request({\n            method: 'PATCH',\n            url,\n            body: JSON.stringify(rec),\n            headers: {\n                ...(options.headers || {}),\n                'content-type': 'application/json',\n            },\n        }, {\n            noContentResponse: { id, success: true, errors: [] },\n        });\n    }\n    /** @private */\n    async _updateParallel(type, records, options) {\n        if (records.length > this._maxRequest) {\n            throw new Error('Exceeded max limit of concurrent call');\n        }\n        return Promise.all(records.map((record) => this._updateSingle(type, record, options).catch((err) => {\n            // be aware that allOrNone in parallel mode will not revert the other successful requests\n            // it only raises error when met at least one failed request.\n            if (options.allOrNone || !err.errorCode) {\n                throw err;\n            }\n            return toSaveResult(err);\n        })));\n    }\n    /** @private */\n    async _updateMany(type, records, options) {\n        if (records.length === 0) {\n            return [];\n        }\n        if (records.length > MAX_DML_COUNT && options.allowRecursive) {\n            return [\n                ...(await this._updateMany(type, records.slice(0, MAX_DML_COUNT), options)),\n                ...(await this._updateMany(type, records.slice(MAX_DML_COUNT), options)),\n            ];\n        }\n        const _records = records.map((record) => {\n            const { Id: id, type: rtype, attributes, ...rec } = record;\n            if (!id) {\n                throw new Error('Record id is not found in record.');\n            }\n            const sobjectType = type || attributes?.type || rtype;\n            if (!sobjectType) {\n                throw new Error('No SObject Type defined in record');\n            }\n            return { id, attributes: { type: sobjectType }, ...rec };\n        });\n        const url = [this._baseUrl(), 'composite', 'sobjects'].join('/');\n        return this.request({\n            method: 'PATCH',\n            url,\n            body: JSON.stringify({\n                allOrNone: options.allOrNone || false,\n                records: _records,\n            }),\n            headers: {\n                ...(options.headers || {}),\n                'content-type': 'application/json',\n            },\n        });\n    }\n    /**\n     *\n     * @param type\n     * @param records\n     * @param extIdField\n     * @param options\n     */\n    async upsert(type, records, extIdField, options = {}) {\n        return Array.isArray(records)\n            ? // check the version whether SObject collection API is supported (46.0)\n                this._ensureVersion(46)\n                    ? this._upsertMany(type, records, extIdField, options)\n                    : this._upsertParallel(type, records, extIdField, options)\n            : this._upsertParallel(type, records, extIdField, options);\n    }\n    /** @private */\n    async _upsertMany(type, records, extIdField, options = {}) {\n        if (records.length === 0) {\n            return [];\n        }\n        if (records.length > MAX_DML_COUNT && options.allowRecursive) {\n            return [\n                ...(await this._upsertMany(type, records.slice(0, MAX_DML_COUNT), extIdField, options)),\n                ...(await this._upsertMany(type, records.slice(MAX_DML_COUNT), extIdField, options)),\n            ];\n        }\n        const _records = records.map((recordItem) => {\n            const { [extIdField]: extId, type: recordType, attributes, ...rec } = recordItem;\n            const sobjectType = recordType || attributes?.type || type;\n            if (!extId) {\n                throw new Error('External ID is not found in record.');\n            }\n            if (!sobjectType) {\n                throw new Error('No SObject Type defined in record');\n            }\n            return { [extIdField]: extId, attributes: { type: sobjectType }, ...rec };\n        });\n        const url = [this._baseUrl(), 'composite', 'sobjects', type, extIdField].join('/');\n        return this.request({\n            method: 'PATCH',\n            url,\n            body: JSON.stringify({\n                allOrNone: options.allOrNone || false,\n                records: _records,\n            }),\n            headers: {\n                ...(options.headers || {}),\n                'content-type': 'application/json',\n            }\n        });\n    }\n    /** @private */\n    async _upsertParallel(type, records, extIdField, options = {}) {\n        const isArray = Array.isArray(records);\n        const _records = Array.isArray(records) ? records : [records];\n        if (_records.length > this._maxRequest) {\n            throw new Error('Exceeded max limit of concurrent call');\n        }\n        const results = await Promise.all(_records.map((record) => {\n            const { [extIdField]: extId, type: rtype, attributes, ...rec } = record;\n            const url = [this._baseUrl(), 'sobjects', type, extIdField, extId].join('/');\n            return this.request({\n                method: 'PATCH',\n                url,\n                body: JSON.stringify(rec),\n                headers: {\n                    ...(options.headers || {}),\n                    'content-type': 'application/json',\n                },\n            }, {\n                noContentResponse: { success: true, errors: [] },\n            }).catch((err) => {\n                // Be aware that `allOrNone` option in upsert method\n                // will not revert the other successful requests.\n                // It only raises error when met at least one failed request.\n                if (!isArray || options.allOrNone || !err.errorCode) {\n                    throw err;\n                }\n                return toSaveResult(err);\n            });\n        }));\n        return isArray ? results : results[0];\n    }\n    /**\n     * @param type\n     * @param ids\n     * @param options\n     */\n    async destroy(type, ids, options = {}) {\n        return Array.isArray(ids)\n            ? // check the version whether SObject collection API is supported (42.0)\n                this._ensureVersion(42)\n                    ? this._destroyMany(type, ids, options)\n                    : this._destroyParallel(type, ids, options)\n            : this._destroySingle(type, ids, options);\n    }\n    /** @private */\n    async _destroySingle(type, id, options) {\n        const url = [this._baseUrl(), 'sobjects', type, id].join('/');\n        return this.request({\n            method: 'DELETE',\n            url,\n            headers: options.headers || {},\n        }, {\n            noContentResponse: { id, success: true, errors: [] },\n        });\n    }\n    /** @private */\n    async _destroyParallel(type, ids, options) {\n        if (ids.length > this._maxRequest) {\n            throw new Error('Exceeded max limit of concurrent call');\n        }\n        return Promise.all(ids.map((id) => this._destroySingle(type, id, options).catch((err) => {\n            // Be aware that `allOrNone` option in parallel mode\n            // will not revert the other successful requests.\n            // It only raises error when met at least one failed request.\n            if (options.allOrNone || !err.errorCode) {\n                throw err;\n            }\n            return toSaveResult(err);\n        })));\n    }\n    /** @private */\n    async _destroyMany(type, ids, options) {\n        if (ids.length === 0) {\n            return [];\n        }\n        if (ids.length > MAX_DML_COUNT && options.allowRecursive) {\n            return [\n                ...(await this._destroyMany(type, ids.slice(0, MAX_DML_COUNT), options)),\n                ...(await this._destroyMany(type, ids.slice(MAX_DML_COUNT), options)),\n            ];\n        }\n        let url = [this._baseUrl(), 'composite', 'sobjects?ids='].join('/') + ids.join(',');\n        if (options.allOrNone) {\n            url += '&allOrNone=true';\n        }\n        return this.request({\n            method: 'DELETE',\n            url,\n            headers: options.headers || {},\n        });\n    }\n    /**\n     * Synonym of Connection#destroy()\n     */\n    delete = this.destroy;\n    /**\n     * Synonym of Connection#destroy()\n     */\n    del = this.destroy;\n    /**\n     * Describe SObject metadata\n     */\n    async describe(type) {\n        const url = [this._baseUrl(), 'sobjects', type, 'describe'].join('/');\n        const body = await this.request(url);\n        return body;\n    }\n    /**\n     * Describe global SObjects\n     */\n    async describeGlobal() {\n        const url = `${this._baseUrl()}/sobjects`;\n        const body = await this.request(url);\n        return body;\n    }\n    sobject(type) {\n        const so = this.sobjects[type] || new sobject_1.default(this, type);\n        this.sobjects[type] = so;\n        return so;\n    }\n    /**\n     * Get identity information of current user\n     */\n    async identity(options = {}) {\n        let url = this.userInfo?.url;\n        if (!url) {\n            const res = await this.request({\n                method: 'GET',\n                url: this._baseUrl(),\n                headers: options.headers,\n            });\n            url = res.identity;\n        }\n        url += '?format=json';\n        if (this.accessToken) {\n            url += `&oauth_token=${encodeURIComponent(this.accessToken)}`;\n        }\n        const res = await this.request({ method: 'GET', url });\n        this.userInfo = {\n            id: res.user_id,\n            organizationId: res.organization_id,\n            url: res.id,\n        };\n        return res;\n    }\n    /**\n     * List recently viewed records\n     */\n    async recent(type, limit) {\n        /* eslint-disable no-param-reassign */\n        if (typeof type === 'number') {\n            limit = type;\n            type = undefined;\n        }\n        let url;\n        if (type) {\n            url = [this._baseUrl(), 'sobjects', type].join('/');\n            const { recentItems } = await this.request(url);\n            return limit ? recentItems.slice(0, limit) : recentItems;\n        }\n        url = `${this._baseUrl()}/recent`;\n        if (limit) {\n            url += `?limit=${limit}`;\n        }\n        return this.request(url);\n    }\n    /**\n     * Retrieve updated records\n     */\n    async updated(type, start, end) {\n        /* eslint-disable no-param-reassign */\n        let url = [this._baseUrl(), 'sobjects', type, 'updated'].join('/');\n        if (typeof start === 'string') {\n            start = new Date(start);\n        }\n        start = (0, formatter_1.formatDate)(start);\n        url += `?start=${encodeURIComponent(start)}`;\n        if (typeof end === 'string') {\n            end = new Date(end);\n        }\n        end = (0, formatter_1.formatDate)(end);\n        url += `&end=${encodeURIComponent(end)}`;\n        const body = await this.request(url);\n        return body;\n    }\n    /**\n     * Retrieve deleted records\n     */\n    async deleted(type, start, end) {\n        /* eslint-disable no-param-reassign */\n        let url = [this._baseUrl(), 'sobjects', type, 'deleted'].join('/');\n        if (typeof start === 'string') {\n            start = new Date(start);\n        }\n        start = (0, formatter_1.formatDate)(start);\n        url += `?start=${encodeURIComponent(start)}`;\n        if (typeof end === 'string') {\n            end = new Date(end);\n        }\n        end = (0, formatter_1.formatDate)(end);\n        url += `&end=${encodeURIComponent(end)}`;\n        const body = await this.request(url);\n        return body;\n    }\n    /**\n     * Returns a list of all tabs\n     */\n    async tabs() {\n        const url = [this._baseUrl(), 'tabs'].join('/');\n        const body = await this.request(url);\n        return body;\n    }\n    /**\n     * Returns current system limit in the organization\n     */\n    async limits() {\n        const url = [this._baseUrl(), 'limits'].join('/');\n        const body = await this.request(url);\n        return body;\n    }\n    /**\n     * Returns a theme info\n     */\n    async theme() {\n        const url = [this._baseUrl(), 'theme'].join('/');\n        const body = await this.request(url);\n        return body;\n    }\n    /**\n     * Returns all registered global quick actions\n     */\n    async quickActions() {\n        const body = await this.request('/quickActions');\n        return body;\n    }\n    /**\n     * Get reference for specified global quick action\n     */\n    quickAction(actionName) {\n        return new quick_action_1.default(this, `/quickActions/${actionName}`);\n    }\n    /**\n     * Module which manages process rules and approval processes\n     */\n    process = new process_1.default(this);\n    isLightningInstance() {\n        return (this.instanceUrl.includes('.lightning.force.com') ||\n            this.instanceUrl.includes('.lightning.crmforce.mil') ||\n            this.instanceUrl.includes('.lightning.sfcrmapps.cn'));\n    }\n}\nexports.Connection = Connection;\nexports[\"default\"] = Connection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/connection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/core.js":
/*!******************************************!*\
  !*** ./node_modules/jsforce/lib/core.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.browser = exports.registry = exports.RecordStream = exports.RecordReference = exports.BrowserClient = exports.SfDate = exports.Date = exports.VERSION = void 0;\nconst jsforce_1 = __importDefault(__webpack_require__(/*! ./jsforce */ \"(rsc)/./node_modules/jsforce/lib/jsforce.js\"));\nconst date_1 = __importDefault(__webpack_require__(/*! ./date */ \"(rsc)/./node_modules/jsforce/lib/date.js\"));\nexports.Date = date_1.default;\nexports.SfDate = date_1.default;\nconst registry_1 = __importDefault(__webpack_require__(/*! ./registry */ \"(rsc)/./node_modules/jsforce/lib/registry/index.js\"));\nexports.registry = registry_1.default;\nconst client_1 = __importStar(__webpack_require__(/*! ./browser/client */ \"(rsc)/./node_modules/jsforce/lib/browser/client.js\"));\nexports.browser = client_1.default;\nObject.defineProperty(exports, \"BrowserClient\", ({ enumerable: true, get: function () { return client_1.BrowserClient; } }));\nconst VERSION_1 = __importDefault(__webpack_require__(/*! ./VERSION */ \"(rsc)/./node_modules/jsforce/lib/VERSION.js\"));\nexports.VERSION = VERSION_1.default;\nconst record_reference_1 = __importDefault(__webpack_require__(/*! ./record-reference */ \"(rsc)/./node_modules/jsforce/lib/record-reference.js\"));\nexports.RecordReference = record_reference_1.default;\nconst record_stream_1 = __importDefault(__webpack_require__(/*! ./record-stream */ \"(rsc)/./node_modules/jsforce/lib/record-stream.js\"));\nexports.RecordStream = record_stream_1.default;\n__exportStar(__webpack_require__(/*! ./oauth2 */ \"(rsc)/./node_modules/jsforce/lib/oauth2.js\"), exports);\n__exportStar(__webpack_require__(/*! ./connection */ \"(rsc)/./node_modules/jsforce/lib/connection.js\"), exports);\n__exportStar(__webpack_require__(/*! ./query */ \"(rsc)/./node_modules/jsforce/lib/query.js\"), exports);\n__exportStar(__webpack_require__(/*! ./quick-action */ \"(rsc)/./node_modules/jsforce/lib/quick-action.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sobject */ \"(rsc)/./node_modules/jsforce/lib/sobject.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(rsc)/./node_modules/jsforce/lib/types/index.js\"), exports);\nexports[\"default\"] = jsforce_1.default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvY29yZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlLEdBQUcsZ0JBQWdCLEdBQUcsb0JBQW9CLEdBQUcsdUJBQXVCLEdBQUcscUJBQXFCLEdBQUcsY0FBYyxHQUFHLFlBQVksR0FBRyxlQUFlO0FBQzdKLGtDQUFrQyxtQkFBTyxDQUFDLDhEQUFXO0FBQ3JELCtCQUErQixtQkFBTyxDQUFDLHdEQUFRO0FBQy9DLFlBQVk7QUFDWixjQUFjO0FBQ2QsbUNBQW1DLG1CQUFPLENBQUMsc0VBQVk7QUFDdkQsZ0JBQWdCO0FBQ2hCLDhCQUE4QixtQkFBTyxDQUFDLDRFQUFrQjtBQUN4RCxlQUFlO0FBQ2YsaURBQWdELEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDO0FBQzFILGtDQUFrQyxtQkFBTyxDQUFDLDhEQUFXO0FBQ3JELGVBQWU7QUFDZiwyQ0FBMkMsbUJBQU8sQ0FBQyxnRkFBb0I7QUFDdkUsdUJBQXVCO0FBQ3ZCLHdDQUF3QyxtQkFBTyxDQUFDLDBFQUFpQjtBQUNqRSxvQkFBb0I7QUFDcEIsYUFBYSxtQkFBTyxDQUFDLDREQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxvRUFBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMsMERBQVM7QUFDOUIsYUFBYSxtQkFBTyxDQUFDLHdFQUFnQjtBQUNyQyxhQUFhLG1CQUFPLENBQUMsOERBQVc7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLGdFQUFTO0FBQzlCLGtCQUFlIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvY29yZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYnJvd3NlciA9IGV4cG9ydHMucmVnaXN0cnkgPSBleHBvcnRzLlJlY29yZFN0cmVhbSA9IGV4cG9ydHMuUmVjb3JkUmVmZXJlbmNlID0gZXhwb3J0cy5Ccm93c2VyQ2xpZW50ID0gZXhwb3J0cy5TZkRhdGUgPSBleHBvcnRzLkRhdGUgPSBleHBvcnRzLlZFUlNJT04gPSB2b2lkIDA7XG5jb25zdCBqc2ZvcmNlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vanNmb3JjZVwiKSk7XG5jb25zdCBkYXRlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vZGF0ZVwiKSk7XG5leHBvcnRzLkRhdGUgPSBkYXRlXzEuZGVmYXVsdDtcbmV4cG9ydHMuU2ZEYXRlID0gZGF0ZV8xLmRlZmF1bHQ7XG5jb25zdCByZWdpc3RyeV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3JlZ2lzdHJ5XCIpKTtcbmV4cG9ydHMucmVnaXN0cnkgPSByZWdpc3RyeV8xLmRlZmF1bHQ7XG5jb25zdCBjbGllbnRfMSA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9icm93c2VyL2NsaWVudFwiKSk7XG5leHBvcnRzLmJyb3dzZXIgPSBjbGllbnRfMS5kZWZhdWx0O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQnJvd3NlckNsaWVudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY2xpZW50XzEuQnJvd3NlckNsaWVudDsgfSB9KTtcbmNvbnN0IFZFUlNJT05fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9WRVJTSU9OXCIpKTtcbmV4cG9ydHMuVkVSU0lPTiA9IFZFUlNJT05fMS5kZWZhdWx0O1xuY29uc3QgcmVjb3JkX3JlZmVyZW5jZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3JlY29yZC1yZWZlcmVuY2VcIikpO1xuZXhwb3J0cy5SZWNvcmRSZWZlcmVuY2UgPSByZWNvcmRfcmVmZXJlbmNlXzEuZGVmYXVsdDtcbmNvbnN0IHJlY29yZF9zdHJlYW1fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9yZWNvcmQtc3RyZWFtXCIpKTtcbmV4cG9ydHMuUmVjb3JkU3RyZWFtID0gcmVjb3JkX3N0cmVhbV8xLmRlZmF1bHQ7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vb2F1dGgyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25uZWN0aW9uXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9xdWVyeVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcXVpY2stYWN0aW9uXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zb2JqZWN0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG5leHBvcnRzLmRlZmF1bHQgPSBqc2ZvcmNlXzEuZGVmYXVsdDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/core.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/csv.js":
/*!*****************************************!*\
  !*** ./node_modules/jsforce/lib/csv.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.serializeCSVStream = exports.parseCSVStream = exports.toCSV = exports.parseCSV = void 0;\nconst csv_parse_1 = __webpack_require__(/*! csv-parse */ \"(rsc)/./node_modules/csv-parse/dist/cjs/index.cjs\");\nconst sync_1 = __webpack_require__(/*! csv-parse/sync */ \"(rsc)/./node_modules/csv-parse/dist/cjs/sync.cjs\");\nconst csv_stringify_1 = __webpack_require__(/*! csv-stringify */ \"(rsc)/./node_modules/csv-stringify/dist/cjs/index.cjs\");\nconst sync_2 = __webpack_require__(/*! csv-stringify/sync */ \"(rsc)/./node_modules/csv-stringify/dist/cjs/sync.cjs\");\n// The following column delimiters are supported by the Bulk V2 API:\n// https://developer.salesforce.com/docs/atlas.en-us.api_asynch.meta/api_asynch/create_job.htm\n//\n// BACKQUOTE, CARET, COMMA, PIPE, SEMICOLON, TAB\nconst csvDelimiters = ['`', '^', ',', '|', ';', '\t'];\n/**\n * @private\n */\nfunction parseCSV(str, options) {\n    return (0, sync_1.parse)(str, { ...options, columns: true, delimiter: csvDelimiters });\n}\nexports.parseCSV = parseCSV;\n/**\n * @private\n */\nfunction toCSV(records, options) {\n    return (0, sync_2.stringify)(records, { ...options, header: true });\n}\nexports.toCSV = toCSV;\n/**\n * @private\n */\nfunction parseCSVStream(options) {\n    return new csv_parse_1.Parser({ ...options, columns: true });\n}\nexports.parseCSVStream = parseCSVStream;\n/**\n * @private\n */\nfunction serializeCSVStream(options) {\n    return (0, csv_stringify_1.stringify)({ ...options, header: true });\n}\nexports.serializeCSVStream = serializeCSVStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvY3N2LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixHQUFHLHNCQUFzQixHQUFHLGFBQWEsR0FBRyxnQkFBZ0I7QUFDdEYsb0JBQW9CLG1CQUFPLENBQUMsb0VBQVc7QUFDdkMsZUFBZSxtQkFBTyxDQUFDLHdFQUFnQjtBQUN2Qyx3QkFBd0IsbUJBQU8sQ0FBQyw0RUFBZTtBQUMvQyxlQUFlLG1CQUFPLENBQUMsZ0ZBQW9CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLHFEQUFxRDtBQUN6RjtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QywwQkFBMEI7QUFDdEU7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsMkJBQTJCO0FBQy9EO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLDBCQUEwQjtBQUN0RTtBQUNBLDBCQUEwQiIsInNvdXJjZXMiOlsiL1VzZXJzL25lem9iZW5hcmRpL0FJX3N0dWZmL09uYm9hcmRpbmdQb3J0YWwvbm9kZV9tb2R1bGVzL2pzZm9yY2UvbGliL2Nzdi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2VyaWFsaXplQ1NWU3RyZWFtID0gZXhwb3J0cy5wYXJzZUNTVlN0cmVhbSA9IGV4cG9ydHMudG9DU1YgPSBleHBvcnRzLnBhcnNlQ1NWID0gdm9pZCAwO1xuY29uc3QgY3N2X3BhcnNlXzEgPSByZXF1aXJlKFwiY3N2LXBhcnNlXCIpO1xuY29uc3Qgc3luY18xID0gcmVxdWlyZShcImNzdi1wYXJzZS9zeW5jXCIpO1xuY29uc3QgY3N2X3N0cmluZ2lmeV8xID0gcmVxdWlyZShcImNzdi1zdHJpbmdpZnlcIik7XG5jb25zdCBzeW5jXzIgPSByZXF1aXJlKFwiY3N2LXN0cmluZ2lmeS9zeW5jXCIpO1xuLy8gVGhlIGZvbGxvd2luZyBjb2x1bW4gZGVsaW1pdGVycyBhcmUgc3VwcG9ydGVkIGJ5IHRoZSBCdWxrIFYyIEFQSTpcbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLnNhbGVzZm9yY2UuY29tL2RvY3MvYXRsYXMuZW4tdXMuYXBpX2FzeW5jaC5tZXRhL2FwaV9hc3luY2gvY3JlYXRlX2pvYi5odG1cbi8vXG4vLyBCQUNLUVVPVEUsIENBUkVULCBDT01NQSwgUElQRSwgU0VNSUNPTE9OLCBUQUJcbmNvbnN0IGNzdkRlbGltaXRlcnMgPSBbJ2AnLCAnXicsICcsJywgJ3wnLCAnOycsICdcdCddO1xuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBwYXJzZUNTVihzdHIsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gKDAsIHN5bmNfMS5wYXJzZSkoc3RyLCB7IC4uLm9wdGlvbnMsIGNvbHVtbnM6IHRydWUsIGRlbGltaXRlcjogY3N2RGVsaW1pdGVycyB9KTtcbn1cbmV4cG9ydHMucGFyc2VDU1YgPSBwYXJzZUNTVjtcbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gdG9DU1YocmVjb3Jkcywgb3B0aW9ucykge1xuICAgIHJldHVybiAoMCwgc3luY18yLnN0cmluZ2lmeSkocmVjb3JkcywgeyAuLi5vcHRpb25zLCBoZWFkZXI6IHRydWUgfSk7XG59XG5leHBvcnRzLnRvQ1NWID0gdG9DU1Y7XG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHBhcnNlQ1NWU3RyZWFtKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmV3IGNzdl9wYXJzZV8xLlBhcnNlcih7IC4uLm9wdGlvbnMsIGNvbHVtbnM6IHRydWUgfSk7XG59XG5leHBvcnRzLnBhcnNlQ1NWU3RyZWFtID0gcGFyc2VDU1ZTdHJlYW07XG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIHNlcmlhbGl6ZUNTVlN0cmVhbShvcHRpb25zKSB7XG4gICAgcmV0dXJuICgwLCBjc3Zfc3RyaW5naWZ5XzEuc3RyaW5naWZ5KSh7IC4uLm9wdGlvbnMsIGhlYWRlcjogdHJ1ZSB9KTtcbn1cbmV4cG9ydHMuc2VyaWFsaXplQ1NWU3RyZWFtID0gc2VyaWFsaXplQ1NWU3RyZWFtO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/csv.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/date.js":
/*!******************************************!*\
  !*** ./node_modules/jsforce/lib/date.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SfDate = void 0;\n/**\n *\n */\nconst formatter_1 = __webpack_require__(/*! ./util/formatter */ \"(rsc)/./node_modules/jsforce/lib/util/formatter.js\");\n/** @private **/\nfunction createLiteralBuilder(literal) {\n    return (num) => new SfDate(`${literal}:${String(num)}`); // eslint-disable-line no-use-before-define\n}\n/**\n * A date object to keep Salesforce date literal\n *\n * @class\n * @constructor\n * @see http://www.salesforce.com/us/developer/docs/soql_sosl/Content/sforce_api_calls_soql_select_dateformats.htm\n */\nclass SfDate {\n    _literal;\n    /**\n     *\n     */\n    constructor(literal) {\n        this._literal = literal;\n    }\n    /**\n     * Returns literal when converted to string\n     */\n    toJSON() {\n        return this._literal;\n    }\n    toString = this.toJSON;\n    /**\n     * Convert JavaScript date object to ISO8601 Date format (e.g. 2012-10-31)\n     *\n     * @param {String|Number|Date} date - Input date\n     * @returns {SfDate} - Salesforce date literal with ISO8601 date format\n     */\n    static toDateLiteral(date) {\n        let _date;\n        if (typeof date === 'number') {\n            _date = new Date(date);\n        }\n        else if (typeof date === 'string') {\n            _date = SfDate.parseDate(date);\n        }\n        else {\n            _date = date;\n        }\n        const yy = _date.getFullYear();\n        const mm = _date.getMonth() + 1;\n        const dd = _date.getDate();\n        const dstr = [yy, (0, formatter_1.zeroPad)(mm), (0, formatter_1.zeroPad)(dd)].join('-');\n        return new SfDate(dstr);\n    }\n    /**\n     * Convert JavaScript date object to ISO8601 DateTime format\n     * (e.g. 2012-10-31T12:34:56Z)\n     */\n    static toDateTimeLiteral(date) {\n        let _date;\n        if (typeof date === 'number') {\n            _date = new Date(date);\n        }\n        else if (typeof date === 'string') {\n            _date = SfDate.parseDate(date);\n        }\n        else {\n            _date = date;\n        }\n        const yy = _date.getUTCFullYear();\n        const mm = _date.getUTCMonth() + 1;\n        const dd = _date.getUTCDate();\n        const hh = _date.getUTCHours();\n        const mi = _date.getUTCMinutes();\n        const ss = _date.getUTCSeconds();\n        const dtstr = `${[yy, (0, formatter_1.zeroPad)(mm), (0, formatter_1.zeroPad)(dd)].join('-')}T${[\n            (0, formatter_1.zeroPad)(hh),\n            (0, formatter_1.zeroPad)(mi),\n            (0, formatter_1.zeroPad)(ss),\n        ].join(':')}Z`;\n        return new SfDate(dtstr);\n    }\n    /**\n     * Convert JavaScript date object to ISO8601 time format\n     * (e.g. 12:34:56.789Z)\n     */\n    static toTimeLiteral(time) {\n        let _date = new Date(0);\n        if (typeof time === 'string') {\n            _date = SfDate.parseTime(time);\n        }\n        else if (typeof time === 'number') {\n            _date = new Date(time);\n        }\n        else {\n            _date = time;\n        }\n        const hh = _date.getUTCHours();\n        const mi = _date.getUTCMinutes();\n        const ss = _date.getUTCSeconds();\n        const sss = _date.getUTCMilliseconds();\n        const tstr = `${(0, formatter_1.zeroPad)(hh)}:${(0, formatter_1.zeroPad)(mi)}:${(0, formatter_1.zeroPad)(ss)}.${(0, formatter_1.zeroPad)(sss, 3)}Z`;\n        return new SfDate(tstr);\n    }\n    /**\n     * Parse IS08601 date(time) formatted string and return date instance\n     */\n    static parseDate(str) {\n        let d = new Date();\n        const regexp = /^([\\d]{4})-?([\\d]{2})-?([\\d]{2})(T([\\d]{2}):?([\\d]{2}):?([\\d]{2})(.([\\d]{3}))?(Z|([+-])([\\d]{2}):?([\\d]{2})))?$/;\n        const m = str.match(regexp);\n        if (m) {\n            d = new Date(0);\n            if (!m[4]) {\n                d.setFullYear(parseInt(m[1], 10));\n                d.setDate(parseInt(m[3], 10));\n                d.setMonth(parseInt(m[2], 10) - 1);\n                d.setHours(0);\n                d.setMinutes(0);\n                d.setSeconds(0);\n                d.setMilliseconds(0);\n            }\n            else {\n                d.setUTCFullYear(parseInt(m[1], 10));\n                d.setUTCDate(parseInt(m[3], 10));\n                d.setUTCMonth(parseInt(m[2], 10) - 1);\n                d.setUTCHours(parseInt(m[5], 10));\n                d.setUTCMinutes(parseInt(m[6], 10));\n                d.setUTCSeconds(parseInt(m[7], 10));\n                d.setUTCMilliseconds(parseInt(m[9] || '0', 10));\n                if (m[10] && m[10] !== 'Z') {\n                    const offset = parseInt(m[12], 10) * 60 + parseInt(m[13], 10);\n                    d.setTime((m[11] === '+' ? -1 : 1) * offset * 60 * 1000 + d.getTime());\n                }\n            }\n            return d;\n        }\n        throw new Error(`Invalid date format is specified : ${str}`);\n    }\n    /**\n     * Parse IS08601 time formatted string and convert to parse string\n     */\n    static parseTime(str) {\n        const regexp = /^([\\d]{2}):?([\\d]{2}):?([\\d]{2})(.([\\d]{3}))?Z?$/;\n        const m = str.match(regexp);\n        if (m) {\n            const d = new Date(0);\n            const hh = parseInt(m[1], 10);\n            const mi = parseInt(m[2], 10);\n            const ss = parseInt(m[3], 10);\n            const sss = parseInt(m[5] || '0', 10);\n            d.setUTCHours(hh);\n            d.setUTCMinutes(mi);\n            d.setUTCSeconds(ss);\n            d.setUTCMilliseconds(sss);\n            return d;\n        }\n        throw new Error(`Invalid time format is specified : ${str}`);\n    }\n    static YESTERDAY = new SfDate('YESTERDAY');\n    static TODAY = new SfDate('TODAY');\n    static TOMORROW = new SfDate('TOMORROW');\n    static LAST_WEEK = new SfDate('LAST_WEEK');\n    static THIS_WEEK = new SfDate('THIS_WEEK');\n    static NEXT_WEEK = new SfDate('NEXT_WEEK');\n    static LAST_MONTH = new SfDate('LAST_MONTH');\n    static THIS_MONTH = new SfDate('THIS_MONTH');\n    static NEXT_MONTH = new SfDate('NEXT_MONTH');\n    static LAST_90_DAYS = new SfDate('LAST_90_DAYS');\n    static NEXT_90_DAYS = new SfDate('NEXT_90_DAYS');\n    static LAST_N_DAYS = createLiteralBuilder('LAST_N_DAYS');\n    static NEXT_N_DAYS = createLiteralBuilder('NEXT_N_DAYS');\n    static NEXT_N_WEEKS = createLiteralBuilder('NEXT_N_WEEKS');\n    static LAST_N_WEEKS = createLiteralBuilder('LAST_N_WEEKS');\n    static NEXT_N_MONTHS = createLiteralBuilder('NEXT_N_MONTHS');\n    static LAST_N_MONTHS = createLiteralBuilder('LAST_N_MONTHS');\n    static THIS_QUARTER = new SfDate('THIS_QUARTER');\n    static LAST_QUARTER = new SfDate('LAST_QUARTER');\n    static NEXT_QUARTER = new SfDate('NEXT_QUARTER');\n    static NEXT_N_QUARTERS = createLiteralBuilder('NEXT_N_QUARTERS');\n    static LAST_N_QUARTERS = createLiteralBuilder('LAST_N_QUARTERS');\n    static THIS_YEAR = new SfDate('THIS_YEAR');\n    static LAST_YEAR = new SfDate('LAST_YEAR');\n    static NEXT_YEAR = new SfDate('NEXT_YEAR');\n    static NEXT_N_YEARS = createLiteralBuilder('NEXT_N_YEARS');\n    static LAST_N_YEARS = createLiteralBuilder('LAST_N_YEARS');\n    static THIS_FISCAL_QUARTER = new SfDate('THIS_FISCAL_QUARTER');\n    static LAST_FISCAL_QUARTER = new SfDate('LAST_FISCAL_QUARTER');\n    static NEXT_FISCAL_QUARTER = new SfDate('NEXT_FISCAL_QUARTER');\n    static THIS_FISCAL_YEAR = new SfDate('THIS_FISCAL_YEAR');\n    static NEXT_N_FISCAL_QUARTERS = createLiteralBuilder('NEXT_N_FISCAL_QUARTERS');\n    static LAST_N_FISCAL_QUARTERS = createLiteralBuilder('LAST_N_FISCAL_QUARTERS');\n    static LAST_FISCAL_YEAR = new SfDate('LAST_FISCAL_YEAR');\n    static NEXT_FISCAL_YEAR = new SfDate('NEXT_FISCAL_YEAR');\n    static NEXT_N_FISCAL_YEARS = createLiteralBuilder('NEXT_N_FISCAL_YEARS');\n    static LAST_N_FISCAL_YEARS = createLiteralBuilder('LAST_N_FISCAL_YEARS');\n}\nexports.SfDate = SfDate;\nexports[\"default\"] = SfDate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/date.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/http-api.js":
/*!**********************************************!*\
  !*** ./node_modules/jsforce/lib/http-api.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isBrowser = exports.HttpApi = void 0;\n/**\n *\n */\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst xml2js_1 = __importDefault(__webpack_require__(/*! xml2js */ \"(rsc)/./node_modules/xml2js/lib/xml2js.js\"));\nconst logger_1 = __webpack_require__(/*! ./util/logger */ \"(rsc)/./node_modules/jsforce/lib/util/logger.js\");\nconst promise_1 = __webpack_require__(/*! ./util/promise */ \"(rsc)/./node_modules/jsforce/lib/util/promise.js\");\nconst csv_1 = __webpack_require__(/*! ./csv */ \"(rsc)/./node_modules/jsforce/lib/csv.js\");\nconst stream_1 = __webpack_require__(/*! ./util/stream */ \"(rsc)/./node_modules/jsforce/lib/util/stream.js\");\nconst get_body_size_1 = __webpack_require__(/*! ./util/get-body-size */ \"(rsc)/./node_modules/jsforce/lib/util/get-body-size.js\");\n/** @private */\nfunction parseJSON(str) {\n    return JSON.parse(str);\n}\n/** @private */\nasync function parseXML(str) {\n    return xml2js_1.default.parseStringPromise(str, { explicitArray: false });\n}\n/** @private */\nfunction parseText(str) {\n    return str;\n}\n/**\n * HTTP based API class with authorization hook\n */\nclass HttpApi extends events_1.EventEmitter {\n    static _logger = (0, logger_1.getLogger)('http-api');\n    _conn;\n    _logger;\n    _transport;\n    _responseType;\n    _noContentResponse;\n    _options;\n    constructor(conn, options) {\n        super();\n        this._conn = conn;\n        this._logger = conn._logLevel\n            ? HttpApi._logger.createInstance(conn._logLevel)\n            : HttpApi._logger;\n        this._responseType = options.responseType;\n        this._transport = options.transport || conn._transport;\n        this._noContentResponse = options.noContentResponse;\n        this._options = options;\n    }\n    /**\n     * Callout to API endpoint using http\n     */\n    request(request) {\n        return promise_1.StreamPromise.create(() => {\n            const { stream, setStream } = (0, stream_1.createLazyStream)();\n            const promise = (async () => {\n                const refreshDelegate = this.getRefreshDelegate();\n                /* TODO decide remove or not this section */\n                /*\n                // remember previous instance url in case it changes after a refresh\n                const lastInstanceUrl = conn.instanceUrl;\n        \n                // check to see if the token refresh has changed the instance url\n                if(lastInstanceUrl !== conn.instanceUrl){\n                  // if the instance url has changed\n                  // then replace the current request urls instance url fragment\n                  // with the updated instance url\n                  request.url = request.url.replace(lastInstanceUrl,conn.instanceUrl);\n                }\n                */\n                if (refreshDelegate && refreshDelegate.isRefreshing()) {\n                    await refreshDelegate.waitRefresh();\n                    const bodyPromise = this.request(request);\n                    setStream(bodyPromise.stream());\n                    const body = await bodyPromise;\n                    return body;\n                }\n                // hook before sending\n                this.beforeSend(request);\n                this.emit('request', request);\n                this._logger.debug(`<request> method=${request.method}, url=${request.url}`);\n                const requestTime = Date.now();\n                const requestPromise = this._transport.httpRequest(request, this._options);\n                setStream(requestPromise.stream());\n                let response;\n                try {\n                    response = await requestPromise;\n                }\n                catch (err) {\n                    this._logger.error(err);\n                    throw err;\n                }\n                finally {\n                    const responseTime = Date.now();\n                    this._logger.debug(`elapsed time: ${responseTime - requestTime} msec`);\n                }\n                if (!response) {\n                    return;\n                }\n                this._logger.debug(`<response> status=${String(response.statusCode)}, url=${request.url}`);\n                this.emit('response', response);\n                // Refresh token if session has been expired and requires authentication\n                // when session refresh delegate is available\n                if (this.isSessionExpired(response) && refreshDelegate) {\n                    await refreshDelegate.refresh(requestTime);\n                    /* remove the `content-length` header after token refresh\n                     *\n                     * SOAP requests include the access token their the body,\n                     * if the first req had an invalid token and jsforce successfully\n                     * refreshed it we need to remove the `content-length` header\n                     * so that it get's re-calculated again with the new body.\n                     *\n                     * REST request aren't affected by this because the access token\n                     * is sent via HTTP headers\n                     *\n                     * `_message` is only present in SOAP requests\n                     */\n                    if ('_message' in request &&\n                        request.headers &&\n                        'content-length' in request.headers) {\n                        delete request.headers['content-length'];\n                    }\n                    return this.request(request);\n                }\n                if (this.isErrorResponse(response)) {\n                    const err = await this.getError(response);\n                    throw err;\n                }\n                const body = await this.getResponseBody(response);\n                return body;\n            })();\n            return { stream, promise };\n        });\n    }\n    /**\n     * @protected\n     */\n    getRefreshDelegate() {\n        return this._conn._refreshDelegate;\n    }\n    /**\n     * @protected\n     */\n    beforeSend(request) {\n        /* eslint-disable no-param-reassign */\n        const headers = request.headers || {};\n        if (this._conn.accessToken) {\n            headers.Authorization = `Bearer ${this._conn.accessToken}`;\n        }\n        if (this._conn._callOptions) {\n            const callOptions = [];\n            for (const name of Object.keys(this._conn._callOptions)) {\n                callOptions.push(`${name}=${this._conn._callOptions[name]}`);\n            }\n            headers['Sforce-Call-Options'] = callOptions.join(', ');\n        }\n        const bodySize = (0, get_body_size_1.getBodySize)(request.body, headers);\n        const cannotHaveBody = ['GET', 'HEAD', 'OPTIONS'].includes(request.method);\n        // Don't set content-length in browsers as it's not allowed\n        const isBrowser = 'window' in globalThis || 'self' in globalThis;\n        if (!isBrowser && // Don't set content-length in browsers as it's not allowed\n            !cannotHaveBody &&\n            !!request.body &&\n            !('transfer-encoding' in headers) &&\n            !('content-length' in headers) &&\n            !!bodySize) {\n            this._logger.debug(`missing 'content-length' header, setting it to: ${bodySize}`);\n            headers['content-length'] = String(bodySize);\n        }\n        request.headers = headers;\n    }\n    /**\n     * Detect response content mime-type\n     * @protected\n     */\n    getResponseContentType(response) {\n        return (this._responseType ||\n            (response.headers && response.headers['content-type']));\n    }\n    /**\n     * @private\n     */\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async parseResponseBody(response) {\n        const contentType = this.getResponseContentType(response) || '';\n        const parseBody = /^(text|application)\\/xml(;|$)/.test(contentType)\n            ? parseXML\n            : /^application\\/json(;|$)/.test(contentType)\n                ? parseJSON\n                : /^text\\/csv(;|$)/.test(contentType)\n                    ? csv_1.parseCSV\n                    : parseText;\n        try {\n            return parseBody(response.body);\n        }\n        catch (e) {\n            // TODO(next major): we could throw a new \"invalid response body\" error instead.\n            this._logger.debug(`Failed to parse body of content-type: ${contentType}. Error: ${e.message}`);\n            return response.body;\n        }\n    }\n    /**\n     * Get response body\n     * @protected\n     */\n    async getResponseBody(response) {\n        if (response.statusCode === 204) {\n            // No Content\n            return this._noContentResponse;\n        }\n        const body = await this.parseResponseBody(response);\n        let err;\n        if (this.hasErrorInResponseBody(body)) {\n            err = await this.getError(response, body);\n            throw err;\n        }\n        if (response.statusCode === 300) {\n            // Multiple Choices\n            throw new HttpApiError('Multiple records found', 'MULTIPLE_CHOICES', body);\n        }\n        return body;\n    }\n    /**\n     * Detect session expiry\n     * @protected\n     */\n    isSessionExpired(response) {\n        // TODO:\n        // The connected app msg only applies to Agent API requests, we should move this to a separate SFAP/Agent API class later.\n        return (response.statusCode === 401 &&\n            !response.body.includes('Connected app is not attached to Agent'));\n    }\n    /**\n     * Detect error response\n     * @protected\n     */\n    isErrorResponse(response) {\n        return response.statusCode >= 400;\n    }\n    /**\n     * Detect error in response body\n     * @protected\n     */\n    hasErrorInResponseBody(_body) {\n        return false;\n    }\n    /**\n     * Parsing error message in response\n     * @protected\n     */\n    parseError(body) {\n        const errors = body;\n        // XML response\n        if (errors.Errors) {\n            return errors.Errors.Error;\n        }\n        return errors;\n    }\n    /**\n     * Get error message in response\n     * @protected\n     */\n    async getError(response, body) {\n        let error;\n        try {\n            error = this.parseError(body || (await this.parseResponseBody(response)));\n        }\n        catch (e) {\n            // eslint-disable no-empty\n        }\n        if (Array.isArray(error)) {\n            if (error.length === 1) {\n                error = error[0];\n            }\n            else {\n                return new HttpApiError(`Multiple errors returned.\n  Check \\`error.data\\` for the error details`, 'MULTIPLE_API_ERRORS', error);\n            }\n        }\n        error =\n            typeof error === 'object' &&\n                error !== null &&\n                typeof error.message === 'string'\n                ? error\n                : {\n                    errorCode: `ERROR_HTTP_${response.statusCode}`,\n                    message: response.body,\n                };\n        if (response.headers['content-type'] === 'text/html') {\n            this._logger.debug(`html response.body: ${response.body}`);\n            return new HttpApiError(`HTTP response contains html content.\nCheck that the org exists and can be reached.\nSee \\`error.data\\` for the full html response.`, error.errorCode, error.message);\n        }\n        return error instanceof HttpApiError\n            ? error\n            : new HttpApiError(error.message, error.errorCode, error);\n    }\n}\nexports.HttpApi = HttpApi;\n/**\n *\n */\nclass HttpApiError extends Error {\n    /**\n     * This contains error-specific details, usually returned from the API.\n     */\n    data;\n    errorCode;\n    constructor(message, errorCode, data) {\n        super(message);\n        this.name = errorCode || this.name;\n        this.errorCode = this.name;\n        this.data = data;\n    }\n    /**\n     * This will be removed in the next major (v4)\n     *\n     * @deprecated use `error.data` instead\n     */\n    get content() {\n        return this.data;\n    }\n}\nexports[\"default\"] = HttpApi;\nexports.isBrowser = 'window' in globalThis || 'self' in globalThis;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/http-api.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/index.js":
/*!*******************************************!*\
  !*** ./node_modules/jsforce/lib/index.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst jsforce_1 = __importDefault(__webpack_require__(/*! ./jsforce */ \"(rsc)/./node_modules/jsforce/lib/jsforce.js\"));\n__webpack_require__(/*! ./api/analytics */ \"(rsc)/./node_modules/jsforce/lib/api/analytics.js\");\n__webpack_require__(/*! ./api/apex */ \"(rsc)/./node_modules/jsforce/lib/api/apex.js\");\n__webpack_require__(/*! ./api/bulk */ \"(rsc)/./node_modules/jsforce/lib/api/bulk.js\");\n__webpack_require__(/*! ./api/bulk2 */ \"(rsc)/./node_modules/jsforce/lib/api/bulk2.js\");\n__webpack_require__(/*! ./api/chatter */ \"(rsc)/./node_modules/jsforce/lib/api/chatter.js\");\n__webpack_require__(/*! ./api/metadata */ \"(rsc)/./node_modules/jsforce/lib/api/metadata.js\");\n__webpack_require__(/*! ./api/soap */ \"(rsc)/./node_modules/jsforce/lib/api/soap.js\");\n__webpack_require__(/*! ./api/streaming */ \"(rsc)/./node_modules/jsforce/lib/api/streaming.js\");\n__webpack_require__(/*! ./api/tooling */ \"(rsc)/./node_modules/jsforce/lib/api/tooling.js\");\n__exportStar(__webpack_require__(/*! ./types */ \"(rsc)/./node_modules/jsforce/lib/types/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./core */ \"(rsc)/./node_modules/jsforce/lib/core.js\"), exports);\n__exportStar(__webpack_require__(/*! ./util/promise */ \"(rsc)/./node_modules/jsforce/lib/util/promise.js\"), exports);\nexports[\"default\"] = jsforce_1.default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQ0FBa0MsbUJBQU8sQ0FBQyw4REFBVztBQUNyRCxtQkFBTyxDQUFDLDBFQUFpQjtBQUN6QixtQkFBTyxDQUFDLGdFQUFZO0FBQ3BCLG1CQUFPLENBQUMsZ0VBQVk7QUFDcEIsbUJBQU8sQ0FBQyxrRUFBYTtBQUNyQixtQkFBTyxDQUFDLHNFQUFlO0FBQ3ZCLG1CQUFPLENBQUMsd0VBQWdCO0FBQ3hCLG1CQUFPLENBQUMsZ0VBQVk7QUFDcEIsbUJBQU8sQ0FBQywwRUFBaUI7QUFDekIsbUJBQU8sQ0FBQyxzRUFBZTtBQUN2QixhQUFhLG1CQUFPLENBQUMsZ0VBQVM7QUFDOUIsYUFBYSxtQkFBTyxDQUFDLHdEQUFRO0FBQzdCLGFBQWEsbUJBQU8sQ0FBQyx3RUFBZ0I7QUFDckMsa0JBQWUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uZXpvYmVuYXJkaS9BSV9zdHVmZi9PbmJvYXJkaW5nUG9ydGFsL25vZGVfbW9kdWxlcy9qc2ZvcmNlL2xpYi9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QganNmb3JjZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2pzZm9yY2VcIikpO1xucmVxdWlyZShcIi4vYXBpL2FuYWx5dGljc1wiKTtcbnJlcXVpcmUoXCIuL2FwaS9hcGV4XCIpO1xucmVxdWlyZShcIi4vYXBpL2J1bGtcIik7XG5yZXF1aXJlKFwiLi9hcGkvYnVsazJcIik7XG5yZXF1aXJlKFwiLi9hcGkvY2hhdHRlclwiKTtcbnJlcXVpcmUoXCIuL2FwaS9tZXRhZGF0YVwiKTtcbnJlcXVpcmUoXCIuL2FwaS9zb2FwXCIpO1xucmVxdWlyZShcIi4vYXBpL3N0cmVhbWluZ1wiKTtcbnJlcXVpcmUoXCIuL2FwaS90b29saW5nXCIpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb3JlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsL3Byb21pc2VcIiksIGV4cG9ydHMpO1xuZXhwb3J0cy5kZWZhdWx0ID0ganNmb3JjZV8xLmRlZmF1bHQ7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/jsforce.js":
/*!*********************************************!*\
  !*** ./node_modules/jsforce/lib/jsforce.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.registerModule = void 0;\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst VERSION_1 = __importDefault(__webpack_require__(/*! ./VERSION */ \"(rsc)/./node_modules/jsforce/lib/VERSION.js\"));\nconst connection_1 = __importDefault(__webpack_require__(/*! ./connection */ \"(rsc)/./node_modules/jsforce/lib/connection.js\"));\nconst oauth2_1 = __importDefault(__webpack_require__(/*! ./oauth2 */ \"(rsc)/./node_modules/jsforce/lib/oauth2.js\"));\nconst date_1 = __importDefault(__webpack_require__(/*! ./date */ \"(rsc)/./node_modules/jsforce/lib/date.js\"));\nconst registry_1 = __importDefault(__webpack_require__(/*! ./registry */ \"(rsc)/./node_modules/jsforce/lib/registry/index.js\"));\nconst client_1 = __importStar(__webpack_require__(/*! ./browser/client */ \"(rsc)/./node_modules/jsforce/lib/browser/client.js\"));\n/**\n *\n */\nclass JSforce extends events_1.EventEmitter {\n    VERSION = VERSION_1.default;\n    Connection = connection_1.default;\n    OAuth2 = oauth2_1.default;\n    SfDate = date_1.default;\n    Date = date_1.default;\n    BrowserClient = client_1.BrowserClient;\n    registry = registry_1.default;\n    browser = client_1.default;\n}\nfunction registerModule(name, factory) {\n    jsforce.on('connection:new', (conn) => {\n        let obj = undefined;\n        Object.defineProperty(conn, name, {\n            get() {\n                obj = obj ?? factory(conn);\n                return obj;\n            },\n            enumerable: true,\n            configurable: true,\n        });\n    });\n}\nexports.registerModule = registerModule;\nconst jsforce = new JSforce();\nexports[\"default\"] = jsforce;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvanNmb3JjZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0I7QUFDdEIsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsa0NBQWtDLG1CQUFPLENBQUMsOERBQVc7QUFDckQscUNBQXFDLG1CQUFPLENBQUMsb0VBQWM7QUFDM0QsaUNBQWlDLG1CQUFPLENBQUMsNERBQVU7QUFDbkQsK0JBQStCLG1CQUFPLENBQUMsd0RBQVE7QUFDL0MsbUNBQW1DLG1CQUFPLENBQUMsc0VBQVk7QUFDdkQsOEJBQThCLG1CQUFPLENBQUMsNEVBQWtCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQSxrQkFBZSIsInNvdXJjZXMiOlsiL1VzZXJzL25lem9iZW5hcmRpL0FJX3N0dWZmL09uYm9hcmRpbmdQb3J0YWwvbm9kZV9tb2R1bGVzL2pzZm9yY2UvbGliL2pzZm9yY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmVnaXN0ZXJNb2R1bGUgPSB2b2lkIDA7XG5jb25zdCBldmVudHNfMSA9IHJlcXVpcmUoXCJldmVudHNcIik7XG5jb25zdCBWRVJTSU9OXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vVkVSU0lPTlwiKSk7XG5jb25zdCBjb25uZWN0aW9uXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vY29ubmVjdGlvblwiKSk7XG5jb25zdCBvYXV0aDJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9vYXV0aDJcIikpO1xuY29uc3QgZGF0ZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2RhdGVcIikpO1xuY29uc3QgcmVnaXN0cnlfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9yZWdpc3RyeVwiKSk7XG5jb25zdCBjbGllbnRfMSA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9icm93c2VyL2NsaWVudFwiKSk7XG4vKipcbiAqXG4gKi9cbmNsYXNzIEpTZm9yY2UgZXh0ZW5kcyBldmVudHNfMS5FdmVudEVtaXR0ZXIge1xuICAgIFZFUlNJT04gPSBWRVJTSU9OXzEuZGVmYXVsdDtcbiAgICBDb25uZWN0aW9uID0gY29ubmVjdGlvbl8xLmRlZmF1bHQ7XG4gICAgT0F1dGgyID0gb2F1dGgyXzEuZGVmYXVsdDtcbiAgICBTZkRhdGUgPSBkYXRlXzEuZGVmYXVsdDtcbiAgICBEYXRlID0gZGF0ZV8xLmRlZmF1bHQ7XG4gICAgQnJvd3NlckNsaWVudCA9IGNsaWVudF8xLkJyb3dzZXJDbGllbnQ7XG4gICAgcmVnaXN0cnkgPSByZWdpc3RyeV8xLmRlZmF1bHQ7XG4gICAgYnJvd3NlciA9IGNsaWVudF8xLmRlZmF1bHQ7XG59XG5mdW5jdGlvbiByZWdpc3Rlck1vZHVsZShuYW1lLCBmYWN0b3J5KSB7XG4gICAganNmb3JjZS5vbignY29ubmVjdGlvbjpuZXcnLCAoY29ubikgPT4ge1xuICAgICAgICBsZXQgb2JqID0gdW5kZWZpbmVkO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoY29ubiwgbmFtZSwge1xuICAgICAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgICAgIG9iaiA9IG9iaiA/PyBmYWN0b3J5KGNvbm4pO1xuICAgICAgICAgICAgICAgIHJldHVybiBvYmo7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5leHBvcnRzLnJlZ2lzdGVyTW9kdWxlID0gcmVnaXN0ZXJNb2R1bGU7XG5jb25zdCBqc2ZvcmNlID0gbmV3IEpTZm9yY2UoKTtcbmV4cG9ydHMuZGVmYXVsdCA9IGpzZm9yY2U7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/jsforce.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/oauth2.js":
/*!********************************************!*\
  !*** ./node_modules/jsforce/lib/oauth2.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OAuth2 = void 0;\n/**\n *\n */\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst querystring_1 = __importDefault(__webpack_require__(/*! querystring */ \"querystring\"));\nconst transport_1 = __importStar(__webpack_require__(/*! ./transport */ \"(rsc)/./node_modules/jsforce/lib/transport.js\"));\nconst defaultOAuth2Config = {\n    loginUrl: 'https://login.salesforce.com',\n};\n// Makes a nodejs base64 encoded string compatible with rfc4648 alternative encoding for urls.\n// @param base64Encoded a nodejs base64 encoded string\nfunction base64UrlEscape(base64Encoded) {\n    // builtin node js base 64 encoding is not 64 url compatible.\n    // See https://toolsn.ietf.org/html/rfc4648#section-5\n    return base64Encoded\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_')\n        .replace(/=/g, '');\n}\n/**\n * OAuth2 class\n */\nclass OAuth2 {\n    loginUrl;\n    authzServiceUrl;\n    tokenServiceUrl;\n    revokeServiceUrl;\n    clientId;\n    clientSecret;\n    redirectUri;\n    codeVerifier;\n    _transport;\n    /**\n     *\n     */\n    constructor(config) {\n        const { loginUrl, authzServiceUrl, tokenServiceUrl, revokeServiceUrl, clientId, clientSecret, redirectUri, proxyUrl, httpProxy, useVerifier, } = config;\n        if (authzServiceUrl && tokenServiceUrl) {\n            this.loginUrl = authzServiceUrl.split('/').slice(0, 3).join('/');\n            this.authzServiceUrl = authzServiceUrl;\n            this.tokenServiceUrl = tokenServiceUrl;\n            this.revokeServiceUrl =\n                revokeServiceUrl || `${this.loginUrl}/services/oauth2/revoke`;\n        }\n        else {\n            this.loginUrl = loginUrl ?? defaultOAuth2Config.loginUrl;\n            const maybeSlash = this.loginUrl.endsWith('/') ? '' : '/';\n            this.authzServiceUrl = `${this.loginUrl}${maybeSlash}services/oauth2/authorize`;\n            this.tokenServiceUrl = `${this.loginUrl}${maybeSlash}services/oauth2/token`;\n            this.revokeServiceUrl = `${this.loginUrl}${maybeSlash}services/oauth2/revoke`;\n        }\n        this.clientId = clientId;\n        this.clientSecret = clientSecret;\n        this.redirectUri = redirectUri;\n        if (proxyUrl) {\n            this._transport = new transport_1.XdProxyTransport(proxyUrl);\n        }\n        else if (httpProxy) {\n            this._transport = new transport_1.HttpProxyTransport(httpProxy);\n        }\n        else {\n            this._transport = new transport_1.default();\n        }\n        if (useVerifier) {\n            // Set a code verifier string for OAuth authorization\n            this.codeVerifier = base64UrlEscape((0, crypto_1.randomBytes)(Math.ceil(128)).toString('base64'));\n        }\n    }\n    /**\n     * Get Salesforce OAuth2 authorization page URL to redirect user agent.\n     */\n    getAuthorizationUrl(params = {}) {\n        if (this.codeVerifier) {\n            // code verifier must be a base 64 url encoded hash of 128 bytes of random data. Our random data is also\n            // base 64 url encoded. See Connection.create();\n            params.code_challenge = base64UrlEscape((0, crypto_1.createHash)('sha256').update(this.codeVerifier).digest('base64'));\n        }\n        const _params = {\n            ...params,\n            response_type: 'code',\n            client_id: this.clientId,\n            redirect_uri: this.redirectUri,\n        };\n        return (this.authzServiceUrl +\n            (this.authzServiceUrl.includes('?') ? '&' : '?') +\n            querystring_1.default.stringify(_params));\n    }\n    /**\n     * OAuth2 Refresh Token Flow\n     */\n    async refreshToken(refreshToken) {\n        if (!this.clientId) {\n            throw new Error('No OAuth2 client id information is specified');\n        }\n        const params = {\n            grant_type: 'refresh_token',\n            refresh_token: refreshToken,\n            client_id: this.clientId,\n        };\n        if (this.clientSecret) {\n            params.client_secret = this.clientSecret;\n        }\n        const ret = await this._postParams(params);\n        return ret;\n    }\n    /**\n     * Send access token request to the token endpoint.\n     * When a code (string) is passed in first argument, it will use Web Server Authentication Flow (Authorization Code Grant).\n     * Otherwise, it will use the specified `grant_type` and pass parameters to the endpoint.\n     */\n    async requestToken(codeOrParams, params = {}) {\n        if (typeof codeOrParams === 'string' &&\n            (!this.clientId || !this.redirectUri)) {\n            throw new Error('No OAuth2 client id or redirect uri configuration is specified');\n        }\n        const _params = {\n            ...params,\n            ...(typeof codeOrParams === 'string'\n                ? { grant_type: 'authorization_code', code: codeOrParams }\n                : codeOrParams),\n        };\n        if (this.clientId) {\n            _params.client_id = this.clientId;\n        }\n        if (this.clientSecret) {\n            _params.client_secret = this.clientSecret;\n        }\n        if (this.redirectUri) {\n            _params.redirect_uri = this.redirectUri;\n        }\n        const ret = await this._postParams(_params);\n        return ret;\n    }\n    /**\n     * OAuth2 Username-Password Flow (Resource Owner Password Credentials)\n     */\n    async authenticate(username, password) {\n        if (!this.clientId || !this.clientSecret) {\n            throw new Error('No valid OAuth2 client configuration set');\n        }\n        const ret = await this._postParams({\n            grant_type: 'password',\n            username,\n            password,\n            client_id: this.clientId,\n            client_secret: this.clientSecret,\n        });\n        return ret;\n    }\n    /**\n     * OAuth2 Revoke Session Token\n     */\n    async revokeToken(token) {\n        const response = await this._transport.httpRequest({\n            method: 'POST',\n            url: this.revokeServiceUrl,\n            body: querystring_1.default.stringify({ token }),\n            headers: {\n                'content-type': 'application/x-www-form-urlencoded',\n            },\n        });\n        if (response.statusCode >= 400) {\n            let res = querystring_1.default.parse(response.body);\n            if (!res || !res.error) {\n                res = {\n                    error: `ERROR_HTTP_${response.statusCode}`,\n                    error_description: response.body,\n                };\n            }\n            throw new (class extends Error {\n                constructor({ error, error_description, }) {\n                    super(error_description);\n                    this.name = error;\n                }\n            })(res);\n        }\n    }\n    /**\n     * @private\n     */\n    async _postParams(params) {\n        if (this.codeVerifier)\n            params.code_verifier = this.codeVerifier;\n        const response = await this._transport.httpRequest({\n            method: 'POST',\n            url: this.tokenServiceUrl,\n            body: querystring_1.default.stringify(params),\n            headers: {\n                'content-type': 'application/x-www-form-urlencoded',\n            },\n        });\n        let res;\n        try {\n            res = JSON.parse(response.body);\n        }\n        catch (e) {\n            /* eslint-disable no-empty */\n        }\n        if (response.statusCode >= 400) {\n            res = res || {\n                error: `ERROR_HTTP_${response.statusCode}`,\n                error_description: response.body,\n            };\n            throw new (class extends Error {\n                constructor({ error, error_description, }) {\n                    super(error_description);\n                    this.name = error;\n                }\n            })(res);\n        }\n        return res;\n    }\n}\nexports.OAuth2 = OAuth2;\nexports[\"default\"] = OAuth2;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/oauth2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/process.js":
/*!*********************************************!*\
  !*** ./node_modules/jsforce/lib/process.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Process = exports.ApprovalProcess = exports.ProcessRule = void 0;\n/**\n * A class which manages process (workflow) rules\n */\nclass ProcessRule {\n    _conn;\n    /**\n     *\n     */\n    constructor(conn) {\n        this._conn = conn;\n    }\n    /**\n     * Get all process rule definitions registered to sobjects\n     */\n    async list() {\n        const res = await this._conn.request('/process/rules');\n        return res.rules;\n    }\n    /**\n     * Trigger process rule for given entities\n     */\n    trigger(contextIds) {\n        const contextIds_ = Array.isArray(contextIds) ? contextIds : [contextIds];\n        // https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/dome_process_rules_trigger.htm\n        return this._conn.request({\n            method: 'POST',\n            url: '/process/rules/',\n            body: JSON.stringify({\n                contextIds: contextIds_,\n            }),\n            headers: {\n                'content-type': 'application/json',\n            },\n        });\n    }\n}\nexports.ProcessRule = ProcessRule;\n/**\n * A class which manages approval processes\n */\nclass ApprovalProcess {\n    _conn;\n    /**\n     *\n     */\n    constructor(conn) {\n        this._conn = conn;\n    }\n    /**\n     * Get all approval process definitions registered to sobjects\n     */\n    async list() {\n        const res = await this._conn.request('/process/approvals');\n        return res.approvals;\n    }\n    /**\n     * Send bulk requests for approval process\n     */\n    request(requests) {\n        const requests_ = requests.map((req) => '_request' in req ? req._request : req);\n        return this._conn.request({\n            method: 'POST',\n            url: '/process/approvals',\n            headers: { 'content-type': 'application/json' },\n            body: JSON.stringify({ requests: requests_ }),\n        });\n    }\n    /**\n     * Create approval process request\n     *\n     * @private\n     */\n    _createRequest(actionType, contextId, comments, options = {}) {\n        return new ApprovalProcessRequest(this, {\n            actionType,\n            contextId,\n            comments,\n            ...options,\n        });\n    }\n    /**\n     * Submit approval request for an item\n     */\n    submit(contextId, comments, options) {\n        return this._createRequest('Submit', contextId, comments, options);\n    }\n    /**\n     * Approve approval request for an item\n     */\n    approve(workitemId, comments, options = {}) {\n        return this._createRequest('Approve', workitemId, comments, options);\n    }\n    /**\n     * Reject approval request for an item\n     */\n    reject(workitemId, comments, options = {}) {\n        return this._createRequest('Reject', workitemId, comments, options);\n    }\n}\nexports.ApprovalProcess = ApprovalProcess;\n/**\n * A class representing approval process request\n */\nclass ApprovalProcessRequest {\n    _process;\n    _request;\n    _promise;\n    constructor(process, request) {\n        this._process = process;\n        this._request = request;\n    }\n    /**\n     * Promise/A+ interface\n     * http://promises-aplus.github.io/promises-spec/\n     */\n    then(onResolve, onReject) {\n        if (!this._promise) {\n            this._promise = this._process\n                .request([this])\n                .then((rets) => rets[0]);\n        }\n        this._promise.then(onResolve, onReject);\n    }\n}\n/**\n * A class which manages process rules and approval processes\n */\nclass Process {\n    rule;\n    approval;\n    /**\n     *\n     */\n    constructor(conn) {\n        this.rule = new ProcessRule(conn);\n        this.approval = new ApprovalProcess(conn);\n    }\n}\nexports.Process = Process;\nexports[\"default\"] = Process;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvcHJvY2Vzcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlLEdBQUcsdUJBQXVCLEdBQUcsbUJBQW1CO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9DQUFvQztBQUMzRCxtQ0FBbUMscUJBQXFCO0FBQ3hELFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmLGtCQUFlIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvcHJvY2Vzcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHJvY2VzcyA9IGV4cG9ydHMuQXBwcm92YWxQcm9jZXNzID0gZXhwb3J0cy5Qcm9jZXNzUnVsZSA9IHZvaWQgMDtcbi8qKlxuICogQSBjbGFzcyB3aGljaCBtYW5hZ2VzIHByb2Nlc3MgKHdvcmtmbG93KSBydWxlc1xuICovXG5jbGFzcyBQcm9jZXNzUnVsZSB7XG4gICAgX2Nvbm47XG4gICAgLyoqXG4gICAgICpcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb25uKSB7XG4gICAgICAgIHRoaXMuX2Nvbm4gPSBjb25uO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYWxsIHByb2Nlc3MgcnVsZSBkZWZpbml0aW9ucyByZWdpc3RlcmVkIHRvIHNvYmplY3RzXG4gICAgICovXG4gICAgYXN5bmMgbGlzdCgpIHtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy5fY29ubi5yZXF1ZXN0KCcvcHJvY2Vzcy9ydWxlcycpO1xuICAgICAgICByZXR1cm4gcmVzLnJ1bGVzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUcmlnZ2VyIHByb2Nlc3MgcnVsZSBmb3IgZ2l2ZW4gZW50aXRpZXNcbiAgICAgKi9cbiAgICB0cmlnZ2VyKGNvbnRleHRJZHMpIHtcbiAgICAgICAgY29uc3QgY29udGV4dElkc18gPSBBcnJheS5pc0FycmF5KGNvbnRleHRJZHMpID8gY29udGV4dElkcyA6IFtjb250ZXh0SWRzXTtcbiAgICAgICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIuc2FsZXNmb3JjZS5jb20vZG9jcy9hdGxhcy5lbi11cy5hcGlfcmVzdC5tZXRhL2FwaV9yZXN0L2RvbWVfcHJvY2Vzc19ydWxlc190cmlnZ2VyLmh0bVxuICAgICAgICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgdXJsOiAnL3Byb2Nlc3MvcnVsZXMvJyxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICBjb250ZXh0SWRzOiBjb250ZXh0SWRzXyxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLlByb2Nlc3NSdWxlID0gUHJvY2Vzc1J1bGU7XG4vKipcbiAqIEEgY2xhc3Mgd2hpY2ggbWFuYWdlcyBhcHByb3ZhbCBwcm9jZXNzZXNcbiAqL1xuY2xhc3MgQXBwcm92YWxQcm9jZXNzIHtcbiAgICBfY29ubjtcbiAgICAvKipcbiAgICAgKlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvbm4pIHtcbiAgICAgICAgdGhpcy5fY29ubiA9IGNvbm47XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBhbGwgYXBwcm92YWwgcHJvY2VzcyBkZWZpbml0aW9ucyByZWdpc3RlcmVkIHRvIHNvYmplY3RzXG4gICAgICovXG4gICAgYXN5bmMgbGlzdCgpIHtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy5fY29ubi5yZXF1ZXN0KCcvcHJvY2Vzcy9hcHByb3ZhbHMnKTtcbiAgICAgICAgcmV0dXJuIHJlcy5hcHByb3ZhbHM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNlbmQgYnVsayByZXF1ZXN0cyBmb3IgYXBwcm92YWwgcHJvY2Vzc1xuICAgICAqL1xuICAgIHJlcXVlc3QocmVxdWVzdHMpIHtcbiAgICAgICAgY29uc3QgcmVxdWVzdHNfID0gcmVxdWVzdHMubWFwKChyZXEpID0+ICdfcmVxdWVzdCcgaW4gcmVxID8gcmVxLl9yZXF1ZXN0IDogcmVxKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Nvbm4ucmVxdWVzdCh7XG4gICAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICAgIHVybDogJy9wcm9jZXNzL2FwcHJvdmFscycsXG4gICAgICAgICAgICBoZWFkZXJzOiB7ICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgcmVxdWVzdHM6IHJlcXVlc3RzXyB9KSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhcHByb3ZhbCBwcm9jZXNzIHJlcXVlc3RcbiAgICAgKlxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgX2NyZWF0ZVJlcXVlc3QoYWN0aW9uVHlwZSwgY29udGV4dElkLCBjb21tZW50cywgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIHJldHVybiBuZXcgQXBwcm92YWxQcm9jZXNzUmVxdWVzdCh0aGlzLCB7XG4gICAgICAgICAgICBhY3Rpb25UeXBlLFxuICAgICAgICAgICAgY29udGV4dElkLFxuICAgICAgICAgICAgY29tbWVudHMsXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU3VibWl0IGFwcHJvdmFsIHJlcXVlc3QgZm9yIGFuIGl0ZW1cbiAgICAgKi9cbiAgICBzdWJtaXQoY29udGV4dElkLCBjb21tZW50cywgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY3JlYXRlUmVxdWVzdCgnU3VibWl0JywgY29udGV4dElkLCBjb21tZW50cywgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEFwcHJvdmUgYXBwcm92YWwgcmVxdWVzdCBmb3IgYW4gaXRlbVxuICAgICAqL1xuICAgIGFwcHJvdmUod29ya2l0ZW1JZCwgY29tbWVudHMsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gdGhpcy5fY3JlYXRlUmVxdWVzdCgnQXBwcm92ZScsIHdvcmtpdGVtSWQsIGNvbW1lbnRzLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVqZWN0IGFwcHJvdmFsIHJlcXVlc3QgZm9yIGFuIGl0ZW1cbiAgICAgKi9cbiAgICByZWplY3Qod29ya2l0ZW1JZCwgY29tbWVudHMsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICByZXR1cm4gdGhpcy5fY3JlYXRlUmVxdWVzdCgnUmVqZWN0Jywgd29ya2l0ZW1JZCwgY29tbWVudHMsIG9wdGlvbnMpO1xuICAgIH1cbn1cbmV4cG9ydHMuQXBwcm92YWxQcm9jZXNzID0gQXBwcm92YWxQcm9jZXNzO1xuLyoqXG4gKiBBIGNsYXNzIHJlcHJlc2VudGluZyBhcHByb3ZhbCBwcm9jZXNzIHJlcXVlc3RcbiAqL1xuY2xhc3MgQXBwcm92YWxQcm9jZXNzUmVxdWVzdCB7XG4gICAgX3Byb2Nlc3M7XG4gICAgX3JlcXVlc3Q7XG4gICAgX3Byb21pc2U7XG4gICAgY29uc3RydWN0b3IocHJvY2VzcywgcmVxdWVzdCkge1xuICAgICAgICB0aGlzLl9wcm9jZXNzID0gcHJvY2VzcztcbiAgICAgICAgdGhpcy5fcmVxdWVzdCA9IHJlcXVlc3Q7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFByb21pc2UvQSsgaW50ZXJmYWNlXG4gICAgICogaHR0cDovL3Byb21pc2VzLWFwbHVzLmdpdGh1Yi5pby9wcm9taXNlcy1zcGVjL1xuICAgICAqL1xuICAgIHRoZW4ob25SZXNvbHZlLCBvblJlamVjdCkge1xuICAgICAgICBpZiAoIXRoaXMuX3Byb21pc2UpIHtcbiAgICAgICAgICAgIHRoaXMuX3Byb21pc2UgPSB0aGlzLl9wcm9jZXNzXG4gICAgICAgICAgICAgICAgLnJlcXVlc3QoW3RoaXNdKVxuICAgICAgICAgICAgICAgIC50aGVuKChyZXRzKSA9PiByZXRzWzBdKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9wcm9taXNlLnRoZW4ob25SZXNvbHZlLCBvblJlamVjdCk7XG4gICAgfVxufVxuLyoqXG4gKiBBIGNsYXNzIHdoaWNoIG1hbmFnZXMgcHJvY2VzcyBydWxlcyBhbmQgYXBwcm92YWwgcHJvY2Vzc2VzXG4gKi9cbmNsYXNzIFByb2Nlc3Mge1xuICAgIHJ1bGU7XG4gICAgYXBwcm92YWw7XG4gICAgLyoqXG4gICAgICpcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb25uKSB7XG4gICAgICAgIHRoaXMucnVsZSA9IG5ldyBQcm9jZXNzUnVsZShjb25uKTtcbiAgICAgICAgdGhpcy5hcHByb3ZhbCA9IG5ldyBBcHByb3ZhbFByb2Nlc3MoY29ubik7XG4gICAgfVxufVxuZXhwb3J0cy5Qcm9jZXNzID0gUHJvY2VzcztcbmV4cG9ydHMuZGVmYXVsdCA9IFByb2Nlc3M7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/process.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/query.js":
/*!*******************************************!*\
  !*** ./node_modules/jsforce/lib/query.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SubQuery = exports.Query = exports.ResponseTargets = void 0;\n/**\n * @file Manages query for records in Salesforce\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst logger_1 = __webpack_require__(/*! ./util/logger */ \"(rsc)/./node_modules/jsforce/lib/util/logger.js\");\nconst record_stream_1 = __importStar(__webpack_require__(/*! ./record-stream */ \"(rsc)/./node_modules/jsforce/lib/record-stream.js\"));\nconst soql_builder_1 = __webpack_require__(/*! ./soql-builder */ \"(rsc)/./node_modules/jsforce/lib/soql-builder.js\");\nconst ResponseTargetValues = [\n    'QueryResult',\n    'Records',\n    'SingleRecord',\n    'Count',\n];\nexports.ResponseTargets = ResponseTargetValues.reduce((values, target) => ({ ...values, [target]: target }), {});\n/**\n *\n */\nconst DEFAULT_BULK_THRESHOLD = 200;\nconst DEFAULT_BULK_API_VERSION = 1;\n/**\n * Query\n */\nclass Query extends events_1.EventEmitter {\n    static _logger = (0, logger_1.getLogger)('query');\n    _conn;\n    _logger;\n    _soql;\n    _locator;\n    _config = {};\n    _children = [];\n    _options;\n    _executed = false;\n    _finished = false;\n    _chaining = false;\n    _promise;\n    _stream;\n    totalSize = 0;\n    totalFetched = 0;\n    records = [];\n    /**\n     *\n     */\n    constructor(conn, config, options) {\n        super();\n        this._conn = conn;\n        this._logger = conn._logLevel\n            ? Query._logger.createInstance(conn._logLevel)\n            : Query._logger;\n        if (typeof config === 'string') {\n            this._soql = config;\n            this._logger.debug(`config is soql: ${config}`);\n        }\n        else if (typeof config.locator === 'string') {\n            const locator = config.locator;\n            this._logger.debug(`config is locator: ${locator}`);\n            this._locator = locator.includes('/')\n                ? this.urlToLocator(locator)\n                : locator;\n        }\n        else {\n            this._logger.debug(`config is QueryConfig: ${JSON.stringify(config)}`);\n            const { fields, includes, sort, ..._config } = config;\n            this._config = _config;\n            this.select(fields);\n            if (includes) {\n                this.includeChildren(includes);\n            }\n            if (sort) {\n                this.sort(sort);\n            }\n        }\n        this._options = {\n            headers: {},\n            maxFetch: 10000,\n            autoFetch: false,\n            scanAll: false,\n            responseTarget: 'QueryResult',\n            ...(options || {}),\n        };\n        // promise instance\n        this._promise = new Promise((resolve, reject) => {\n            this.on('response', resolve);\n            this.on('error', reject);\n        });\n        this._stream = new record_stream_1.Serializable();\n        this.on('record', (record) => this._stream.push(record));\n        this.on('end', () => this._stream.push(null));\n        this.on('error', (err) => {\n            try {\n                this._stream.emit('error', err);\n            }\n            catch (e) {\n                // eslint-disable-line no-empty\n            }\n        });\n    }\n    /**\n     * Select fields to include in the returning result\n     */\n    select(fields = '*') {\n        if (this._soql) {\n            throw Error('Cannot set select fields for the query which has already built SOQL.');\n        }\n        function toFieldArray(fields) {\n            return typeof fields === 'string'\n                ? fields.split(/\\s*,\\s*/)\n                : Array.isArray(fields)\n                    ? fields\n                        .map(toFieldArray)\n                        .reduce((fs, f) => [...fs, ...f], [])\n                    : Object.entries(fields)\n                        .map(([f, v]) => {\n                        if (typeof v === 'number' || typeof v === 'boolean') {\n                            return v ? [f] : [];\n                        }\n                        else {\n                            return toFieldArray(v).map((p) => `${f}.${p}`);\n                        }\n                    })\n                        .reduce((fs, f) => [...fs, ...f], []);\n        }\n        if (fields) {\n            this._config.fields = toFieldArray(fields);\n        }\n        // force convert query record type without changing instance;\n        return this;\n    }\n    /**\n     * Set query conditions to filter the result records\n     */\n    where(conditions) {\n        if (this._soql) {\n            throw Error('Cannot set where conditions for the query which has already built SOQL.');\n        }\n        this._config.conditions = conditions;\n        return this;\n    }\n    /**\n     * Limit the returning result\n     */\n    limit(limit) {\n        if (this._soql) {\n            throw Error('Cannot set limit for the query which has already built SOQL.');\n        }\n        this._config.limit = limit;\n        return this;\n    }\n    /**\n     * Skip records\n     */\n    skip(offset) {\n        if (this._soql) {\n            throw Error('Cannot set skip/offset for the query which has already built SOQL.');\n        }\n        this._config.offset = offset;\n        return this;\n    }\n    /**\n     * Synonym of Query#skip()\n     */\n    offset = this.skip;\n    sort(sort, dir) {\n        if (this._soql) {\n            throw Error('Cannot set sort for the query which has already built SOQL.');\n        }\n        if (typeof sort === 'string' && typeof dir !== 'undefined') {\n            this._config.sort = [[sort, dir]];\n        }\n        else {\n            this._config.sort = sort;\n        }\n        return this;\n    }\n    /**\n     * Synonym of Query#sort()\n     */\n    orderby = this.sort;\n    include(childRelName, conditions, fields, options = {}) {\n        if (this._soql) {\n            throw Error('Cannot include child relationship into the query which has already built SOQL.');\n        }\n        const childConfig = {\n            fields: fields === null ? undefined : fields,\n            table: childRelName,\n            conditions: conditions === null ? undefined : conditions,\n            limit: options.limit,\n            offset: options.offset,\n            sort: options.sort,\n        };\n        // eslint-disable-next-line no-use-before-define\n        const childQuery = new SubQuery(this._conn, childRelName, childConfig, this);\n        this._children.push(childQuery);\n        return childQuery;\n    }\n    /**\n     * Include child relationship queries, but not moving down to the children context\n     */\n    includeChildren(includes) {\n        if (this._soql) {\n            throw Error('Cannot include child relationship into the query which has already built SOQL.');\n        }\n        for (const crname of Object.keys(includes)) {\n            const { conditions, fields, ...options } = includes[crname];\n            this.include(crname, conditions, fields, options);\n        }\n        return this;\n    }\n    /**\n     * Setting maxFetch query option\n     */\n    maxFetch(maxFetch) {\n        this._options.maxFetch = maxFetch;\n        return this;\n    }\n    /**\n     * Switching auto fetch mode\n     */\n    autoFetch(autoFetch) {\n        this._options.autoFetch = autoFetch;\n        return this;\n    }\n    /**\n     * Set flag to scan all records including deleted and archived.\n     */\n    scanAll(scanAll) {\n        this._options.scanAll = scanAll;\n        return this;\n    }\n    /**\n     *\n     */\n    setResponseTarget(responseTarget) {\n        if (responseTarget in exports.ResponseTargets) {\n            this._options.responseTarget = responseTarget;\n        }\n        // force change query response target without changing instance\n        return this;\n    }\n    /**\n     * Execute query and fetch records from server.\n     */\n    execute(options_ = {}) {\n        if (this._executed) {\n            throw new Error('re-executing already executed query');\n        }\n        if (this._finished) {\n            throw new Error('executing already closed query');\n        }\n        const options = {\n            headers: options_.headers || this._options.headers,\n            responseTarget: options_.responseTarget || this._options.responseTarget,\n            autoFetch: options_.autoFetch || this._options.autoFetch,\n            maxFetch: options_.maxFetch || this._options.maxFetch,\n            scanAll: options_.scanAll || this._options.scanAll,\n        };\n        // collect fetched records in array\n        // only when response target is Records and\n        // either callback or chaining promises are available to this query.\n        this.once('fetch', () => {\n            if (options.responseTarget === exports.ResponseTargets.Records &&\n                this._chaining) {\n                this._logger.debug('--- collecting all fetched records ---');\n                const records = [];\n                const onRecord = (record) => records.push(record);\n                this.on('record', onRecord);\n                this.once('end', () => {\n                    this.removeListener('record', onRecord);\n                    this.emit('response', records, this);\n                });\n            }\n        });\n        // flag to prevent re-execution\n        this._executed = true;\n        (async () => {\n            // start actual query\n            this._logger.debug('>>> Query start >>>');\n            try {\n                await this._execute(options);\n                this._logger.debug('*** Query finished ***');\n            }\n            catch (error) {\n                this._logger.debug('--- Query error ---', error);\n                this.emit('error', error);\n            }\n        })();\n        // return Query instance for chaining\n        return this;\n    }\n    /**\n     * Synonym of Query#execute()\n     */\n    exec = this.execute;\n    /**\n     * Synonym of Query#execute()\n     */\n    run = this.execute;\n    locatorToUrl() {\n        return this._locator\n            ? [this._conn._baseUrl(), '/query/', this._locator].join('')\n            : '';\n    }\n    urlToLocator(url) {\n        return url.split('/').pop();\n    }\n    constructResponse(rawDone, responseTarget) {\n        switch (responseTarget) {\n            case 'Count':\n                return this.totalSize;\n            case 'SingleRecord':\n                return this.records?.[0] ?? null;\n            case 'Records':\n                return this.records;\n            // QueryResult is default response target\n            default:\n                return {\n                    ...{\n                        records: this.records,\n                        totalSize: this.totalSize,\n                        done: rawDone ?? true, // when no records, done is omitted\n                    },\n                    ...(this._locator ? { nextRecordsUrl: this.locatorToUrl() } : {}),\n                };\n        }\n    }\n    /**\n     * @private\n     */\n    async _execute(options) {\n        const { headers, responseTarget, autoFetch, maxFetch, scanAll } = options;\n        this._logger.debug('execute with options', options);\n        let url;\n        if (this._locator) {\n            url = this.locatorToUrl();\n        }\n        else {\n            const soql = await this.toSOQL();\n            this._logger.debug(`SOQL = ${soql}`);\n            url = [\n                this._conn._baseUrl(),\n                '/',\n                scanAll ? 'queryAll' : 'query',\n                '?q=',\n                encodeURIComponent(soql),\n            ].join('');\n        }\n        const data = await this._conn.request({ method: 'GET', url, headers });\n        this.emit('fetch');\n        this.totalSize = data.totalSize;\n        // If autoFetch is true, fetch all records for any subqueries\n        if (autoFetch && data.records.length > 0) {\n            const recordKeys = Object.keys(data.records[0]);\n            for (const record of data.records) {\n                for (const key of recordKeys) {\n                    const field = record[key];\n                    if (field && typeof field === 'object' && 'records' in field && 'nextRecordsUrl' in field) {\n                        record[key] = {\n                            ...field,\n                            records: await this._fetchAllSubqueryRecords(record, key, headers),\n                            done: true,\n                            nextRecordsUrl: undefined\n                        };\n                    }\n                }\n            }\n        }\n        this.records = this.records?.concat(maxFetch - this.records.length > data.records.length\n            ? data.records\n            : data.records.slice(0, maxFetch - this.records.length));\n        this._locator = data.nextRecordsUrl\n            ? this.urlToLocator(data.nextRecordsUrl)\n            : undefined;\n        this._finished =\n            this._finished ||\n                data.done ||\n                !autoFetch ||\n                this.records.length === maxFetch ||\n                // this is what the response looks like when there are no results\n                (data.records.length === 0 && data.done === undefined);\n        // streaming record instances\n        const numRecords = data.records?.length ?? 0;\n        let totalFetched = this.totalFetched;\n        for (let i = 0; i < numRecords; i++) {\n            if (totalFetched >= maxFetch) {\n                this._finished = true;\n                break;\n            }\n            const record = data.records[i];\n            this.emit('record', record, totalFetched, this);\n            totalFetched += 1;\n        }\n        this.totalFetched = totalFetched;\n        if (this._finished) {\n            const response = this.constructResponse(data.done, responseTarget);\n            // only fire response event when it should be notified per fetch\n            if (responseTarget !== exports.ResponseTargets.Records) {\n                this.emit('response', response, this);\n            }\n            this.emit('end');\n            return response;\n        }\n        else {\n            return this._execute(options);\n        }\n    }\n    stream(type = 'csv') {\n        if (!this._finished && !this._executed) {\n            this.execute({ autoFetch: true });\n        }\n        return type === 'record' ? this._stream : this._stream.stream(type);\n    }\n    /**\n     * Pipe the queried records to another stream\n     * This is for backward compatibility; Query is not a record stream instance anymore in 2.0.\n     * If you want a record stream instance, use `Query#stream('record')`.\n     */\n    pipe(stream) {\n        return this.stream('record').pipe(stream);\n    }\n    /**\n     * @protected\n     */\n    async _expandFields(sobject_) {\n        if (this._soql) {\n            throw new Error('Cannot expand fields for the query which has already built SOQL.');\n        }\n        const { fields = [], table = '' } = this._config;\n        const sobject = sobject_ || table;\n        this._logger.debug(`_expandFields: sobject = ${sobject}, fields = ${fields.join(', ')}`);\n        const [efields] = await Promise.all([\n            this._expandAsteriskFields(sobject, fields),\n            ...this._children.map(async (childQuery) => {\n                await childQuery._expandFields();\n                return [];\n            }),\n        ]);\n        this._config.fields = efields;\n        this._config.includes = this._children\n            .map((cquery) => {\n            const cconfig = cquery._query._config;\n            return [cconfig.table, cconfig];\n        })\n            .reduce((includes, [ctable, cconfig]) => ({\n            ...includes,\n            [ctable]: cconfig,\n        }), {});\n    }\n    /**\n     *\n     */\n    async _findRelationObject(relName) {\n        const table = this._config.table;\n        if (!table) {\n            throw new Error('No table information provided in the query');\n        }\n        this._logger.debug(`finding table for relation \"${relName}\" in \"${table}\"...`);\n        const sobject = await this._conn.describe$(table);\n        const upperRname = relName.toUpperCase();\n        for (const cr of sobject.childRelationships) {\n            if ((cr.relationshipName || '').toUpperCase() === upperRname &&\n                cr.childSObject) {\n                return cr.childSObject;\n            }\n        }\n        throw new Error(`No child relationship found: ${relName}`);\n    }\n    /**\n     *\n     */\n    async _expandAsteriskFields(sobject, fields) {\n        const expandedFields = await Promise.all(fields.map(async (field) => this._expandAsteriskField(sobject, field)));\n        return expandedFields.reduce((eflds, flds) => [...eflds, ...flds], []);\n    }\n    /**\n     *\n     */\n    async _expandAsteriskField(sobject, field) {\n        this._logger.debug(`expanding field \"${field}\" in \"${sobject}\"...`);\n        const fpath = field.split('.');\n        if (fpath[fpath.length - 1] === '*') {\n            const so = await this._conn.describe$(sobject);\n            this._logger.debug(`table ${sobject} has been described`);\n            if (fpath.length > 1) {\n                const rname = fpath.shift();\n                for (const f of so.fields) {\n                    if (f.relationshipName &&\n                        rname &&\n                        f.relationshipName.toUpperCase() === rname.toUpperCase()) {\n                        const rfield = f;\n                        const referenceTo = rfield.referenceTo || [];\n                        const rtable = referenceTo.length === 1 ? referenceTo[0] : 'Name';\n                        const fpaths = await this._expandAsteriskField(rtable, fpath.join('.'));\n                        return fpaths.map((fp) => `${rname}.${fp}`);\n                    }\n                }\n                return [];\n            }\n            return so.fields.map((f) => f.name);\n        }\n        return [field];\n    }\n    /**\n     * Explain plan for executing query\n     */\n    async explain() {\n        const soql = await this.toSOQL();\n        this._logger.debug(`SOQL = ${soql}`);\n        const url = `/query/?explain=${encodeURIComponent(soql)}`;\n        return this._conn.request(url);\n    }\n    /**\n     * Return SOQL expression for the query\n     */\n    async toSOQL() {\n        if (this._soql) {\n            return this._soql;\n        }\n        await this._expandFields();\n        return (0, soql_builder_1.createSOQL)(this._config);\n    }\n    /**\n     * Promise/A+ interface\n     * http://promises-aplus.github.io/promises-spec/\n     *\n     * Delegate to deferred promise, return promise instance for query result\n     */\n    then(onResolve, onReject) {\n        this._chaining = true;\n        if (!this._finished && !this._executed) {\n            this.execute();\n        }\n        if (!this._promise) {\n            throw new Error('invalid state: promise is not set after query execution');\n        }\n        return this._promise.then(onResolve, onReject);\n    }\n    catch(onReject) {\n        return this.then(null, onReject);\n    }\n    promise() {\n        // TODO(cristian): verify this is correct\n        return Promise.resolve(this);\n    }\n    destroy(type, options) {\n        if (typeof type === 'object' && type !== null) {\n            options = type;\n            type = undefined;\n        }\n        options = options || {};\n        const type_ = type || this._config.table;\n        if (!type_) {\n            throw new Error('SOQL based query needs SObject type information to bulk delete.');\n        }\n        // Set the threshold number to pass to bulk API\n        const thresholdNum = options.allowBulk === false\n            ? -1\n            : typeof options.bulkThreshold === 'number'\n                ? options.bulkThreshold\n                : // determine threshold if the connection version supports SObject collection API or not\n                    this._conn._ensureVersion(42)\n                        ? DEFAULT_BULK_THRESHOLD\n                        : this._conn._maxRequest / 2;\n        const bulkApiVersion = options.bulkApiVersion ?? DEFAULT_BULK_API_VERSION;\n        return new Promise((resolve, reject) => {\n            const createBatch = () => this._conn\n                .sobject(type_)\n                .deleteBulk()\n                .on('response', resolve)\n                .on('error', reject);\n            let records = [];\n            let batch = null;\n            const handleRecord = (rec) => {\n                if (!rec.Id) {\n                    const err = new Error('Queried record does not include Salesforce record ID.');\n                    this.emit('error', err);\n                    return;\n                }\n                const record = { Id: rec.Id };\n                if (batch) {\n                    batch.write(record);\n                }\n                else {\n                    records.push(record);\n                    if (thresholdNum >= 0 &&\n                        records.length > thresholdNum &&\n                        bulkApiVersion === 1) {\n                        // Use bulk delete instead of SObject REST API\n                        batch = createBatch();\n                        for (const record of records) {\n                            batch.write(record);\n                        }\n                        records = [];\n                    }\n                }\n            };\n            const handleEnd = () => {\n                if (batch) {\n                    batch.end();\n                }\n                else {\n                    const ids = records.map((record) => record.Id);\n                    if (records.length > thresholdNum && bulkApiVersion === 2) {\n                        this._conn.bulk2\n                            .loadAndWaitForResults({\n                            object: type_,\n                            operation: 'delete',\n                            input: records,\n                        })\n                            .then((allResults) => resolve(this.mapBulkV2ResultsToSaveResults(allResults)), reject);\n                    }\n                    else {\n                        this._conn\n                            .sobject(type_)\n                            .destroy(ids, { allowRecursive: true })\n                            .then(resolve, reject);\n                    }\n                }\n            };\n            this.stream('record')\n                .on('data', handleRecord)\n                .on('end', handleEnd)\n                .on('error', reject);\n        });\n    }\n    /**\n     * Synonym of Query#destroy()\n     */\n    delete = this.destroy;\n    /**\n     * Synonym of Query#destroy()\n     */\n    del = this.destroy;\n    update(mapping, type, options) {\n        if (typeof type === 'object' && type !== null) {\n            options = type;\n            type = undefined;\n        }\n        options = options || {};\n        const type_ = type || (this._config && this._config.table);\n        if (!type_) {\n            throw new Error('SOQL based query needs SObject type information to bulk update.');\n        }\n        const updateStream = typeof mapping === 'function'\n            ? record_stream_1.default.map(mapping)\n            : record_stream_1.default.recordMapStream(mapping, options.skipRecordTemplateEval);\n        // Set the threshold number to pass to bulk API\n        const thresholdNum = options.allowBulk === false\n            ? -1\n            : typeof options.bulkThreshold === 'number'\n                ? options.bulkThreshold\n                : // determine threshold if the connection version supports SObject collection API or not\n                    this._conn._ensureVersion(42)\n                        ? DEFAULT_BULK_THRESHOLD\n                        : this._conn._maxRequest / 2;\n        const bulkApiVersion = options.bulkApiVersion ?? DEFAULT_BULK_API_VERSION;\n        return new Promise((resolve, reject) => {\n            const createBatch = () => this._conn\n                .sobject(type_)\n                .updateBulk()\n                .on('response', resolve)\n                .on('error', reject);\n            let records = [];\n            let batch = null;\n            const handleRecord = (record) => {\n                if (batch) {\n                    batch.write(record);\n                }\n                else {\n                    records.push(record);\n                }\n                if (thresholdNum >= 0 &&\n                    records.length > thresholdNum &&\n                    bulkApiVersion === 1) {\n                    // Use bulk update instead of SObject REST API\n                    batch = createBatch();\n                    for (const record of records) {\n                        batch.write(record);\n                    }\n                    records = [];\n                }\n            };\n            const handleEnd = () => {\n                if (batch) {\n                    batch.end();\n                }\n                else {\n                    if (records.length > thresholdNum && bulkApiVersion === 2) {\n                        this._conn.bulk2\n                            .loadAndWaitForResults({\n                            object: type_,\n                            operation: 'update',\n                            input: records,\n                        })\n                            .then((allResults) => resolve(this.mapBulkV2ResultsToSaveResults(allResults)), reject);\n                    }\n                    else {\n                        this._conn\n                            .sobject(type_)\n                            .update(records, { allowRecursive: true })\n                            .then(resolve, reject);\n                    }\n                }\n            };\n            this.stream('record')\n                .on('error', reject)\n                .pipe(updateStream)\n                .on('data', handleRecord)\n                .on('end', handleEnd)\n                .on('error', reject);\n        });\n    }\n    mapBulkV2ResultsToSaveResults(bulkJobAllResults) {\n        const successSaveResults = bulkJobAllResults.successfulResults.map((r) => {\n            const saveResult = {\n                id: r.sf__Id,\n                success: true,\n                errors: [],\n            };\n            return saveResult;\n        });\n        const failedSaveResults = bulkJobAllResults.failedResults.map((r) => {\n            const saveResult = {\n                success: false,\n                errors: [\n                    {\n                        errorCode: r.sf__Error,\n                        message: r.sf__Error,\n                    },\n                ],\n            };\n            return saveResult;\n        });\n        return [...successSaveResults, ...failedSaveResults];\n    }\n    /**\n     * Fetches all records for a subquery field by following nextRecordsUrl\n     * @private\n     */\n    async _fetchAllSubqueryRecords(record, fieldName, headers) {\n        const subqueryField = record[fieldName];\n        if (!subqueryField || !subqueryField.records) {\n            return [];\n        }\n        let allRecords = [...subqueryField.records];\n        let nextRecordsUrl = subqueryField.nextRecordsUrl;\n        while (nextRecordsUrl) {\n            // When following nextRecordsUrl for a subquery, we need to preserve the relationship context\n            // by using the full URL as-is rather than trying to reconstruct it\n            const data = await this._conn.request({\n                method: 'GET',\n                url: nextRecordsUrl,\n                headers\n            });\n            allRecords = allRecords.concat(data.records);\n            nextRecordsUrl = data.nextRecordsUrl;\n        }\n        return allRecords;\n    }\n}\nexports.Query = Query;\n/*--------------------------------------------*/\n/**\n * SubQuery object for representing child relationship query\n */\nclass SubQuery {\n    _relName;\n    _query;\n    _parent;\n    /**\n     *\n     */\n    constructor(conn, relName, config, parent) {\n        this._relName = relName;\n        this._query = new Query(conn, config);\n        this._parent = parent;\n    }\n    /**\n     *\n     */\n    select(fields) {\n        // force convert query record type without changing instance\n        this._query = this._query.select(fields);\n        return this;\n    }\n    /**\n     *\n     */\n    where(conditions) {\n        this._query = this._query.where(conditions);\n        return this;\n    }\n    /**\n     * Limit the returning result\n     */\n    limit(limit) {\n        this._query = this._query.limit(limit);\n        return this;\n    }\n    /**\n     * Skip records\n     */\n    skip(offset) {\n        this._query = this._query.skip(offset);\n        return this;\n    }\n    /**\n     * Synonym of SubQuery#skip()\n     */\n    offset = this.skip;\n    sort(sort, dir) {\n        this._query = this._query.sort(sort, dir);\n        return this;\n    }\n    /**\n     * Synonym of SubQuery#sort()\n     */\n    orderby = this.sort;\n    /**\n     *\n     */\n    async _expandFields() {\n        const sobject = await this._parent._findRelationObject(this._relName);\n        return this._query._expandFields(sobject);\n    }\n    /**\n     * Back the context to parent query object\n     */\n    end() {\n        return this._parent;\n    }\n}\nexports.SubQuery = SubQuery;\nexports[\"default\"] = Query;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/query.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/quick-action.js":
/*!**************************************************!*\
  !*** ./node_modules/jsforce/lib/quick-action.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.QuickAction = void 0;\n/**\n * A class for quick action\n */\nclass QuickAction {\n    _conn;\n    _path;\n    /**\n     *\n     */\n    constructor(conn, path) {\n        this._conn = conn;\n        this._path = path;\n    }\n    /**\n     * Describe the action's information (including layout, etc.)\n     */\n    async describe() {\n        const url = `${this._path}/describe`;\n        const body = await this._conn.request(url);\n        return body;\n    }\n    /**\n     * Retrieve default field values in the action (for given record, if specified)\n     */\n    async defaultValues(contextId) {\n        let url = `${this._path}/defaultValues`;\n        if (contextId) {\n            url += `/${contextId}`;\n        }\n        const body = await this._conn.request(url);\n        return body;\n    }\n    /**\n     * Execute the action for given context Id and record information\n     */\n    async execute(contextId, record) {\n        const requestBody = { contextId, record };\n        const resBody = await this._conn.requestPost(this._path, requestBody);\n        return resBody;\n    }\n}\nexports.QuickAction = QuickAction;\nexports[\"default\"] = QuickAction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvcXVpY2stYWN0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLFdBQVc7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsV0FBVztBQUNoQztBQUNBLHVCQUF1QixVQUFVO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIsa0JBQWUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uZXpvYmVuYXJkaS9BSV9zdHVmZi9PbmJvYXJkaW5nUG9ydGFsL25vZGVfbW9kdWxlcy9qc2ZvcmNlL2xpYi9xdWljay1hY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlF1aWNrQWN0aW9uID0gdm9pZCAwO1xuLyoqXG4gKiBBIGNsYXNzIGZvciBxdWljayBhY3Rpb25cbiAqL1xuY2xhc3MgUXVpY2tBY3Rpb24ge1xuICAgIF9jb25uO1xuICAgIF9wYXRoO1xuICAgIC8qKlxuICAgICAqXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY29ubiwgcGF0aCkge1xuICAgICAgICB0aGlzLl9jb25uID0gY29ubjtcbiAgICAgICAgdGhpcy5fcGF0aCA9IHBhdGg7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlc2NyaWJlIHRoZSBhY3Rpb24ncyBpbmZvcm1hdGlvbiAoaW5jbHVkaW5nIGxheW91dCwgZXRjLilcbiAgICAgKi9cbiAgICBhc3luYyBkZXNjcmliZSgpIHtcbiAgICAgICAgY29uc3QgdXJsID0gYCR7dGhpcy5fcGF0aH0vZGVzY3JpYmVgO1xuICAgICAgICBjb25zdCBib2R5ID0gYXdhaXQgdGhpcy5fY29ubi5yZXF1ZXN0KHVybCk7XG4gICAgICAgIHJldHVybiBib2R5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZSBkZWZhdWx0IGZpZWxkIHZhbHVlcyBpbiB0aGUgYWN0aW9uIChmb3IgZ2l2ZW4gcmVjb3JkLCBpZiBzcGVjaWZpZWQpXG4gICAgICovXG4gICAgYXN5bmMgZGVmYXVsdFZhbHVlcyhjb250ZXh0SWQpIHtcbiAgICAgICAgbGV0IHVybCA9IGAke3RoaXMuX3BhdGh9L2RlZmF1bHRWYWx1ZXNgO1xuICAgICAgICBpZiAoY29udGV4dElkKSB7XG4gICAgICAgICAgICB1cmwgKz0gYC8ke2NvbnRleHRJZH1gO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJvZHkgPSBhd2FpdCB0aGlzLl9jb25uLnJlcXVlc3QodXJsKTtcbiAgICAgICAgcmV0dXJuIGJvZHk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEV4ZWN1dGUgdGhlIGFjdGlvbiBmb3IgZ2l2ZW4gY29udGV4dCBJZCBhbmQgcmVjb3JkIGluZm9ybWF0aW9uXG4gICAgICovXG4gICAgYXN5bmMgZXhlY3V0ZShjb250ZXh0SWQsIHJlY29yZCkge1xuICAgICAgICBjb25zdCByZXF1ZXN0Qm9keSA9IHsgY29udGV4dElkLCByZWNvcmQgfTtcbiAgICAgICAgY29uc3QgcmVzQm9keSA9IGF3YWl0IHRoaXMuX2Nvbm4ucmVxdWVzdFBvc3QodGhpcy5fcGF0aCwgcmVxdWVzdEJvZHkpO1xuICAgICAgICByZXR1cm4gcmVzQm9keTtcbiAgICB9XG59XG5leHBvcnRzLlF1aWNrQWN0aW9uID0gUXVpY2tBY3Rpb247XG5leHBvcnRzLmRlZmF1bHQgPSBRdWlja0FjdGlvbjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/quick-action.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/record-reference.js":
/*!******************************************************!*\
  !*** ./node_modules/jsforce/lib/record-reference.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RecordReference = void 0;\n/**\n * Remote reference to record information\n */\nclass RecordReference {\n    type;\n    id;\n    _conn;\n    /**\n     *\n     */\n    constructor(conn, type, id) {\n        this._conn = conn;\n        this.type = type;\n        this.id = id;\n    }\n    /**\n     * Retrieve record field information\n     */\n    async retrieve(options) {\n        const rec = await this._conn.retrieve(this.type, this.id, options);\n        return rec;\n    }\n    /**\n     * Update record field information\n     */\n    async update(record, options) {\n        const record_ = { ...record, Id: this.id };\n        return this._conn.update(this.type, record_, options);\n    }\n    /**\n     * Delete record field\n     */\n    destroy(options) {\n        return this._conn.destroy(this.type, this.id, options);\n    }\n    /**\n     * Synonym of Record#destroy()\n     */\n    delete = this.destroy;\n    /**\n     * Synonym of Record#destroy()\n     */\n    del = this.destroy;\n    /**\n     * Get blob field as stream\n     *\n     * @param {String} fieldName - Blob field name\n     * @returns {stream.Stream}\n     */\n    blob(fieldName) {\n        const url = [\n            this._conn._baseUrl(),\n            'sobjects',\n            this.type,\n            this.id,\n            fieldName,\n        ].join('/');\n        return this._conn.request(url).stream();\n    }\n}\nexports.RecordReference = RecordReference;\nexports[\"default\"] = RecordReference;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvcmVjb3JkLXJlZmVyZW5jZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCLGtCQUFlIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvcmVjb3JkLXJlZmVyZW5jZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmVjb3JkUmVmZXJlbmNlID0gdm9pZCAwO1xuLyoqXG4gKiBSZW1vdGUgcmVmZXJlbmNlIHRvIHJlY29yZCBpbmZvcm1hdGlvblxuICovXG5jbGFzcyBSZWNvcmRSZWZlcmVuY2Uge1xuICAgIHR5cGU7XG4gICAgaWQ7XG4gICAgX2Nvbm47XG4gICAgLyoqXG4gICAgICpcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb25uLCB0eXBlLCBpZCkge1xuICAgICAgICB0aGlzLl9jb25uID0gY29ubjtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZSByZWNvcmQgZmllbGQgaW5mb3JtYXRpb25cbiAgICAgKi9cbiAgICBhc3luYyByZXRyaWV2ZShvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHJlYyA9IGF3YWl0IHRoaXMuX2Nvbm4ucmV0cmlldmUodGhpcy50eXBlLCB0aGlzLmlkLCBvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIHJlYztcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXBkYXRlIHJlY29yZCBmaWVsZCBpbmZvcm1hdGlvblxuICAgICAqL1xuICAgIGFzeW5jIHVwZGF0ZShyZWNvcmQsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgcmVjb3JkXyA9IHsgLi4ucmVjb3JkLCBJZDogdGhpcy5pZCB9O1xuICAgICAgICByZXR1cm4gdGhpcy5fY29ubi51cGRhdGUodGhpcy50eXBlLCByZWNvcmRfLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIHJlY29yZCBmaWVsZFxuICAgICAqL1xuICAgIGRlc3Ryb3kob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY29ubi5kZXN0cm95KHRoaXMudHlwZSwgdGhpcy5pZCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN5bm9ueW0gb2YgUmVjb3JkI2Rlc3Ryb3koKVxuICAgICAqL1xuICAgIGRlbGV0ZSA9IHRoaXMuZGVzdHJveTtcbiAgICAvKipcbiAgICAgKiBTeW5vbnltIG9mIFJlY29yZCNkZXN0cm95KClcbiAgICAgKi9cbiAgICBkZWwgPSB0aGlzLmRlc3Ryb3k7XG4gICAgLyoqXG4gICAgICogR2V0IGJsb2IgZmllbGQgYXMgc3RyZWFtXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gZmllbGROYW1lIC0gQmxvYiBmaWVsZCBuYW1lXG4gICAgICogQHJldHVybnMge3N0cmVhbS5TdHJlYW19XG4gICAgICovXG4gICAgYmxvYihmaWVsZE5hbWUpIHtcbiAgICAgICAgY29uc3QgdXJsID0gW1xuICAgICAgICAgICAgdGhpcy5fY29ubi5fYmFzZVVybCgpLFxuICAgICAgICAgICAgJ3NvYmplY3RzJyxcbiAgICAgICAgICAgIHRoaXMudHlwZSxcbiAgICAgICAgICAgIHRoaXMuaWQsXG4gICAgICAgICAgICBmaWVsZE5hbWUsXG4gICAgICAgIF0uam9pbignLycpO1xuICAgICAgICByZXR1cm4gdGhpcy5fY29ubi5yZXF1ZXN0KHVybCkuc3RyZWFtKCk7XG4gICAgfVxufVxuZXhwb3J0cy5SZWNvcmRSZWZlcmVuY2UgPSBSZWNvcmRSZWZlcmVuY2U7XG5leHBvcnRzLmRlZmF1bHQgPSBSZWNvcmRSZWZlcmVuY2U7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/record-reference.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/record-stream.js":
/*!***************************************************!*\
  !*** ./node_modules/jsforce/lib/record-stream.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Parsable = exports.Serializable = exports.RecordStream = void 0;\n/**\n * @file Represents stream that handles Salesforce record as stream data\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst csv_1 = __webpack_require__(/*! ./csv */ \"(rsc)/./node_modules/jsforce/lib/csv.js\");\nconst stream_2 = __webpack_require__(/*! ./util/stream */ \"(rsc)/./node_modules/jsforce/lib/util/stream.js\");\n/**\n * @private\n */\nfunction evalMapping(value, mapping) {\n    if (typeof value === 'string') {\n        const m = /^\\$\\{(\\w+)\\}$/.exec(value);\n        if (m) {\n            return mapping[m[1]];\n        }\n        return value.replace(/\\$\\{(\\w+)\\}/g, ($0, prop) => {\n            const v = mapping[prop];\n            return typeof v === 'undefined' || v === null ? '' : String(v);\n        });\n    }\n    return value;\n}\n/**\n * @private\n */\nfunction convertRecordForSerialization(record, options = {}) {\n    return Object.keys(record).reduce((rec, key) => {\n        const value = rec[key];\n        let urec;\n        if (key === 'attributes') {\n            // 'attributes' prop will be ignored\n            urec = { ...rec };\n            delete urec[key];\n            return urec;\n        }\n        else if (options.nullValue && value === null) {\n            return { ...rec, [key]: options.nullValue };\n        }\n        else if (value !== null && typeof value === 'object') {\n            const precord = convertRecordForSerialization(value, options);\n            return Object.keys(precord).reduce((prec, pkey) => {\n                prec[`${key}.${pkey}`] = precord[pkey]; // eslint-disable-line no-param-reassign\n                return prec;\n            }, { ...rec });\n        }\n        return rec;\n    }, record);\n}\n/**\n * @private\n */\nfunction createPipelineStream(s1, s2) {\n    s1.pipe(s2);\n    return (0, stream_2.concatStreamsAsDuplex)(s1, s2, { writableObjectMode: true });\n}\n/**\n * @private\n */\nconst CSVStreamConverter = {\n    serialize(options = {}) {\n        const { nullValue, ...csvOpts } = options;\n        return createPipelineStream(\n        // eslint-disable-next-line no-use-before-define\n        RecordStream.map((record) => convertRecordForSerialization(record, options)), (0, csv_1.serializeCSVStream)(csvOpts));\n    },\n    parse(options = {}) {\n        return (0, csv_1.parseCSVStream)(options);\n    },\n};\n/**\n * @private\n */\nconst DataStreamConverters = {\n    csv: CSVStreamConverter,\n};\n/**\n * Class for Record Stream\n *\n * @class\n * @constructor\n * @extends stream.Transform\n */\nclass RecordStream extends stream_1.PassThrough {\n    /**\n     *\n     */\n    constructor() {\n        super({ objectMode: true });\n    }\n    /**\n     * Get record stream of queried records applying the given mapping function\n     */\n    map(fn) {\n        return this.pipe(RecordStream.map(fn));\n    }\n    /**\n     * Get record stream of queried records, applying the given filter function\n     */\n    filter(fn) {\n        return this.pipe(RecordStream.filter(fn));\n    }\n    /* @override */\n    on(ev, fn) {\n        return super.on(ev === 'record' ? 'data' : ev, fn);\n    }\n    /* @override */\n    addListener = this.on;\n    /* --------------------------------------------------- */\n    /**\n     * Create a record stream which maps records and pass them to downstream\n     */\n    static map(fn) {\n        const mapStream = new stream_1.Transform({\n            objectMode: true,\n            transform(record, enc, callback) {\n                const rec = fn(record) || record; // if not returned record, use same record\n                mapStream.push(rec);\n                callback();\n            },\n        });\n        return mapStream;\n    }\n    /**\n     * Create mapping stream using given record template\n     */\n    static recordMapStream(record, noeval) {\n        return RecordStream.map((rec) => {\n            const mapped = { Id: rec.Id };\n            for (const prop of Object.keys(record)) {\n                mapped[prop] = noeval ? record[prop] : evalMapping(record[prop], rec);\n            }\n            return mapped;\n        });\n    }\n    /**\n     * Create a record stream which filters records and pass them to downstream\n     *\n     * @param {RecordFilterFunction} fn - Record filtering function\n     * @returns {RecordStream.Serializable}\n     */\n    static filter(fn) {\n        const filterStream = new stream_1.Transform({\n            objectMode: true,\n            transform(record, enc, callback) {\n                if (fn(record)) {\n                    filterStream.push(record);\n                }\n                callback();\n            },\n        });\n        return filterStream;\n    }\n}\nexports.RecordStream = RecordStream;\n/**\n * @class RecordStream.Serializable\n * @extends {RecordStream}\n */\nclass Serializable extends RecordStream {\n    _dataStreams = {};\n    /**\n     * Get readable data stream which emits serialized record data\n     */\n    stream(type = 'csv', options = {}) {\n        if (this._dataStreams[type]) {\n            return this._dataStreams[type];\n        }\n        const converter = DataStreamConverters[type];\n        if (!converter) {\n            throw new Error(`Converting [${type}] data stream is not supported.`);\n        }\n        const dataStream = new stream_1.PassThrough();\n        this.pipe(converter.serialize(options)).pipe(dataStream);\n        this._dataStreams[type] = dataStream;\n        return dataStream;\n    }\n}\nexports.Serializable = Serializable;\n/**\n * @class RecordStream.Parsable\n * @extends {RecordStream}\n */\nclass Parsable extends RecordStream {\n    _dataStreams = {};\n    _execParse = false;\n    _incomings = [];\n    /**\n     * Get writable data stream which accepts serialized record data\n     */\n    stream(type = 'csv', options = {}) {\n        if (this._dataStreams[type]) {\n            return this._dataStreams[type];\n        }\n        const converter = DataStreamConverters[type];\n        if (!converter) {\n            throw new Error(`Converting [${type}] data stream is not supported.`);\n        }\n        const dataStream = new stream_1.PassThrough();\n        const parserStream = converter.parse(options);\n        parserStream.on('error', (err) => this.emit('error', err));\n        parserStream\n            .pipe(this)\n            .pipe(new stream_1.PassThrough({ objectMode: true, highWaterMark: 500 * 1000 }));\n        if (this._execParse) {\n            dataStream.pipe(parserStream);\n        }\n        else {\n            this._incomings.push([dataStream, parserStream]);\n        }\n        this._dataStreams[type] = dataStream;\n        return dataStream;\n    }\n    /* @override */\n    on(ev, fn) {\n        if (ev === 'readable' || ev === 'record') {\n            if (!this._execParse) {\n                this._execParse = true;\n                for (const [dataStream, parserStream] of this._incomings) {\n                    dataStream.pipe(parserStream);\n                }\n            }\n        }\n        return super.on(ev, fn);\n    }\n    /* @override */\n    addListener = this.on;\n}\nexports.Parsable = Parsable;\nexports[\"default\"] = RecordStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/record-stream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/registry/base.js":
/*!***************************************************!*\
  !*** ./node_modules/jsforce/lib/registry/base.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BaseRegistry = void 0;\nconst connection_1 = __importDefault(__webpack_require__(/*! ../connection */ \"(rsc)/./node_modules/jsforce/lib/connection.js\"));\n/**\n *\n */\nclass BaseRegistry {\n    _registryConfig = {};\n    _saveConfig() {\n        throw new Error('_saveConfig must be implemented in subclass');\n    }\n    _getClients() {\n        return this._registryConfig.clients || (this._registryConfig.clients = {});\n    }\n    _getConnections() {\n        return (this._registryConfig.connections ||\n            (this._registryConfig.connections = {}));\n    }\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async getConnectionNames() {\n        return Object.keys(this._getConnections());\n    }\n    async getConnection(name) {\n        const config = await this.getConnectionConfig(name);\n        return config ? new connection_1.default(config) : null;\n    }\n    async getConnectionConfig(name) {\n        if (!name) {\n            name = this._registryConfig['default'];\n        }\n        const connections = this._getConnections();\n        const connConfig = name ? connections[name] : undefined;\n        if (!connConfig) {\n            return null;\n        }\n        const { client, ...connConfig_ } = connConfig;\n        if (client) {\n            return {\n                ...connConfig_,\n                oauth2: { ...(await this.getClientConfig(client)) },\n            };\n        }\n        return connConfig_;\n    }\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async saveConnectionConfig(name, connConfig) {\n        const connections = this._getConnections();\n        const { oauth2, ...connConfig_ } = connConfig;\n        let persistConnConfig = connConfig_;\n        if (oauth2) {\n            const clientName = this._findClientName(oauth2);\n            if (clientName) {\n                persistConnConfig = { ...persistConnConfig, client: clientName };\n            }\n            delete connConfig.oauth2;\n        }\n        connections[name] = persistConnConfig;\n        this._saveConfig();\n    }\n    _findClientName({ clientId, loginUrl }) {\n        const clients = this._getClients();\n        for (const name of Object.keys(clients)) {\n            const client = clients[name];\n            if (client.clientId === clientId &&\n                (client.loginUrl || 'https://login.salesforce.com') === loginUrl) {\n                return name;\n            }\n        }\n        return null;\n    }\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async setDefaultConnection(name) {\n        this._registryConfig['default'] = name;\n        this._saveConfig();\n    }\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async removeConnectionConfig(name) {\n        const connections = this._getConnections();\n        delete connections[name];\n        this._saveConfig();\n    }\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async getClientConfig(name) {\n        const clients = this._getClients();\n        const clientConfig = clients[name];\n        return clientConfig && { ...clientConfig };\n    }\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async getClientNames() {\n        return Object.keys(this._getClients());\n    }\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async registerClientConfig(name, clientConfig) {\n        const clients = this._getClients();\n        clients[name] = clientConfig;\n        this._saveConfig();\n    }\n}\nexports.BaseRegistry = BaseRegistry;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvcmVnaXN0cnkvYmFzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQixxQ0FBcUMsbUJBQU8sQ0FBQyxxRUFBZTtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRkFBaUY7QUFDakY7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix5QkFBeUI7QUFDekM7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHlDQUF5QztBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix5QkFBeUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG9CQUFvQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uZXpvYmVuYXJkaS9BSV9zdHVmZi9PbmJvYXJkaW5nUG9ydGFsL25vZGVfbW9kdWxlcy9qc2ZvcmNlL2xpYi9yZWdpc3RyeS9iYXNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CYXNlUmVnaXN0cnkgPSB2b2lkIDA7XG5jb25zdCBjb25uZWN0aW9uXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL2Nvbm5lY3Rpb25cIikpO1xuLyoqXG4gKlxuICovXG5jbGFzcyBCYXNlUmVnaXN0cnkge1xuICAgIF9yZWdpc3RyeUNvbmZpZyA9IHt9O1xuICAgIF9zYXZlQ29uZmlnKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ19zYXZlQ29uZmlnIG11c3QgYmUgaW1wbGVtZW50ZWQgaW4gc3ViY2xhc3MnKTtcbiAgICB9XG4gICAgX2dldENsaWVudHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9yZWdpc3RyeUNvbmZpZy5jbGllbnRzIHx8ICh0aGlzLl9yZWdpc3RyeUNvbmZpZy5jbGllbnRzID0ge30pO1xuICAgIH1cbiAgICBfZ2V0Q29ubmVjdGlvbnMoKSB7XG4gICAgICAgIHJldHVybiAodGhpcy5fcmVnaXN0cnlDb25maWcuY29ubmVjdGlvbnMgfHxcbiAgICAgICAgICAgICh0aGlzLl9yZWdpc3RyeUNvbmZpZy5jb25uZWN0aW9ucyA9IHt9KSk7XG4gICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvcmVxdWlyZS1hd2FpdFxuICAgIGFzeW5jIGdldENvbm5lY3Rpb25OYW1lcygpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuX2dldENvbm5lY3Rpb25zKCkpO1xuICAgIH1cbiAgICBhc3luYyBnZXRDb25uZWN0aW9uKG5hbWUpIHtcbiAgICAgICAgY29uc3QgY29uZmlnID0gYXdhaXQgdGhpcy5nZXRDb25uZWN0aW9uQ29uZmlnKG5hbWUpO1xuICAgICAgICByZXR1cm4gY29uZmlnID8gbmV3IGNvbm5lY3Rpb25fMS5kZWZhdWx0KGNvbmZpZykgOiBudWxsO1xuICAgIH1cbiAgICBhc3luYyBnZXRDb25uZWN0aW9uQ29uZmlnKG5hbWUpIHtcbiAgICAgICAgaWYgKCFuYW1lKSB7XG4gICAgICAgICAgICBuYW1lID0gdGhpcy5fcmVnaXN0cnlDb25maWdbJ2RlZmF1bHQnXTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb25uZWN0aW9ucyA9IHRoaXMuX2dldENvbm5lY3Rpb25zKCk7XG4gICAgICAgIGNvbnN0IGNvbm5Db25maWcgPSBuYW1lID8gY29ubmVjdGlvbnNbbmFtZV0gOiB1bmRlZmluZWQ7XG4gICAgICAgIGlmICghY29ubkNvbmZpZykge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgeyBjbGllbnQsIC4uLmNvbm5Db25maWdfIH0gPSBjb25uQ29uZmlnO1xuICAgICAgICBpZiAoY2xpZW50KSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLmNvbm5Db25maWdfLFxuICAgICAgICAgICAgICAgIG9hdXRoMjogeyAuLi4oYXdhaXQgdGhpcy5nZXRDbGllbnRDb25maWcoY2xpZW50KSkgfSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNvbm5Db25maWdfO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3JlcXVpcmUtYXdhaXRcbiAgICBhc3luYyBzYXZlQ29ubmVjdGlvbkNvbmZpZyhuYW1lLCBjb25uQ29uZmlnKSB7XG4gICAgICAgIGNvbnN0IGNvbm5lY3Rpb25zID0gdGhpcy5fZ2V0Q29ubmVjdGlvbnMoKTtcbiAgICAgICAgY29uc3QgeyBvYXV0aDIsIC4uLmNvbm5Db25maWdfIH0gPSBjb25uQ29uZmlnO1xuICAgICAgICBsZXQgcGVyc2lzdENvbm5Db25maWcgPSBjb25uQ29uZmlnXztcbiAgICAgICAgaWYgKG9hdXRoMikge1xuICAgICAgICAgICAgY29uc3QgY2xpZW50TmFtZSA9IHRoaXMuX2ZpbmRDbGllbnROYW1lKG9hdXRoMik7XG4gICAgICAgICAgICBpZiAoY2xpZW50TmFtZSkge1xuICAgICAgICAgICAgICAgIHBlcnNpc3RDb25uQ29uZmlnID0geyAuLi5wZXJzaXN0Q29ubkNvbmZpZywgY2xpZW50OiBjbGllbnROYW1lIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZWxldGUgY29ubkNvbmZpZy5vYXV0aDI7XG4gICAgICAgIH1cbiAgICAgICAgY29ubmVjdGlvbnNbbmFtZV0gPSBwZXJzaXN0Q29ubkNvbmZpZztcbiAgICAgICAgdGhpcy5fc2F2ZUNvbmZpZygpO1xuICAgIH1cbiAgICBfZmluZENsaWVudE5hbWUoeyBjbGllbnRJZCwgbG9naW5VcmwgfSkge1xuICAgICAgICBjb25zdCBjbGllbnRzID0gdGhpcy5fZ2V0Q2xpZW50cygpO1xuICAgICAgICBmb3IgKGNvbnN0IG5hbWUgb2YgT2JqZWN0LmtleXMoY2xpZW50cykpIHtcbiAgICAgICAgICAgIGNvbnN0IGNsaWVudCA9IGNsaWVudHNbbmFtZV07XG4gICAgICAgICAgICBpZiAoY2xpZW50LmNsaWVudElkID09PSBjbGllbnRJZCAmJlxuICAgICAgICAgICAgICAgIChjbGllbnQubG9naW5VcmwgfHwgJ2h0dHBzOi8vbG9naW4uc2FsZXNmb3JjZS5jb20nKSA9PT0gbG9naW5VcmwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmFtZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9yZXF1aXJlLWF3YWl0XG4gICAgYXN5bmMgc2V0RGVmYXVsdENvbm5lY3Rpb24obmFtZSkge1xuICAgICAgICB0aGlzLl9yZWdpc3RyeUNvbmZpZ1snZGVmYXVsdCddID0gbmFtZTtcbiAgICAgICAgdGhpcy5fc2F2ZUNvbmZpZygpO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3JlcXVpcmUtYXdhaXRcbiAgICBhc3luYyByZW1vdmVDb25uZWN0aW9uQ29uZmlnKG5hbWUpIHtcbiAgICAgICAgY29uc3QgY29ubmVjdGlvbnMgPSB0aGlzLl9nZXRDb25uZWN0aW9ucygpO1xuICAgICAgICBkZWxldGUgY29ubmVjdGlvbnNbbmFtZV07XG4gICAgICAgIHRoaXMuX3NhdmVDb25maWcoKTtcbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9yZXF1aXJlLWF3YWl0XG4gICAgYXN5bmMgZ2V0Q2xpZW50Q29uZmlnKG5hbWUpIHtcbiAgICAgICAgY29uc3QgY2xpZW50cyA9IHRoaXMuX2dldENsaWVudHMoKTtcbiAgICAgICAgY29uc3QgY2xpZW50Q29uZmlnID0gY2xpZW50c1tuYW1lXTtcbiAgICAgICAgcmV0dXJuIGNsaWVudENvbmZpZyAmJiB7IC4uLmNsaWVudENvbmZpZyB9O1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3JlcXVpcmUtYXdhaXRcbiAgICBhc3luYyBnZXRDbGllbnROYW1lcygpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuX2dldENsaWVudHMoKSk7XG4gICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvcmVxdWlyZS1hd2FpdFxuICAgIGFzeW5jIHJlZ2lzdGVyQ2xpZW50Q29uZmlnKG5hbWUsIGNsaWVudENvbmZpZykge1xuICAgICAgICBjb25zdCBjbGllbnRzID0gdGhpcy5fZ2V0Q2xpZW50cygpO1xuICAgICAgICBjbGllbnRzW25hbWVdID0gY2xpZW50Q29uZmlnO1xuICAgICAgICB0aGlzLl9zYXZlQ29uZmlnKCk7XG4gICAgfVxufVxuZXhwb3J0cy5CYXNlUmVnaXN0cnkgPSBCYXNlUmVnaXN0cnk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/registry/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/registry/empty.js":
/*!****************************************************!*\
  !*** ./node_modules/jsforce/lib/registry/empty.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EmptyRegistry = void 0;\nconst base_1 = __webpack_require__(/*! ./base */ \"(rsc)/./node_modules/jsforce/lib/registry/base.js\");\n/**\n *\n */\nclass EmptyRegistry extends base_1.BaseRegistry {\n    _saveConfig() {\n        // ignore all call requests\n    }\n}\nexports.EmptyRegistry = EmptyRegistry;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvcmVnaXN0cnkvZW1wdHkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLGVBQWUsbUJBQU8sQ0FBQyxpRUFBUTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvcmVnaXN0cnkvZW1wdHkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkVtcHR5UmVnaXN0cnkgPSB2b2lkIDA7XG5jb25zdCBiYXNlXzEgPSByZXF1aXJlKFwiLi9iYXNlXCIpO1xuLyoqXG4gKlxuICovXG5jbGFzcyBFbXB0eVJlZ2lzdHJ5IGV4dGVuZHMgYmFzZV8xLkJhc2VSZWdpc3RyeSB7XG4gICAgX3NhdmVDb25maWcoKSB7XG4gICAgICAgIC8vIGlnbm9yZSBhbGwgY2FsbCByZXF1ZXN0c1xuICAgIH1cbn1cbmV4cG9ydHMuRW1wdHlSZWdpc3RyeSA9IEVtcHR5UmVnaXN0cnk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/registry/empty.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/registry/file.js":
/*!***************************************************!*\
  !*** ./node_modules/jsforce/lib/registry/file.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FileRegistry = void 0;\nconst fs_1 = __importDefault(__webpack_require__(/*! fs */ \"fs\"));\nconst path_1 = __importDefault(__webpack_require__(/*! path */ \"path\"));\nconst base_1 = __webpack_require__(/*! ./base */ \"(rsc)/./node_modules/jsforce/lib/registry/base.js\");\n/**\n *\n */\nfunction getDefaultConfigFilePath() {\n    const homeDir = process.env[process.platform === 'win32' ? 'USERPROFILE' : 'HOME'];\n    if (!homeDir) {\n        throw new Error('cannot find user home directory to store configuration files');\n    }\n    return path_1.default.join(homeDir, '.jsforce', 'config.json');\n}\n/**\n *\n */\nclass FileRegistry extends base_1.BaseRegistry {\n    _configFilePath;\n    constructor({ configFilePath }) {\n        super();\n        this._configFilePath = configFilePath || getDefaultConfigFilePath();\n        try {\n            const data = fs_1.default.readFileSync(this._configFilePath, 'utf-8');\n            this._registryConfig = JSON.parse(data);\n        }\n        catch (e) {\n            //\n        }\n    }\n    _saveConfig() {\n        const data = JSON.stringify(this._registryConfig, null, 4);\n        try {\n            fs_1.default.writeFileSync(this._configFilePath, data);\n            fs_1.default.chmodSync(this._configFilePath, '600');\n        }\n        catch (e) {\n            const configDir = path_1.default.dirname(this._configFilePath);\n            fs_1.default.mkdirSync(configDir);\n            fs_1.default.chmodSync(configDir, '700');\n            fs_1.default.writeFileSync(this._configFilePath, data);\n            fs_1.default.chmodSync(this._configFilePath, '600');\n        }\n    }\n}\nexports.FileRegistry = FileRegistry;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvcmVnaXN0cnkvZmlsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQiw2QkFBNkIsbUJBQU8sQ0FBQyxjQUFJO0FBQ3pDLCtCQUErQixtQkFBTyxDQUFDLGtCQUFNO0FBQzdDLGVBQWUsbUJBQU8sQ0FBQyxpRUFBUTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvcmVnaXN0cnkvZmlsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRmlsZVJlZ2lzdHJ5ID0gdm9pZCAwO1xuY29uc3QgZnNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZnNcIikpO1xuY29uc3QgcGF0aF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJwYXRoXCIpKTtcbmNvbnN0IGJhc2VfMSA9IHJlcXVpcmUoXCIuL2Jhc2VcIik7XG4vKipcbiAqXG4gKi9cbmZ1bmN0aW9uIGdldERlZmF1bHRDb25maWdGaWxlUGF0aCgpIHtcbiAgICBjb25zdCBob21lRGlyID0gcHJvY2Vzcy5lbnZbcHJvY2Vzcy5wbGF0Zm9ybSA9PT0gJ3dpbjMyJyA/ICdVU0VSUFJPRklMRScgOiAnSE9NRSddO1xuICAgIGlmICghaG9tZURpcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2Nhbm5vdCBmaW5kIHVzZXIgaG9tZSBkaXJlY3RvcnkgdG8gc3RvcmUgY29uZmlndXJhdGlvbiBmaWxlcycpO1xuICAgIH1cbiAgICByZXR1cm4gcGF0aF8xLmRlZmF1bHQuam9pbihob21lRGlyLCAnLmpzZm9yY2UnLCAnY29uZmlnLmpzb24nKTtcbn1cbi8qKlxuICpcbiAqL1xuY2xhc3MgRmlsZVJlZ2lzdHJ5IGV4dGVuZHMgYmFzZV8xLkJhc2VSZWdpc3RyeSB7XG4gICAgX2NvbmZpZ0ZpbGVQYXRoO1xuICAgIGNvbnN0cnVjdG9yKHsgY29uZmlnRmlsZVBhdGggfSkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLl9jb25maWdGaWxlUGF0aCA9IGNvbmZpZ0ZpbGVQYXRoIHx8IGdldERlZmF1bHRDb25maWdGaWxlUGF0aCgpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IGZzXzEuZGVmYXVsdC5yZWFkRmlsZVN5bmModGhpcy5fY29uZmlnRmlsZVBhdGgsICd1dGYtOCcpO1xuICAgICAgICAgICAgdGhpcy5fcmVnaXN0cnlDb25maWcgPSBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAvL1xuICAgICAgICB9XG4gICAgfVxuICAgIF9zYXZlQ29uZmlnKCkge1xuICAgICAgICBjb25zdCBkYXRhID0gSlNPTi5zdHJpbmdpZnkodGhpcy5fcmVnaXN0cnlDb25maWcsIG51bGwsIDQpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZnNfMS5kZWZhdWx0LndyaXRlRmlsZVN5bmModGhpcy5fY29uZmlnRmlsZVBhdGgsIGRhdGEpO1xuICAgICAgICAgICAgZnNfMS5kZWZhdWx0LmNobW9kU3luYyh0aGlzLl9jb25maWdGaWxlUGF0aCwgJzYwMCcpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICBjb25zdCBjb25maWdEaXIgPSBwYXRoXzEuZGVmYXVsdC5kaXJuYW1lKHRoaXMuX2NvbmZpZ0ZpbGVQYXRoKTtcbiAgICAgICAgICAgIGZzXzEuZGVmYXVsdC5ta2RpclN5bmMoY29uZmlnRGlyKTtcbiAgICAgICAgICAgIGZzXzEuZGVmYXVsdC5jaG1vZFN5bmMoY29uZmlnRGlyLCAnNzAwJyk7XG4gICAgICAgICAgICBmc18xLmRlZmF1bHQud3JpdGVGaWxlU3luYyh0aGlzLl9jb25maWdGaWxlUGF0aCwgZGF0YSk7XG4gICAgICAgICAgICBmc18xLmRlZmF1bHQuY2htb2RTeW5jKHRoaXMuX2NvbmZpZ0ZpbGVQYXRoLCAnNjAwJyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkZpbGVSZWdpc3RyeSA9IEZpbGVSZWdpc3RyeTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/registry/file.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/registry/index.js":
/*!****************************************************!*\
  !*** ./node_modules/jsforce/lib/registry/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EmptyRegistry = exports.SfdxRegistry = exports.FileRegistry = void 0;\nconst file_1 = __webpack_require__(/*! ./file */ \"(rsc)/./node_modules/jsforce/lib/registry/file.js\");\nObject.defineProperty(exports, \"FileRegistry\", ({ enumerable: true, get: function () { return file_1.FileRegistry; } }));\nconst sfdx_1 = __webpack_require__(/*! ./sfdx */ \"(rsc)/./node_modules/jsforce/lib/registry/sfdx.js\");\nObject.defineProperty(exports, \"SfdxRegistry\", ({ enumerable: true, get: function () { return sfdx_1.SfdxRegistry; } }));\nconst empty_1 = __webpack_require__(/*! ./empty */ \"(rsc)/./node_modules/jsforce/lib/registry/empty.js\");\nObject.defineProperty(exports, \"EmptyRegistry\", ({ enumerable: true, get: function () { return empty_1.EmptyRegistry; } }));\nconst logger_1 = __webpack_require__(/*! ../util/logger */ \"(rsc)/./node_modules/jsforce/lib/util/logger.js\");\nlet registry;\ntry {\n    registry =\n        process.env.JSFORCE_CONNECTION_REGISTRY === 'sfdx'\n            ? new sfdx_1.SfdxRegistry({})\n            : new file_1.FileRegistry({});\n}\ncatch (e) {\n    (0, logger_1.getLogger)('registry').error(e);\n    registry = new empty_1.EmptyRegistry();\n}\nexports[\"default\"] = registry;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvcmVnaXN0cnkvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsb0JBQW9CLEdBQUcsb0JBQW9CO0FBQ25FLGVBQWUsbUJBQU8sQ0FBQyxpRUFBUTtBQUMvQixnREFBK0MsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDdEgsZUFBZSxtQkFBTyxDQUFDLGlFQUFRO0FBQy9CLGdEQUErQyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUN0SCxnQkFBZ0IsbUJBQU8sQ0FBQyxtRUFBUztBQUNqQyxpREFBZ0QsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDekgsaUJBQWlCLG1CQUFPLENBQUMsdUVBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uZXpvYmVuYXJkaS9BSV9zdHVmZi9PbmJvYXJkaW5nUG9ydGFsL25vZGVfbW9kdWxlcy9qc2ZvcmNlL2xpYi9yZWdpc3RyeS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRW1wdHlSZWdpc3RyeSA9IGV4cG9ydHMuU2ZkeFJlZ2lzdHJ5ID0gZXhwb3J0cy5GaWxlUmVnaXN0cnkgPSB2b2lkIDA7XG5jb25zdCBmaWxlXzEgPSByZXF1aXJlKFwiLi9maWxlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRmlsZVJlZ2lzdHJ5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBmaWxlXzEuRmlsZVJlZ2lzdHJ5OyB9IH0pO1xuY29uc3Qgc2ZkeF8xID0gcmVxdWlyZShcIi4vc2ZkeFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNmZHhSZWdpc3RyeVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2ZkeF8xLlNmZHhSZWdpc3RyeTsgfSB9KTtcbmNvbnN0IGVtcHR5XzEgPSByZXF1aXJlKFwiLi9lbXB0eVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkVtcHR5UmVnaXN0cnlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVtcHR5XzEuRW1wdHlSZWdpc3RyeTsgfSB9KTtcbmNvbnN0IGxvZ2dlcl8xID0gcmVxdWlyZShcIi4uL3V0aWwvbG9nZ2VyXCIpO1xubGV0IHJlZ2lzdHJ5O1xudHJ5IHtcbiAgICByZWdpc3RyeSA9XG4gICAgICAgIHByb2Nlc3MuZW52LkpTRk9SQ0VfQ09OTkVDVElPTl9SRUdJU1RSWSA9PT0gJ3NmZHgnXG4gICAgICAgICAgICA/IG5ldyBzZmR4XzEuU2ZkeFJlZ2lzdHJ5KHt9KVxuICAgICAgICAgICAgOiBuZXcgZmlsZV8xLkZpbGVSZWdpc3RyeSh7fSk7XG59XG5jYXRjaCAoZSkge1xuICAgICgwLCBsb2dnZXJfMS5nZXRMb2dnZXIpKCdyZWdpc3RyeScpLmVycm9yKGUpO1xuICAgIHJlZ2lzdHJ5ID0gbmV3IGVtcHR5XzEuRW1wdHlSZWdpc3RyeSgpO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gcmVnaXN0cnk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/registry/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/registry/sfdx.js":
/*!***************************************************!*\
  !*** ./node_modules/jsforce/lib/registry/sfdx.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SfdxRegistry = void 0;\nconst child_process_1 = __webpack_require__(/*! child_process */ \"child_process\");\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst connection_1 = __importDefault(__webpack_require__(/*! ../connection */ \"(rsc)/./node_modules/jsforce/lib/connection.js\"));\nfunction isNotNullOrUndefined(v) {\n    return v != null;\n}\n/**\n *\n */\nclass SfdxRegistry {\n    _cliPath;\n    _orgList;\n    _orgInfoMap = {};\n    _defaultOrgInfo;\n    constructor({ cliPath }) {\n        this._cliPath = cliPath;\n    }\n    _createCommand(command, options = {}, args = []) {\n        return `${this._cliPath ? this._cliPath + '/' : ''}sfdx ${command} ${Object.keys(options)\n            .map((option) => `${option.length > 1 ? '--' : '-'}${option}${options[option] != null ? ' ' + options[option] : ''}`)\n            .join(' ')} --json ${args.join(' ')}`;\n    }\n    async _execCommand(command, options = {}, args = []) {\n        const cmd = this._createCommand(command, options, args);\n        const buf = await new Promise((resolve, reject) => {\n            (0, child_process_1.exec)(cmd, (err, ret) => {\n                if (err && !ret) {\n                    reject(err);\n                }\n                else {\n                    resolve(ret);\n                }\n            });\n        });\n        const body = (0, util_1.stripVTControlCharacters)(buf.toString());\n        let ret;\n        try {\n            ret = JSON.parse(body);\n        }\n        catch (e) {\n            throw new Error(`Unexpectedd output from Sfdx cli: ${body}`);\n        }\n        if (ret.status === 0 && ret.result) {\n            return ret.result;\n        }\n        else {\n            const err = new Error(ret.message);\n            err.name = ret.name;\n            throw err;\n        }\n    }\n    async _getOrgList() {\n        if (!this._orgList) {\n            this._orgList = this._execCommand('force:org:list');\n        }\n        return this._orgList;\n    }\n    async getConnectionNames() {\n        const { nonScratchOrgs, scratchOrgs } = await this._getOrgList();\n        return [\n            ...nonScratchOrgs.map((o) => o.alias).filter(isNotNullOrUndefined),\n            ...scratchOrgs.map((o) => o.alias).filter(isNotNullOrUndefined),\n            ...nonScratchOrgs.map((o) => o.username),\n            ...scratchOrgs.map((o) => o.username),\n        ];\n    }\n    async getConnection(name) {\n        const config = await this.getConnectionConfig(name);\n        return config ? new connection_1.default(config) : null;\n    }\n    async _getOrgInfo(username) {\n        const options = username ? { u: username } : {};\n        if (!username || !this._orgInfoMap[username]) {\n            const pOrgInfo = this._execCommand('force:org:display', options);\n            this._memoOrgInfo(pOrgInfo, username);\n        }\n        const orgInfo = username\n            ? this._orgInfoMap[username]\n            : this._defaultOrgInfo;\n        if (!orgInfo) {\n            throw new Error('no orginfo found');\n        }\n        return orgInfo;\n    }\n    _memoOrgInfo(pOrgInfo, username) {\n        const pOrgInfo_ = pOrgInfo.then((orgInfo) => {\n            this._orgInfoMap[orgInfo.username] = pOrgInfo_;\n            if (orgInfo.alias) {\n                this._orgInfoMap[orgInfo.alias] = pOrgInfo_;\n            }\n            return orgInfo;\n        });\n        if (username) {\n            this._orgInfoMap[username] = pOrgInfo_;\n        }\n        else {\n            this._defaultOrgInfo = pOrgInfo_;\n        }\n    }\n    async getConnectionConfig(name) {\n        const orgInfo = await this._getOrgInfo(name);\n        if (!orgInfo) {\n            return null;\n        }\n        const { accessToken, instanceUrl, loginUrl } = orgInfo;\n        return { accessToken, instanceUrl, loginUrl };\n    }\n    async saveConnectionConfig(_name, _connConfig) {\n        // nothing to do\n    }\n    async setDefaultConnection(_name) {\n        // nothing to do\n    }\n    async removeConnectionConfig(name) {\n        await this._execCommand('force:org:delete', { u: name });\n    }\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async getClientConfig(_name) {\n        return null;\n    }\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async getClientNames() {\n        return [];\n    }\n    async registerClientConfig(_name, _clientConfig) {\n        // nothing to do\n    }\n}\nexports.SfdxRegistry = SfdxRegistry;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvcmVnaXN0cnkvc2ZkeC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQix3QkFBd0IsbUJBQU8sQ0FBQyxvQ0FBZTtBQUMvQyxlQUFlLG1CQUFPLENBQUMsa0JBQU07QUFDN0IscUNBQXFDLG1CQUFPLENBQUMscUVBQWU7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixTQUFTO0FBQzNCO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEMsa0JBQWtCLHlDQUF5QyxPQUFPLFNBQVMsRUFBRTtBQUM3RSxnQ0FBZ0MsK0JBQStCLEVBQUUsT0FBTyxFQUFFLHFEQUFxRDtBQUMvSCx3QkFBd0IsU0FBUyxlQUFlO0FBQ2hEO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLEtBQUs7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw4QkFBOEI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLGNBQWM7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHFDQUFxQztBQUNyRCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxTQUFTO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvcmVnaXN0cnkvc2ZkeC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2ZkeFJlZ2lzdHJ5ID0gdm9pZCAwO1xuY29uc3QgY2hpbGRfcHJvY2Vzc18xID0gcmVxdWlyZShcImNoaWxkX3Byb2Nlc3NcIik7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwidXRpbFwiKTtcbmNvbnN0IGNvbm5lY3Rpb25fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vY29ubmVjdGlvblwiKSk7XG5mdW5jdGlvbiBpc05vdE51bGxPclVuZGVmaW5lZCh2KSB7XG4gICAgcmV0dXJuIHYgIT0gbnVsbDtcbn1cbi8qKlxuICpcbiAqL1xuY2xhc3MgU2ZkeFJlZ2lzdHJ5IHtcbiAgICBfY2xpUGF0aDtcbiAgICBfb3JnTGlzdDtcbiAgICBfb3JnSW5mb01hcCA9IHt9O1xuICAgIF9kZWZhdWx0T3JnSW5mbztcbiAgICBjb25zdHJ1Y3Rvcih7IGNsaVBhdGggfSkge1xuICAgICAgICB0aGlzLl9jbGlQYXRoID0gY2xpUGF0aDtcbiAgICB9XG4gICAgX2NyZWF0ZUNvbW1hbmQoY29tbWFuZCwgb3B0aW9ucyA9IHt9LCBhcmdzID0gW10pIHtcbiAgICAgICAgcmV0dXJuIGAke3RoaXMuX2NsaVBhdGggPyB0aGlzLl9jbGlQYXRoICsgJy8nIDogJyd9c2ZkeCAke2NvbW1hbmR9ICR7T2JqZWN0LmtleXMob3B0aW9ucylcbiAgICAgICAgICAgIC5tYXAoKG9wdGlvbikgPT4gYCR7b3B0aW9uLmxlbmd0aCA+IDEgPyAnLS0nIDogJy0nfSR7b3B0aW9ufSR7b3B0aW9uc1tvcHRpb25dICE9IG51bGwgPyAnICcgKyBvcHRpb25zW29wdGlvbl0gOiAnJ31gKVxuICAgICAgICAgICAgLmpvaW4oJyAnKX0gLS1qc29uICR7YXJncy5qb2luKCcgJyl9YDtcbiAgICB9XG4gICAgYXN5bmMgX2V4ZWNDb21tYW5kKGNvbW1hbmQsIG9wdGlvbnMgPSB7fSwgYXJncyA9IFtdKSB7XG4gICAgICAgIGNvbnN0IGNtZCA9IHRoaXMuX2NyZWF0ZUNvbW1hbmQoY29tbWFuZCwgb3B0aW9ucywgYXJncyk7XG4gICAgICAgIGNvbnN0IGJ1ZiA9IGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgICgwLCBjaGlsZF9wcm9jZXNzXzEuZXhlYykoY21kLCAoZXJyLCByZXQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyICYmICFyZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJldCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBib2R5ID0gKDAsIHV0aWxfMS5zdHJpcFZUQ29udHJvbENoYXJhY3RlcnMpKGJ1Zi50b1N0cmluZygpKTtcbiAgICAgICAgbGV0IHJldDtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldCA9IEpTT04ucGFyc2UoYm9keSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZGQgb3V0cHV0IGZyb20gU2ZkeCBjbGk6ICR7Ym9keX1gKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocmV0LnN0YXR1cyA9PT0gMCAmJiByZXQucmVzdWx0KSB7XG4gICAgICAgICAgICByZXR1cm4gcmV0LnJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcihyZXQubWVzc2FnZSk7XG4gICAgICAgICAgICBlcnIubmFtZSA9IHJldC5uYW1lO1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIF9nZXRPcmdMaXN0KCkge1xuICAgICAgICBpZiAoIXRoaXMuX29yZ0xpc3QpIHtcbiAgICAgICAgICAgIHRoaXMuX29yZ0xpc3QgPSB0aGlzLl9leGVjQ29tbWFuZCgnZm9yY2U6b3JnOmxpc3QnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fb3JnTGlzdDtcbiAgICB9XG4gICAgYXN5bmMgZ2V0Q29ubmVjdGlvbk5hbWVzKCkge1xuICAgICAgICBjb25zdCB7IG5vblNjcmF0Y2hPcmdzLCBzY3JhdGNoT3JncyB9ID0gYXdhaXQgdGhpcy5fZ2V0T3JnTGlzdCgpO1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgLi4ubm9uU2NyYXRjaE9yZ3MubWFwKChvKSA9PiBvLmFsaWFzKS5maWx0ZXIoaXNOb3ROdWxsT3JVbmRlZmluZWQpLFxuICAgICAgICAgICAgLi4uc2NyYXRjaE9yZ3MubWFwKChvKSA9PiBvLmFsaWFzKS5maWx0ZXIoaXNOb3ROdWxsT3JVbmRlZmluZWQpLFxuICAgICAgICAgICAgLi4ubm9uU2NyYXRjaE9yZ3MubWFwKChvKSA9PiBvLnVzZXJuYW1lKSxcbiAgICAgICAgICAgIC4uLnNjcmF0Y2hPcmdzLm1hcCgobykgPT4gby51c2VybmFtZSksXG4gICAgICAgIF07XG4gICAgfVxuICAgIGFzeW5jIGdldENvbm5lY3Rpb24obmFtZSkge1xuICAgICAgICBjb25zdCBjb25maWcgPSBhd2FpdCB0aGlzLmdldENvbm5lY3Rpb25Db25maWcobmFtZSk7XG4gICAgICAgIHJldHVybiBjb25maWcgPyBuZXcgY29ubmVjdGlvbl8xLmRlZmF1bHQoY29uZmlnKSA6IG51bGw7XG4gICAgfVxuICAgIGFzeW5jIF9nZXRPcmdJbmZvKHVzZXJuYW1lKSB7XG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSB1c2VybmFtZSA/IHsgdTogdXNlcm5hbWUgfSA6IHt9O1xuICAgICAgICBpZiAoIXVzZXJuYW1lIHx8ICF0aGlzLl9vcmdJbmZvTWFwW3VzZXJuYW1lXSkge1xuICAgICAgICAgICAgY29uc3QgcE9yZ0luZm8gPSB0aGlzLl9leGVjQ29tbWFuZCgnZm9yY2U6b3JnOmRpc3BsYXknLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHRoaXMuX21lbW9PcmdJbmZvKHBPcmdJbmZvLCB1c2VybmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb3JnSW5mbyA9IHVzZXJuYW1lXG4gICAgICAgICAgICA/IHRoaXMuX29yZ0luZm9NYXBbdXNlcm5hbWVdXG4gICAgICAgICAgICA6IHRoaXMuX2RlZmF1bHRPcmdJbmZvO1xuICAgICAgICBpZiAoIW9yZ0luZm8pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignbm8gb3JnaW5mbyBmb3VuZCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBvcmdJbmZvO1xuICAgIH1cbiAgICBfbWVtb09yZ0luZm8ocE9yZ0luZm8sIHVzZXJuYW1lKSB7XG4gICAgICAgIGNvbnN0IHBPcmdJbmZvXyA9IHBPcmdJbmZvLnRoZW4oKG9yZ0luZm8pID0+IHtcbiAgICAgICAgICAgIHRoaXMuX29yZ0luZm9NYXBbb3JnSW5mby51c2VybmFtZV0gPSBwT3JnSW5mb187XG4gICAgICAgICAgICBpZiAob3JnSW5mby5hbGlhcykge1xuICAgICAgICAgICAgICAgIHRoaXMuX29yZ0luZm9NYXBbb3JnSW5mby5hbGlhc10gPSBwT3JnSW5mb187XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gb3JnSW5mbztcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICh1c2VybmFtZSkge1xuICAgICAgICAgICAgdGhpcy5fb3JnSW5mb01hcFt1c2VybmFtZV0gPSBwT3JnSW5mb187XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9kZWZhdWx0T3JnSW5mbyA9IHBPcmdJbmZvXztcbiAgICAgICAgfVxuICAgIH1cbiAgICBhc3luYyBnZXRDb25uZWN0aW9uQ29uZmlnKG5hbWUpIHtcbiAgICAgICAgY29uc3Qgb3JnSW5mbyA9IGF3YWl0IHRoaXMuX2dldE9yZ0luZm8obmFtZSk7XG4gICAgICAgIGlmICghb3JnSW5mbykge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgeyBhY2Nlc3NUb2tlbiwgaW5zdGFuY2VVcmwsIGxvZ2luVXJsIH0gPSBvcmdJbmZvO1xuICAgICAgICByZXR1cm4geyBhY2Nlc3NUb2tlbiwgaW5zdGFuY2VVcmwsIGxvZ2luVXJsIH07XG4gICAgfVxuICAgIGFzeW5jIHNhdmVDb25uZWN0aW9uQ29uZmlnKF9uYW1lLCBfY29ubkNvbmZpZykge1xuICAgICAgICAvLyBub3RoaW5nIHRvIGRvXG4gICAgfVxuICAgIGFzeW5jIHNldERlZmF1bHRDb25uZWN0aW9uKF9uYW1lKSB7XG4gICAgICAgIC8vIG5vdGhpbmcgdG8gZG9cbiAgICB9XG4gICAgYXN5bmMgcmVtb3ZlQ29ubmVjdGlvbkNvbmZpZyhuYW1lKSB7XG4gICAgICAgIGF3YWl0IHRoaXMuX2V4ZWNDb21tYW5kKCdmb3JjZTpvcmc6ZGVsZXRlJywgeyB1OiBuYW1lIH0pO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3JlcXVpcmUtYXdhaXRcbiAgICBhc3luYyBnZXRDbGllbnRDb25maWcoX25hbWUpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvcmVxdWlyZS1hd2FpdFxuICAgIGFzeW5jIGdldENsaWVudE5hbWVzKCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIGFzeW5jIHJlZ2lzdGVyQ2xpZW50Q29uZmlnKF9uYW1lLCBfY2xpZW50Q29uZmlnKSB7XG4gICAgICAgIC8vIG5vdGhpbmcgdG8gZG9cbiAgICB9XG59XG5leHBvcnRzLlNmZHhSZWdpc3RyeSA9IFNmZHhSZWdpc3RyeTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/registry/sfdx.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/request-helper.js":
/*!****************************************************!*\
  !*** ./node_modules/jsforce/lib/request-helper.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.executeWithTimeout = exports.performRedirectRequest = exports.isRedirect = exports.createHttpRequestHandlerStreams = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst stream_2 = __webpack_require__(/*! ./util/stream */ \"(rsc)/./node_modules/jsforce/lib/util/stream.js\");\nconst form_data_1 = __importDefault(__webpack_require__(/*! form-data */ \"(rsc)/./node_modules/form-data/lib/form_data.js\"));\n/**\n *\n */\nfunction createHttpRequestHandlerStreams(req, options = {}) {\n    const { body: reqBody } = req;\n    const input = new stream_1.PassThrough();\n    const output = new stream_1.PassThrough();\n    const duplex = (0, stream_2.concatStreamsAsDuplex)(input, output);\n    if (typeof reqBody !== 'undefined') {\n        setTimeout(() => {\n            if (reqBody instanceof form_data_1.default) {\n                duplex.end(reqBody.getBuffer());\n            }\n            else {\n                duplex.end(reqBody, 'utf8');\n            }\n        }, 0);\n    }\n    duplex.on('response', async (res) => {\n        if (duplex.listenerCount('complete') > 0) {\n            const resBody = await (0, stream_2.readAll)(duplex, options.encoding);\n            duplex.emit('complete', {\n                ...res,\n                body: resBody,\n            });\n        }\n    });\n    return { input, output, stream: duplex };\n}\nexports.createHttpRequestHandlerStreams = createHttpRequestHandlerStreams;\nconst redirectStatuses = new Set([301, 302, 303, 307, 308]);\n/**\n *\n */\nfunction isRedirect(status) {\n    return redirectStatuses.has(status);\n}\nexports.isRedirect = isRedirect;\n/**\n *\n */\nconst MAX_REDIRECT_COUNT = 10;\n/**\n *\n */\nfunction performRedirectRequest(req, res, followRedirect, counter, redirectCallback) {\n    if (counter >= MAX_REDIRECT_COUNT) {\n        throw new Error('Reached to maximum redirect count');\n    }\n    const redirectUrl = res.headers['location'];\n    if (!redirectUrl) {\n        throw new Error('No redirect URI found');\n    }\n    const getRedirectRequest = typeof followRedirect === 'function'\n        ? followRedirect\n        : () => ({\n            method: 'GET',\n            url: redirectUrl,\n            headers: req.headers,\n        });\n    const nextReqParams = getRedirectRequest(redirectUrl);\n    if (!nextReqParams) {\n        throw new Error('Cannot handle redirect for ' + redirectUrl);\n    }\n    redirectCallback(nextReqParams);\n}\nexports.performRedirectRequest = performRedirectRequest;\n/**\n *\n */\nasync function executeWithTimeout(execFn, msec, cancelCallback) {\n    let timeout = false;\n    const pid = msec != null\n        ? setTimeout(() => {\n            timeout = true;\n            cancelCallback?.();\n        }, msec)\n        : undefined;\n    let res;\n    try {\n        res = await execFn();\n    }\n    finally {\n        if (pid) {\n            clearTimeout(pid);\n        }\n    }\n    if (timeout) {\n        throw new Error('Request Timeout');\n    }\n    return res;\n}\nexports.executeWithTimeout = executeWithTimeout;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvcmVxdWVzdC1oZWxwZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEIsR0FBRyw4QkFBOEIsR0FBRyxrQkFBa0IsR0FBRyx1Q0FBdUM7QUFDMUgsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsaUJBQWlCLG1CQUFPLENBQUMsc0VBQWU7QUFDeEMsb0NBQW9DLG1CQUFPLENBQUMsa0VBQVc7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsMERBQTBEO0FBQzFELFlBQVksZ0JBQWdCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxLQUFLO0FBQ0wsYUFBYTtBQUNiO0FBQ0EsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiIsInNvdXJjZXMiOlsiL1VzZXJzL25lem9iZW5hcmRpL0FJX3N0dWZmL09uYm9hcmRpbmdQb3J0YWwvbm9kZV9tb2R1bGVzL2pzZm9yY2UvbGliL3JlcXVlc3QtaGVscGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5leGVjdXRlV2l0aFRpbWVvdXQgPSBleHBvcnRzLnBlcmZvcm1SZWRpcmVjdFJlcXVlc3QgPSBleHBvcnRzLmlzUmVkaXJlY3QgPSBleHBvcnRzLmNyZWF0ZUh0dHBSZXF1ZXN0SGFuZGxlclN0cmVhbXMgPSB2b2lkIDA7XG5jb25zdCBzdHJlYW1fMSA9IHJlcXVpcmUoXCJzdHJlYW1cIik7XG5jb25zdCBzdHJlYW1fMiA9IHJlcXVpcmUoXCIuL3V0aWwvc3RyZWFtXCIpO1xuY29uc3QgZm9ybV9kYXRhXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImZvcm0tZGF0YVwiKSk7XG4vKipcbiAqXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUh0dHBSZXF1ZXN0SGFuZGxlclN0cmVhbXMocmVxLCBvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCB7IGJvZHk6IHJlcUJvZHkgfSA9IHJlcTtcbiAgICBjb25zdCBpbnB1dCA9IG5ldyBzdHJlYW1fMS5QYXNzVGhyb3VnaCgpO1xuICAgIGNvbnN0IG91dHB1dCA9IG5ldyBzdHJlYW1fMS5QYXNzVGhyb3VnaCgpO1xuICAgIGNvbnN0IGR1cGxleCA9ICgwLCBzdHJlYW1fMi5jb25jYXRTdHJlYW1zQXNEdXBsZXgpKGlucHV0LCBvdXRwdXQpO1xuICAgIGlmICh0eXBlb2YgcmVxQm9keSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBpZiAocmVxQm9keSBpbnN0YW5jZW9mIGZvcm1fZGF0YV8xLmRlZmF1bHQpIHtcbiAgICAgICAgICAgICAgICBkdXBsZXguZW5kKHJlcUJvZHkuZ2V0QnVmZmVyKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZHVwbGV4LmVuZChyZXFCb2R5LCAndXRmOCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCAwKTtcbiAgICB9XG4gICAgZHVwbGV4Lm9uKCdyZXNwb25zZScsIGFzeW5jIChyZXMpID0+IHtcbiAgICAgICAgaWYgKGR1cGxleC5saXN0ZW5lckNvdW50KCdjb21wbGV0ZScpID4gMCkge1xuICAgICAgICAgICAgY29uc3QgcmVzQm9keSA9IGF3YWl0ICgwLCBzdHJlYW1fMi5yZWFkQWxsKShkdXBsZXgsIG9wdGlvbnMuZW5jb2RpbmcpO1xuICAgICAgICAgICAgZHVwbGV4LmVtaXQoJ2NvbXBsZXRlJywge1xuICAgICAgICAgICAgICAgIC4uLnJlcyxcbiAgICAgICAgICAgICAgICBib2R5OiByZXNCb2R5LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4geyBpbnB1dCwgb3V0cHV0LCBzdHJlYW06IGR1cGxleCB9O1xufVxuZXhwb3J0cy5jcmVhdGVIdHRwUmVxdWVzdEhhbmRsZXJTdHJlYW1zID0gY3JlYXRlSHR0cFJlcXVlc3RIYW5kbGVyU3RyZWFtcztcbmNvbnN0IHJlZGlyZWN0U3RhdHVzZXMgPSBuZXcgU2V0KFszMDEsIDMwMiwgMzAzLCAzMDcsIDMwOF0pO1xuLyoqXG4gKlxuICovXG5mdW5jdGlvbiBpc1JlZGlyZWN0KHN0YXR1cykge1xuICAgIHJldHVybiByZWRpcmVjdFN0YXR1c2VzLmhhcyhzdGF0dXMpO1xufVxuZXhwb3J0cy5pc1JlZGlyZWN0ID0gaXNSZWRpcmVjdDtcbi8qKlxuICpcbiAqL1xuY29uc3QgTUFYX1JFRElSRUNUX0NPVU5UID0gMTA7XG4vKipcbiAqXG4gKi9cbmZ1bmN0aW9uIHBlcmZvcm1SZWRpcmVjdFJlcXVlc3QocmVxLCByZXMsIGZvbGxvd1JlZGlyZWN0LCBjb3VudGVyLCByZWRpcmVjdENhbGxiYWNrKSB7XG4gICAgaWYgKGNvdW50ZXIgPj0gTUFYX1JFRElSRUNUX0NPVU5UKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUmVhY2hlZCB0byBtYXhpbXVtIHJlZGlyZWN0IGNvdW50Jyk7XG4gICAgfVxuICAgIGNvbnN0IHJlZGlyZWN0VXJsID0gcmVzLmhlYWRlcnNbJ2xvY2F0aW9uJ107XG4gICAgaWYgKCFyZWRpcmVjdFVybCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIHJlZGlyZWN0IFVSSSBmb3VuZCcpO1xuICAgIH1cbiAgICBjb25zdCBnZXRSZWRpcmVjdFJlcXVlc3QgPSB0eXBlb2YgZm9sbG93UmVkaXJlY3QgPT09ICdmdW5jdGlvbidcbiAgICAgICAgPyBmb2xsb3dSZWRpcmVjdFxuICAgICAgICA6ICgpID0+ICh7XG4gICAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICAgICAgdXJsOiByZWRpcmVjdFVybCxcbiAgICAgICAgICAgIGhlYWRlcnM6IHJlcS5oZWFkZXJzLFxuICAgICAgICB9KTtcbiAgICBjb25zdCBuZXh0UmVxUGFyYW1zID0gZ2V0UmVkaXJlY3RSZXF1ZXN0KHJlZGlyZWN0VXJsKTtcbiAgICBpZiAoIW5leHRSZXFQYXJhbXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgaGFuZGxlIHJlZGlyZWN0IGZvciAnICsgcmVkaXJlY3RVcmwpO1xuICAgIH1cbiAgICByZWRpcmVjdENhbGxiYWNrKG5leHRSZXFQYXJhbXMpO1xufVxuZXhwb3J0cy5wZXJmb3JtUmVkaXJlY3RSZXF1ZXN0ID0gcGVyZm9ybVJlZGlyZWN0UmVxdWVzdDtcbi8qKlxuICpcbiAqL1xuYXN5bmMgZnVuY3Rpb24gZXhlY3V0ZVdpdGhUaW1lb3V0KGV4ZWNGbiwgbXNlYywgY2FuY2VsQ2FsbGJhY2spIHtcbiAgICBsZXQgdGltZW91dCA9IGZhbHNlO1xuICAgIGNvbnN0IHBpZCA9IG1zZWMgIT0gbnVsbFxuICAgICAgICA/IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgdGltZW91dCA9IHRydWU7XG4gICAgICAgICAgICBjYW5jZWxDYWxsYmFjaz8uKCk7XG4gICAgICAgIH0sIG1zZWMpXG4gICAgICAgIDogdW5kZWZpbmVkO1xuICAgIGxldCByZXM7XG4gICAgdHJ5IHtcbiAgICAgICAgcmVzID0gYXdhaXQgZXhlY0ZuKCk7XG4gICAgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICBpZiAocGlkKSB7XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQocGlkKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAodGltZW91dCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlcXVlc3QgVGltZW91dCcpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xufVxuZXhwb3J0cy5leGVjdXRlV2l0aFRpbWVvdXQgPSBleGVjdXRlV2l0aFRpbWVvdXQ7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/request-helper.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/request.js":
/*!*********************************************!*\
  !*** ./node_modules/jsforce/lib/request.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.setDefaults = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst node_fetch_1 = __importStar(__webpack_require__(/*! node-fetch */ \"(rsc)/./node_modules/node-fetch/lib/index.mjs\"));\nconst https_proxy_agent_1 = __importDefault(__webpack_require__(/*! https-proxy-agent */ \"(rsc)/./node_modules/https-proxy-agent/dist/index.js\"));\nconst request_helper_1 = __webpack_require__(/*! ./request-helper */ \"(rsc)/./node_modules/jsforce/lib/request-helper.js\");\nconst logger_1 = __webpack_require__(/*! ./util/logger */ \"(rsc)/./node_modules/jsforce/lib/util/logger.js\");\nconst is_1 = __importDefault(__webpack_require__(/*! @sindresorhus/is */ \"(rsc)/./node_modules/@sindresorhus/is/dist/index.js\"));\n/**\n *\n */\nlet defaults = {};\n/**\n *\n */\nfunction setDefaults(defaults_) {\n    defaults = defaults_;\n}\nexports.setDefaults = setDefaults;\n/**\n *\n */\nasync function startFetchRequest(request, options, input, output, emitter, counter = 0) {\n    const logger = (0, logger_1.getLogger)('fetch');\n    const { httpProxy, followRedirect } = options;\n    const agent = httpProxy ? (0, https_proxy_agent_1.default)(httpProxy) : undefined;\n    const { url, body, ...rrequest } = request;\n    const controller = new AbortController();\n    let retryCount = 0;\n    const retryOpts = {\n        statusCodes: options.retry?.statusCodes ?? [420, 429, 500, 502, 503, 504],\n        maxRetries: options.retry?.maxRetries ?? 5,\n        minTimeout: options.retry?.minTimeout ?? 500,\n        timeoutFactor: options.retry?.timeoutFactor ?? 2,\n        errorCodes: options.retry?.errorCodes ?? [\n            'ECONNRESET',\n            'ECONNREFUSED',\n            'ENOTFOUND',\n            'ENETDOWN',\n            'ENETUNREACH',\n            'EHOSTDOWN',\n            'UND_ERR_SOCKET',\n            'ETIMEDOUT',\n            'EPIPE',\n        ],\n        methods: options.retry?.methods ?? [\n            'GET',\n            'PUT',\n            'HEAD',\n            'OPTIONS',\n            'DELETE',\n        ],\n    };\n    const shouldRetryRequest = (maxRetry, resOrErr) => {\n        if (!retryOpts.methods.includes(request.method))\n            return false;\n        if (resOrErr instanceof node_fetch_1.Response) {\n            if (retryOpts.statusCodes.includes(resOrErr.status)) {\n                if (maxRetry === retryCount) {\n                    return false;\n                }\n                else {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else {\n            if (maxRetry === retryCount)\n                return false;\n            // only retry on operational errors\n            // https://github.com/node-fetch/node-fetch/blob/2.x/ERROR-HANDLING.md#error-handling-with-node-fetch\n            if (resOrErr.name != 'FetchError')\n                return false;\n            if (is_1.default.nodeStream(body) && stream_1.Readable.isDisturbed(body)) {\n                logger.debug('Body of type stream was read, unable to retry request.');\n                return false;\n            }\n            if ('code' in resOrErr &&\n                resOrErr.code &&\n                retryOpts?.errorCodes?.includes(resOrErr.code))\n                return true;\n            return false;\n        }\n    };\n    const fetchWithRetries = async (maxRetry = retryOpts?.maxRetries) => {\n        const fetchOpts = {\n            ...rrequest,\n            ...(input && /^(post|put|patch)$/i.test(request.method)\n                ? { body: input }\n                : {}),\n            redirect: 'manual',\n            signal: controller.signal,\n            agent,\n        };\n        try {\n            const res = await (0, node_fetch_1.default)(url, fetchOpts);\n            if (shouldRetryRequest(retryOpts.maxRetries, res)) {\n                logger.debug(`retrying for the ${retryCount + 1} time`);\n                logger.debug('reason: statusCode match');\n                await sleep(retryCount === 0\n                    ? retryOpts.minTimeout\n                    : retryOpts.minTimeout * retryOpts.timeoutFactor ** retryCount);\n                // NOTE: this event is only used by tests and will be removed at any time.\n                // jsforce may switch to node's fetch which doesn't emit this event on retries.\n                emitter.emit('retry', retryCount);\n                retryCount++;\n                return await fetchWithRetries(maxRetry);\n            }\n            // should we throw here if the maxRetry already happened and still got the same statusCode?\n            return res;\n        }\n        catch (err) {\n            logger.debug('Request failed');\n            const error = err;\n            // request was canceled by consumer (AbortController), skip retry and rethrow.\n            if (error.name === 'AbortError') {\n                throw error;\n            }\n            if (shouldRetryRequest(retryOpts.maxRetries, error)) {\n                logger.debug(`retrying for the ${retryCount + 1} time`);\n                logger.debug(`Error: ${err.message}`);\n                await sleep(retryCount === 0\n                    ? retryOpts.minTimeout\n                    : retryOpts.minTimeout * retryOpts.timeoutFactor ** retryCount);\n                // NOTE: this event is only used by tests and will be removed at any time.\n                // jsforce may switch to node's fetch which doesn't emit this event on retries.\n                emitter.emit('retry', retryCount);\n                retryCount++;\n                return fetchWithRetries(maxRetry);\n            }\n            logger.debug('Skipping retry...');\n            if (maxRetry === retryCount) {\n                throw err;\n            }\n            else {\n                throw err;\n            }\n        }\n    };\n    let res;\n    // Timeout after 5 minutes without a response\n    //\n    // node-fetch's default timeout is 0 and jsforce consumers can't set this when calling `Connection` methods so we set a long default at the fetch wrapper level.\n    const fetchTimeout = options.timeout ?? 300000;\n    try {\n        res = await (0, request_helper_1.executeWithTimeout)(fetchWithRetries, fetchTimeout, () => controller.abort());\n    }\n    catch (err) {\n        emitter.emit('error', err);\n        return;\n    }\n    const headers = {};\n    for (const headerName of res.headers.keys()) {\n        headers[headerName.toLowerCase()] = res.headers.get(headerName);\n    }\n    const response = {\n        statusCode: res.status,\n        headers,\n    };\n    if (followRedirect && (0, request_helper_1.isRedirect)(response.statusCode)) {\n        try {\n            (0, request_helper_1.performRedirectRequest)(request, response, followRedirect, counter, (req) => startFetchRequest(req, options, undefined, output, emitter, counter + 1));\n        }\n        catch (err) {\n            emitter.emit('error', err);\n        }\n        return;\n    }\n    emitter.emit('response', response);\n    res.body.pipe(output);\n}\n/**\n *\n */\nfunction request(req, options_ = {}) {\n    const options = { ...defaults, ...options_ };\n    const { input, output, stream } = (0, request_helper_1.createHttpRequestHandlerStreams)(req, options);\n    startFetchRequest(req, options, input, output, stream);\n    return stream;\n}\nexports[\"default\"] = request;\nconst sleep = (ms) => new Promise((r) => setTimeout(r, ms));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/session-refresh-delegate.js":
/*!**************************************************************!*\
  !*** ./node_modules/jsforce/lib/session-refresh-delegate.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SessionRefreshDelegate = void 0;\n/**\n *\n */\nconst logger_1 = __webpack_require__(/*! ./util/logger */ \"(rsc)/./node_modules/jsforce/lib/util/logger.js\");\n/**\n *\n */\nclass SessionRefreshDelegate {\n    static _logger = (0, logger_1.getLogger)('session-refresh-delegate');\n    _refreshFn;\n    _conn;\n    _logger;\n    _lastRefreshedAt = undefined;\n    _refreshPromise = undefined;\n    constructor(conn, refreshFn) {\n        this._conn = conn;\n        this._logger = conn._logLevel\n            ? SessionRefreshDelegate._logger.createInstance(conn._logLevel)\n            : SessionRefreshDelegate._logger;\n        this._refreshFn = refreshFn;\n    }\n    /**\n     * Refresh access token\n     * @private\n     */\n    async refresh(since) {\n        // Callback immediately When refreshed after designated time\n        if (this._lastRefreshedAt && this._lastRefreshedAt > since) {\n            return;\n        }\n        if (this._refreshPromise) {\n            await this._refreshPromise;\n            return;\n        }\n        try {\n            this._logger.info('<refresh token>');\n            this._refreshPromise = new Promise((resolve, reject) => {\n                this._refreshFn(this._conn, (err, accessToken, res) => {\n                    if (!err) {\n                        this._logger.debug('Connection refresh completed.');\n                        this._conn.accessToken = accessToken;\n                        this._conn.emit('refresh', accessToken, res);\n                        resolve();\n                    }\n                    else {\n                        reject(err);\n                    }\n                });\n            });\n            await this._refreshPromise;\n            this._logger.info('<refresh complete>');\n        }\n        catch (err) {\n            throw new Error(`Unable to refresh session due to: ${err.message}`);\n        }\n        finally {\n            this._refreshPromise = undefined;\n            this._lastRefreshedAt = Date.now();\n        }\n    }\n    isRefreshing() {\n        return !!this._refreshPromise;\n    }\n    async waitRefresh() {\n        return this._refreshPromise;\n    }\n}\nexports.SessionRefreshDelegate = SessionRefreshDelegate;\nexports[\"default\"] = SessionRefreshDelegate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvc2Vzc2lvbi1yZWZyZXNoLWRlbGVnYXRlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsbUJBQU8sQ0FBQyxzRUFBZTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsWUFBWTtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QixrQkFBZSIsInNvdXJjZXMiOlsiL1VzZXJzL25lem9iZW5hcmRpL0FJX3N0dWZmL09uYm9hcmRpbmdQb3J0YWwvbm9kZV9tb2R1bGVzL2pzZm9yY2UvbGliL3Nlc3Npb24tcmVmcmVzaC1kZWxlZ2F0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2Vzc2lvblJlZnJlc2hEZWxlZ2F0ZSA9IHZvaWQgMDtcbi8qKlxuICpcbiAqL1xuY29uc3QgbG9nZ2VyXzEgPSByZXF1aXJlKFwiLi91dGlsL2xvZ2dlclwiKTtcbi8qKlxuICpcbiAqL1xuY2xhc3MgU2Vzc2lvblJlZnJlc2hEZWxlZ2F0ZSB7XG4gICAgc3RhdGljIF9sb2dnZXIgPSAoMCwgbG9nZ2VyXzEuZ2V0TG9nZ2VyKSgnc2Vzc2lvbi1yZWZyZXNoLWRlbGVnYXRlJyk7XG4gICAgX3JlZnJlc2hGbjtcbiAgICBfY29ubjtcbiAgICBfbG9nZ2VyO1xuICAgIF9sYXN0UmVmcmVzaGVkQXQgPSB1bmRlZmluZWQ7XG4gICAgX3JlZnJlc2hQcm9taXNlID0gdW5kZWZpbmVkO1xuICAgIGNvbnN0cnVjdG9yKGNvbm4sIHJlZnJlc2hGbikge1xuICAgICAgICB0aGlzLl9jb25uID0gY29ubjtcbiAgICAgICAgdGhpcy5fbG9nZ2VyID0gY29ubi5fbG9nTGV2ZWxcbiAgICAgICAgICAgID8gU2Vzc2lvblJlZnJlc2hEZWxlZ2F0ZS5fbG9nZ2VyLmNyZWF0ZUluc3RhbmNlKGNvbm4uX2xvZ0xldmVsKVxuICAgICAgICAgICAgOiBTZXNzaW9uUmVmcmVzaERlbGVnYXRlLl9sb2dnZXI7XG4gICAgICAgIHRoaXMuX3JlZnJlc2hGbiA9IHJlZnJlc2hGbjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVmcmVzaCBhY2Nlc3MgdG9rZW5cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIGFzeW5jIHJlZnJlc2goc2luY2UpIHtcbiAgICAgICAgLy8gQ2FsbGJhY2sgaW1tZWRpYXRlbHkgV2hlbiByZWZyZXNoZWQgYWZ0ZXIgZGVzaWduYXRlZCB0aW1lXG4gICAgICAgIGlmICh0aGlzLl9sYXN0UmVmcmVzaGVkQXQgJiYgdGhpcy5fbGFzdFJlZnJlc2hlZEF0ID4gc2luY2UpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fcmVmcmVzaFByb21pc2UpIHtcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuX3JlZnJlc2hQcm9taXNlO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB0aGlzLl9sb2dnZXIuaW5mbygnPHJlZnJlc2ggdG9rZW4+Jyk7XG4gICAgICAgICAgICB0aGlzLl9yZWZyZXNoUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLl9yZWZyZXNoRm4odGhpcy5fY29ubiwgKGVyciwgYWNjZXNzVG9rZW4sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fbG9nZ2VyLmRlYnVnKCdDb25uZWN0aW9uIHJlZnJlc2ggY29tcGxldGVkLicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29ubi5hY2Nlc3NUb2tlbiA9IGFjY2Vzc1Rva2VuO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29ubi5lbWl0KCdyZWZyZXNoJywgYWNjZXNzVG9rZW4sIHJlcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLl9yZWZyZXNoUHJvbWlzZTtcbiAgICAgICAgICAgIHRoaXMuX2xvZ2dlci5pbmZvKCc8cmVmcmVzaCBjb21wbGV0ZT4nKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byByZWZyZXNoIHNlc3Npb24gZHVlIHRvOiAke2Vyci5tZXNzYWdlfWApO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdGhpcy5fcmVmcmVzaFByb21pc2UgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB0aGlzLl9sYXN0UmVmcmVzaGVkQXQgPSBEYXRlLm5vdygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlzUmVmcmVzaGluZygpIHtcbiAgICAgICAgcmV0dXJuICEhdGhpcy5fcmVmcmVzaFByb21pc2U7XG4gICAgfVxuICAgIGFzeW5jIHdhaXRSZWZyZXNoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcmVmcmVzaFByb21pc2U7XG4gICAgfVxufVxuZXhwb3J0cy5TZXNzaW9uUmVmcmVzaERlbGVnYXRlID0gU2Vzc2lvblJlZnJlc2hEZWxlZ2F0ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IFNlc3Npb25SZWZyZXNoRGVsZWdhdGU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/session-refresh-delegate.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/soap.js":
/*!******************************************!*\
  !*** ./node_modules/jsforce/lib/soap.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SOAP = exports.castTypeUsingSchema = void 0;\n/**\n * @file Manages method call to SOAP endpoint\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\nconst http_api_1 = __importStar(__webpack_require__(/*! ./http-api */ \"(rsc)/./node_modules/jsforce/lib/http-api.js\"));\nconst function_1 = __webpack_require__(/*! ./util/function */ \"(rsc)/./node_modules/jsforce/lib/util/function.js\");\nconst get_body_size_1 = __webpack_require__(/*! ./util/get-body-size */ \"(rsc)/./node_modules/jsforce/lib/util/get-body-size.js\");\nconst jwt_1 = __webpack_require__(/*! ./util/jwt */ \"(rsc)/./node_modules/jsforce/lib/util/jwt.js\");\n/**\n *\n */\nfunction getPropsSchema(schema, schemaDict) {\n    if (schema.extends && schemaDict[schema.extends]) {\n        const extendSchema = schemaDict[schema.extends];\n        return {\n            ...getPropsSchema(extendSchema, schemaDict),\n            ...schema.props,\n        };\n    }\n    return schema.props;\n}\nfunction isNillValue(value) {\n    return (value == null ||\n        ((0, function_1.isMapObject)(value) &&\n            (0, function_1.isMapObject)(value.$) &&\n            value.$['xsi:nil'] === 'true'));\n}\n/**\n *\n */\nfunction castTypeUsingSchema(value, schema, schemaDict = {}) {\n    if (Array.isArray(schema)) {\n        const nillable = schema.length === 2 && schema[0] === '?';\n        const schema_ = nillable ? schema[1] : schema[0];\n        if (value == null) {\n            return nillable ? null : [];\n        }\n        return (Array.isArray(value) ? value : [value]).map((v) => castTypeUsingSchema(v, schema_, schemaDict));\n    }\n    else if ((0, function_1.isMapObject)(schema)) {\n        // if schema is Schema Definition, not schema element\n        if ('type' in schema && 'props' in schema && (0, function_1.isMapObject)(schema.props)) {\n            const props = getPropsSchema(schema, schemaDict);\n            return castTypeUsingSchema(value, props, schemaDict);\n        }\n        const nillable = '?' in schema;\n        const schema_ = '?' in schema ? schema['?'] : schema;\n        if (nillable && isNillValue(value)) {\n            return null;\n        }\n        const obj = (0, function_1.isMapObject)(value) ? value : {};\n        return Object.keys(schema_).reduce((o, k) => {\n            const s = schema_[k];\n            const v = obj[k];\n            const nillable = (Array.isArray(s) && s.length === 2 && s[0] === '?') ||\n                ((0, function_1.isMapObject)(s) && '?' in s) ||\n                (typeof s === 'string' && s.startsWith('?'));\n            if (typeof v === 'undefined' && nillable) {\n                return o;\n            }\n            return {\n                ...o,\n                [k]: castTypeUsingSchema(v, s, schemaDict),\n            };\n        }, obj);\n    }\n    else {\n        const nillable = typeof schema === 'string' && schema.startsWith('?');\n        const type = typeof schema === 'string'\n            ? nillable\n                ? schema.substring(1)\n                : schema\n            : 'any';\n        switch (type) {\n            case 'string':\n                return isNillValue(value) ? (nillable ? null : '') : String(value);\n            case 'number':\n                return isNillValue(value) ? (nillable ? null : 0) : Number(value);\n            case 'boolean':\n                return isNillValue(value)\n                    ? nillable\n                        ? null\n                        : false\n                    : value === 'true';\n            case 'null':\n                return null;\n            default: {\n                if (schemaDict[type]) {\n                    const cvalue = castTypeUsingSchema(value, schemaDict[type], schemaDict);\n                    const isEmpty = (0, function_1.isMapObject)(cvalue) && Object.keys(cvalue).length === 0;\n                    return isEmpty && nillable ? null : cvalue;\n                }\n                return value;\n            }\n        }\n    }\n}\nexports.castTypeUsingSchema = castTypeUsingSchema;\n/**\n * @private\n */\nfunction lookupValue(obj, propRegExps) {\n    const regexp = propRegExps.shift();\n    if (!regexp) {\n        return obj;\n    }\n    if ((0, function_1.isMapObject)(obj)) {\n        for (const prop of Object.keys(obj)) {\n            if (regexp.test(prop)) {\n                return lookupValue(obj[prop], propRegExps);\n            }\n        }\n        return null;\n    }\n}\n/**\n * @private\n */\nfunction toXML(name, value) {\n    if ((0, function_1.isObject)(name)) {\n        value = name;\n        name = null;\n    }\n    if (Array.isArray(value)) {\n        return value.map((v) => toXML(name, v)).join('');\n    }\n    else {\n        const attrs = [];\n        if (value === null) {\n            attrs.push('xsi:nil=\"true\"');\n            value = '';\n        }\n        else if ((0, function_1.isMapObject)(value)) {\n            const elems = [];\n            for (const k of Object.keys(value)) {\n                const v = value[k];\n                if (k.startsWith('@')) {\n                    const kk = k.substring(1);\n                    attrs.push(`${kk}=\"${v}\"`);\n                }\n                else {\n                    elems.push(toXML(k, v));\n                }\n            }\n            value = elems.join('');\n        }\n        else {\n            value = String(value)\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&apos;');\n        }\n        const startTag = name\n            ? '<' + name + (attrs.length > 0 ? ' ' + attrs.join(' ') : '') + '>'\n            : '';\n        const endTag = name ? '</' + name + '>' : '';\n        return startTag + value + endTag;\n    }\n}\n/**\n * Class for SOAP endpoint of Salesforce\n *\n * @protected\n * @class\n * @constructor\n * @param {Connection} conn - Connection instance\n * @param {Object} options - SOAP endpoint setting options\n * @param {String} options.endpointUrl - SOAP endpoint URL\n * @param {String} [options.xmlns] - XML namespace for method call (default is \"urn:partner.soap.sforce.com\")\n */\nclass SOAP extends http_api_1.default {\n    _endpointUrl;\n    _xmlns;\n    constructor(conn, options) {\n        super(conn, options);\n        if (this._conn.accessToken && (0, jwt_1.isJWTToken)(this._conn.accessToken)) {\n            // We need to block SOAP requests with JWT tokens because the response is:\n            // statusCode=500 | body=\"INVALID_SESSION_ID\" (xml), which triggers session refresh and enters in an infinite loop\n            throw new Error('SOAP API does not support JWT-based access tokens. You must disable the \"Issue JSON Web Token (JWT)-based access tokens\" setting in your Connected App or External Client App');\n        }\n        this._endpointUrl = options.endpointUrl;\n        this._xmlns = options.xmlns || 'urn:partner.soap.sforce.com';\n    }\n    /**\n     * Invoke SOAP call using method and arguments\n     */\n    async invoke(method, args, schema, schemaDict) {\n        const res = await this.request({\n            method: 'POST',\n            url: this._endpointUrl,\n            headers: {\n                'Content-Type': 'text/xml',\n                SOAPAction: '\"\"',\n            },\n            _message: { [method]: args },\n        });\n        return schema ? castTypeUsingSchema(res, schema, schemaDict) : res;\n    }\n    /** @override */\n    beforeSend(request) {\n        request.body = this._createEnvelope(request._message);\n        const headers = request.headers || {};\n        const bodySize = (0, get_body_size_1.getBodySize)(request.body, request.headers);\n        if (!http_api_1.isBrowser && // Don't set content-length in browsers as it's not allowed\n            request.method === 'POST' &&\n            !('transfer-encoding' in headers) &&\n            !('content-length' in headers) &&\n            !!bodySize) {\n            this._logger.debug(`missing 'content-length' header, setting it to: ${bodySize}`);\n            headers['content-length'] = String(bodySize);\n        }\n        request.headers = headers;\n    }\n    /** @override **/\n    isSessionExpired(response) {\n        return (response.statusCode === 500 &&\n            /<faultcode>[a-zA-Z]+:INVALID_SESSION_ID<\\/faultcode>/.test(response.body));\n    }\n    /** @override **/\n    parseError(body) {\n        const error = lookupValue(body, [/:Envelope$/, /:Body$/, /:Fault$/]);\n        return {\n            errorCode: error.faultcode,\n            message: error.faultstring,\n        };\n    }\n    /** @override **/\n    async getResponseBody(response) {\n        const body = await super.getResponseBody(response);\n        return lookupValue(body, [/:Envelope$/, /:Body$/, /.+/]);\n    }\n    /**\n     * @private\n     */\n    _createEnvelope(message) {\n        const header = {};\n        const conn = this._conn;\n        if (conn.accessToken) {\n            header.SessionHeader = { sessionId: conn.accessToken };\n        }\n        if (conn._callOptions) {\n            header.CallOptions = conn._callOptions;\n        }\n        return [\n            '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\n            '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"',\n            ' xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"',\n            ' xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">',\n            '<soapenv:Header xmlns=\"' + this._xmlns + '\">',\n            toXML(header),\n            '</soapenv:Header>',\n            '<soapenv:Body xmlns=\"' + this._xmlns + '\">',\n            toXML(message),\n            '</soapenv:Body>',\n            '</soapenv:Envelope>',\n        ].join('');\n    }\n}\nexports.SOAP = SOAP;\nexports[\"default\"] = SOAP;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvc29hcC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWSxHQUFHLDJCQUEyQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxtQkFBTyxDQUFDLGdFQUFZO0FBQ3BELG1CQUFtQixtQkFBTyxDQUFDLDBFQUFpQjtBQUM1Qyx3QkFBd0IsbUJBQU8sQ0FBQyxvRkFBc0I7QUFDdEQsY0FBYyxtQkFBTyxDQUFDLGdFQUFZO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJEO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLEdBQUcsSUFBSSxFQUFFO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQyxvQ0FBb0M7QUFDcEMsb0NBQW9DO0FBQ3BDLHNDQUFzQztBQUN0QyxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2Isd0JBQXdCLGdCQUFnQjtBQUN4QyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0ZBQWtGLFNBQVM7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWixrQkFBZSIsInNvdXJjZXMiOlsiL1VzZXJzL25lem9iZW5hcmRpL0FJX3N0dWZmL09uYm9hcmRpbmdQb3J0YWwvbm9kZV9tb2R1bGVzL2pzZm9yY2UvbGliL3NvYXAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU09BUCA9IGV4cG9ydHMuY2FzdFR5cGVVc2luZ1NjaGVtYSA9IHZvaWQgMDtcbi8qKlxuICogQGZpbGUgTWFuYWdlcyBtZXRob2QgY2FsbCB0byBTT0FQIGVuZHBvaW50XG4gKiBAYXV0aG9yIFNoaW5pY2hpIFRvbWl0YSA8c2hpbmljaGkudG9taXRhQGdtYWlsLmNvbT5cbiAqL1xuY29uc3QgaHR0cF9hcGlfMSA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9odHRwLWFwaVwiKSk7XG5jb25zdCBmdW5jdGlvbl8xID0gcmVxdWlyZShcIi4vdXRpbC9mdW5jdGlvblwiKTtcbmNvbnN0IGdldF9ib2R5X3NpemVfMSA9IHJlcXVpcmUoXCIuL3V0aWwvZ2V0LWJvZHktc2l6ZVwiKTtcbmNvbnN0IGp3dF8xID0gcmVxdWlyZShcIi4vdXRpbC9qd3RcIik7XG4vKipcbiAqXG4gKi9cbmZ1bmN0aW9uIGdldFByb3BzU2NoZW1hKHNjaGVtYSwgc2NoZW1hRGljdCkge1xuICAgIGlmIChzY2hlbWEuZXh0ZW5kcyAmJiBzY2hlbWFEaWN0W3NjaGVtYS5leHRlbmRzXSkge1xuICAgICAgICBjb25zdCBleHRlbmRTY2hlbWEgPSBzY2hlbWFEaWN0W3NjaGVtYS5leHRlbmRzXTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLmdldFByb3BzU2NoZW1hKGV4dGVuZFNjaGVtYSwgc2NoZW1hRGljdCksXG4gICAgICAgICAgICAuLi5zY2hlbWEucHJvcHMsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBzY2hlbWEucHJvcHM7XG59XG5mdW5jdGlvbiBpc05pbGxWYWx1ZSh2YWx1ZSkge1xuICAgIHJldHVybiAodmFsdWUgPT0gbnVsbCB8fFxuICAgICAgICAoKDAsIGZ1bmN0aW9uXzEuaXNNYXBPYmplY3QpKHZhbHVlKSAmJlxuICAgICAgICAgICAgKDAsIGZ1bmN0aW9uXzEuaXNNYXBPYmplY3QpKHZhbHVlLiQpICYmXG4gICAgICAgICAgICB2YWx1ZS4kWyd4c2k6bmlsJ10gPT09ICd0cnVlJykpO1xufVxuLyoqXG4gKlxuICovXG5mdW5jdGlvbiBjYXN0VHlwZVVzaW5nU2NoZW1hKHZhbHVlLCBzY2hlbWEsIHNjaGVtYURpY3QgPSB7fSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHNjaGVtYSkpIHtcbiAgICAgICAgY29uc3QgbmlsbGFibGUgPSBzY2hlbWEubGVuZ3RoID09PSAyICYmIHNjaGVtYVswXSA9PT0gJz8nO1xuICAgICAgICBjb25zdCBzY2hlbWFfID0gbmlsbGFibGUgPyBzY2hlbWFbMV0gOiBzY2hlbWFbMF07XG4gICAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbmlsbGFibGUgPyBudWxsIDogW107XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChBcnJheS5pc0FycmF5KHZhbHVlKSA/IHZhbHVlIDogW3ZhbHVlXSkubWFwKCh2KSA9PiBjYXN0VHlwZVVzaW5nU2NoZW1hKHYsIHNjaGVtYV8sIHNjaGVtYURpY3QpKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoKDAsIGZ1bmN0aW9uXzEuaXNNYXBPYmplY3QpKHNjaGVtYSkpIHtcbiAgICAgICAgLy8gaWYgc2NoZW1hIGlzIFNjaGVtYSBEZWZpbml0aW9uLCBub3Qgc2NoZW1hIGVsZW1lbnRcbiAgICAgICAgaWYgKCd0eXBlJyBpbiBzY2hlbWEgJiYgJ3Byb3BzJyBpbiBzY2hlbWEgJiYgKDAsIGZ1bmN0aW9uXzEuaXNNYXBPYmplY3QpKHNjaGVtYS5wcm9wcykpIHtcbiAgICAgICAgICAgIGNvbnN0IHByb3BzID0gZ2V0UHJvcHNTY2hlbWEoc2NoZW1hLCBzY2hlbWFEaWN0KTtcbiAgICAgICAgICAgIHJldHVybiBjYXN0VHlwZVVzaW5nU2NoZW1hKHZhbHVlLCBwcm9wcywgc2NoZW1hRGljdCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbmlsbGFibGUgPSAnPycgaW4gc2NoZW1hO1xuICAgICAgICBjb25zdCBzY2hlbWFfID0gJz8nIGluIHNjaGVtYSA/IHNjaGVtYVsnPyddIDogc2NoZW1hO1xuICAgICAgICBpZiAobmlsbGFibGUgJiYgaXNOaWxsVmFsdWUodmFsdWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvYmogPSAoMCwgZnVuY3Rpb25fMS5pc01hcE9iamVjdCkodmFsdWUpID8gdmFsdWUgOiB7fTtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHNjaGVtYV8pLnJlZHVjZSgobywgaykgPT4ge1xuICAgICAgICAgICAgY29uc3QgcyA9IHNjaGVtYV9ba107XG4gICAgICAgICAgICBjb25zdCB2ID0gb2JqW2tdO1xuICAgICAgICAgICAgY29uc3QgbmlsbGFibGUgPSAoQXJyYXkuaXNBcnJheShzKSAmJiBzLmxlbmd0aCA9PT0gMiAmJiBzWzBdID09PSAnPycpIHx8XG4gICAgICAgICAgICAgICAgKCgwLCBmdW5jdGlvbl8xLmlzTWFwT2JqZWN0KShzKSAmJiAnPycgaW4gcykgfHxcbiAgICAgICAgICAgICAgICAodHlwZW9mIHMgPT09ICdzdHJpbmcnICYmIHMuc3RhcnRzV2l0aCgnPycpKTtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdiA9PT0gJ3VuZGVmaW5lZCcgJiYgbmlsbGFibGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4ubyxcbiAgICAgICAgICAgICAgICBba106IGNhc3RUeXBlVXNpbmdTY2hlbWEodiwgcywgc2NoZW1hRGljdCksXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LCBvYmopO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgbmlsbGFibGUgPSB0eXBlb2Ygc2NoZW1hID09PSAnc3RyaW5nJyAmJiBzY2hlbWEuc3RhcnRzV2l0aCgnPycpO1xuICAgICAgICBjb25zdCB0eXBlID0gdHlwZW9mIHNjaGVtYSA9PT0gJ3N0cmluZydcbiAgICAgICAgICAgID8gbmlsbGFibGVcbiAgICAgICAgICAgICAgICA/IHNjaGVtYS5zdWJzdHJpbmcoMSlcbiAgICAgICAgICAgICAgICA6IHNjaGVtYVxuICAgICAgICAgICAgOiAnYW55JztcbiAgICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgICAgICBjYXNlICdzdHJpbmcnOlxuICAgICAgICAgICAgICAgIHJldHVybiBpc05pbGxWYWx1ZSh2YWx1ZSkgPyAobmlsbGFibGUgPyBudWxsIDogJycpIDogU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgICAgIGNhc2UgJ251bWJlcic6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzTmlsbFZhbHVlKHZhbHVlKSA/IChuaWxsYWJsZSA/IG51bGwgOiAwKSA6IE51bWJlcih2YWx1ZSk7XG4gICAgICAgICAgICBjYXNlICdib29sZWFuJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNOaWxsVmFsdWUodmFsdWUpXG4gICAgICAgICAgICAgICAgICAgID8gbmlsbGFibGVcbiAgICAgICAgICAgICAgICAgICAgICAgID8gbnVsbFxuICAgICAgICAgICAgICAgICAgICAgICAgOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICA6IHZhbHVlID09PSAndHJ1ZSc7XG4gICAgICAgICAgICBjYXNlICdudWxsJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgICAgICBpZiAoc2NoZW1hRGljdFt0eXBlXSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjdmFsdWUgPSBjYXN0VHlwZVVzaW5nU2NoZW1hKHZhbHVlLCBzY2hlbWFEaWN0W3R5cGVdLCBzY2hlbWFEaWN0KTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNFbXB0eSA9ICgwLCBmdW5jdGlvbl8xLmlzTWFwT2JqZWN0KShjdmFsdWUpICYmIE9iamVjdC5rZXlzKGN2YWx1ZSkubGVuZ3RoID09PSAwO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNFbXB0eSAmJiBuaWxsYWJsZSA/IG51bGwgOiBjdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuY2FzdFR5cGVVc2luZ1NjaGVtYSA9IGNhc3RUeXBlVXNpbmdTY2hlbWE7XG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGxvb2t1cFZhbHVlKG9iaiwgcHJvcFJlZ0V4cHMpIHtcbiAgICBjb25zdCByZWdleHAgPSBwcm9wUmVnRXhwcy5zaGlmdCgpO1xuICAgIGlmICghcmVnZXhwKSB7XG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIGlmICgoMCwgZnVuY3Rpb25fMS5pc01hcE9iamVjdCkob2JqKSkge1xuICAgICAgICBmb3IgKGNvbnN0IHByb3Agb2YgT2JqZWN0LmtleXMob2JqKSkge1xuICAgICAgICAgICAgaWYgKHJlZ2V4cC50ZXN0KHByb3ApKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxvb2t1cFZhbHVlKG9ialtwcm9wXSwgcHJvcFJlZ0V4cHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gdG9YTUwobmFtZSwgdmFsdWUpIHtcbiAgICBpZiAoKDAsIGZ1bmN0aW9uXzEuaXNPYmplY3QpKG5hbWUpKSB7XG4gICAgICAgIHZhbHVlID0gbmFtZTtcbiAgICAgICAgbmFtZSA9IG51bGw7XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gdmFsdWUubWFwKCh2KSA9PiB0b1hNTChuYW1lLCB2KSkuam9pbignJyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBhdHRycyA9IFtdO1xuICAgICAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgICAgIGF0dHJzLnB1c2goJ3hzaTpuaWw9XCJ0cnVlXCInKTtcbiAgICAgICAgICAgIHZhbHVlID0gJyc7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoKDAsIGZ1bmN0aW9uXzEuaXNNYXBPYmplY3QpKHZhbHVlKSkge1xuICAgICAgICAgICAgY29uc3QgZWxlbXMgPSBbXTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgayBvZiBPYmplY3Qua2V5cyh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB2ID0gdmFsdWVba107XG4gICAgICAgICAgICAgICAgaWYgKGsuc3RhcnRzV2l0aCgnQCcpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGtrID0gay5zdWJzdHJpbmcoMSk7XG4gICAgICAgICAgICAgICAgICAgIGF0dHJzLnB1c2goYCR7a2t9PVwiJHt2fVwiYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBlbGVtcy5wdXNoKHRvWE1MKGssIHYpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YWx1ZSA9IGVsZW1zLmpvaW4oJycpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdmFsdWUgPSBTdHJpbmcodmFsdWUpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoLyYvZywgJyZhbXA7JylcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvPC9nLCAnJmx0OycpXG4gICAgICAgICAgICAgICAgLnJlcGxhY2UoLz4vZywgJyZndDsnKVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cIi9nLCAnJnF1b3Q7JylcbiAgICAgICAgICAgICAgICAucmVwbGFjZSgvJy9nLCAnJmFwb3M7Jyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc3RhcnRUYWcgPSBuYW1lXG4gICAgICAgICAgICA/ICc8JyArIG5hbWUgKyAoYXR0cnMubGVuZ3RoID4gMCA/ICcgJyArIGF0dHJzLmpvaW4oJyAnKSA6ICcnKSArICc+J1xuICAgICAgICAgICAgOiAnJztcbiAgICAgICAgY29uc3QgZW5kVGFnID0gbmFtZSA/ICc8LycgKyBuYW1lICsgJz4nIDogJyc7XG4gICAgICAgIHJldHVybiBzdGFydFRhZyArIHZhbHVlICsgZW5kVGFnO1xuICAgIH1cbn1cbi8qKlxuICogQ2xhc3MgZm9yIFNPQVAgZW5kcG9pbnQgb2YgU2FsZXNmb3JjZVxuICpcbiAqIEBwcm90ZWN0ZWRcbiAqIEBjbGFzc1xuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0Nvbm5lY3Rpb259IGNvbm4gLSBDb25uZWN0aW9uIGluc3RhbmNlXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyAtIFNPQVAgZW5kcG9pbnQgc2V0dGluZyBvcHRpb25zXG4gKiBAcGFyYW0ge1N0cmluZ30gb3B0aW9ucy5lbmRwb2ludFVybCAtIFNPQVAgZW5kcG9pbnQgVVJMXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMueG1sbnNdIC0gWE1MIG5hbWVzcGFjZSBmb3IgbWV0aG9kIGNhbGwgKGRlZmF1bHQgaXMgXCJ1cm46cGFydG5lci5zb2FwLnNmb3JjZS5jb21cIilcbiAqL1xuY2xhc3MgU09BUCBleHRlbmRzIGh0dHBfYXBpXzEuZGVmYXVsdCB7XG4gICAgX2VuZHBvaW50VXJsO1xuICAgIF94bWxucztcbiAgICBjb25zdHJ1Y3Rvcihjb25uLCBvcHRpb25zKSB7XG4gICAgICAgIHN1cGVyKGNvbm4sIG9wdGlvbnMpO1xuICAgICAgICBpZiAodGhpcy5fY29ubi5hY2Nlc3NUb2tlbiAmJiAoMCwgand0XzEuaXNKV1RUb2tlbikodGhpcy5fY29ubi5hY2Nlc3NUb2tlbikpIHtcbiAgICAgICAgICAgIC8vIFdlIG5lZWQgdG8gYmxvY2sgU09BUCByZXF1ZXN0cyB3aXRoIEpXVCB0b2tlbnMgYmVjYXVzZSB0aGUgcmVzcG9uc2UgaXM6XG4gICAgICAgICAgICAvLyBzdGF0dXNDb2RlPTUwMCB8IGJvZHk9XCJJTlZBTElEX1NFU1NJT05fSURcIiAoeG1sKSwgd2hpY2ggdHJpZ2dlcnMgc2Vzc2lvbiByZWZyZXNoIGFuZCBlbnRlcnMgaW4gYW4gaW5maW5pdGUgbG9vcFxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTT0FQIEFQSSBkb2VzIG5vdCBzdXBwb3J0IEpXVC1iYXNlZCBhY2Nlc3MgdG9rZW5zLiBZb3UgbXVzdCBkaXNhYmxlIHRoZSBcIklzc3VlIEpTT04gV2ViIFRva2VuIChKV1QpLWJhc2VkIGFjY2VzcyB0b2tlbnNcIiBzZXR0aW5nIGluIHlvdXIgQ29ubmVjdGVkIEFwcCBvciBFeHRlcm5hbCBDbGllbnQgQXBwJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fZW5kcG9pbnRVcmwgPSBvcHRpb25zLmVuZHBvaW50VXJsO1xuICAgICAgICB0aGlzLl94bWxucyA9IG9wdGlvbnMueG1sbnMgfHwgJ3VybjpwYXJ0bmVyLnNvYXAuc2ZvcmNlLmNvbSc7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEludm9rZSBTT0FQIGNhbGwgdXNpbmcgbWV0aG9kIGFuZCBhcmd1bWVudHNcbiAgICAgKi9cbiAgICBhc3luYyBpbnZva2UobWV0aG9kLCBhcmdzLCBzY2hlbWEsIHNjaGVtYURpY3QpIHtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy5yZXF1ZXN0KHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgdXJsOiB0aGlzLl9lbmRwb2ludFVybCxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ3RleHQveG1sJyxcbiAgICAgICAgICAgICAgICBTT0FQQWN0aW9uOiAnXCJcIicsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgX21lc3NhZ2U6IHsgW21ldGhvZF06IGFyZ3MgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBzY2hlbWEgPyBjYXN0VHlwZVVzaW5nU2NoZW1hKHJlcywgc2NoZW1hLCBzY2hlbWFEaWN0KSA6IHJlcztcbiAgICB9XG4gICAgLyoqIEBvdmVycmlkZSAqL1xuICAgIGJlZm9yZVNlbmQocmVxdWVzdCkge1xuICAgICAgICByZXF1ZXN0LmJvZHkgPSB0aGlzLl9jcmVhdGVFbnZlbG9wZShyZXF1ZXN0Ll9tZXNzYWdlKTtcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IHJlcXVlc3QuaGVhZGVycyB8fCB7fTtcbiAgICAgICAgY29uc3QgYm9keVNpemUgPSAoMCwgZ2V0X2JvZHlfc2l6ZV8xLmdldEJvZHlTaXplKShyZXF1ZXN0LmJvZHksIHJlcXVlc3QuaGVhZGVycyk7XG4gICAgICAgIGlmICghaHR0cF9hcGlfMS5pc0Jyb3dzZXIgJiYgLy8gRG9uJ3Qgc2V0IGNvbnRlbnQtbGVuZ3RoIGluIGJyb3dzZXJzIGFzIGl0J3Mgbm90IGFsbG93ZWRcbiAgICAgICAgICAgIHJlcXVlc3QubWV0aG9kID09PSAnUE9TVCcgJiZcbiAgICAgICAgICAgICEoJ3RyYW5zZmVyLWVuY29kaW5nJyBpbiBoZWFkZXJzKSAmJlxuICAgICAgICAgICAgISgnY29udGVudC1sZW5ndGgnIGluIGhlYWRlcnMpICYmXG4gICAgICAgICAgICAhIWJvZHlTaXplKSB7XG4gICAgICAgICAgICB0aGlzLl9sb2dnZXIuZGVidWcoYG1pc3NpbmcgJ2NvbnRlbnQtbGVuZ3RoJyBoZWFkZXIsIHNldHRpbmcgaXQgdG86ICR7Ym9keVNpemV9YCk7XG4gICAgICAgICAgICBoZWFkZXJzWydjb250ZW50LWxlbmd0aCddID0gU3RyaW5nKGJvZHlTaXplKTtcbiAgICAgICAgfVxuICAgICAgICByZXF1ZXN0LmhlYWRlcnMgPSBoZWFkZXJzO1xuICAgIH1cbiAgICAvKiogQG92ZXJyaWRlICoqL1xuICAgIGlzU2Vzc2lvbkV4cGlyZWQocmVzcG9uc2UpIHtcbiAgICAgICAgcmV0dXJuIChyZXNwb25zZS5zdGF0dXNDb2RlID09PSA1MDAgJiZcbiAgICAgICAgICAgIC88ZmF1bHRjb2RlPlthLXpBLVpdKzpJTlZBTElEX1NFU1NJT05fSUQ8XFwvZmF1bHRjb2RlPi8udGVzdChyZXNwb25zZS5ib2R5KSk7XG4gICAgfVxuICAgIC8qKiBAb3ZlcnJpZGUgKiovXG4gICAgcGFyc2VFcnJvcihib2R5KSB7XG4gICAgICAgIGNvbnN0IGVycm9yID0gbG9va3VwVmFsdWUoYm9keSwgWy86RW52ZWxvcGUkLywgLzpCb2R5JC8sIC86RmF1bHQkL10pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZXJyb3JDb2RlOiBlcnJvci5mYXVsdGNvZGUsXG4gICAgICAgICAgICBtZXNzYWdlOiBlcnJvci5mYXVsdHN0cmluZyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqIEBvdmVycmlkZSAqKi9cbiAgICBhc3luYyBnZXRSZXNwb25zZUJvZHkocmVzcG9uc2UpIHtcbiAgICAgICAgY29uc3QgYm9keSA9IGF3YWl0IHN1cGVyLmdldFJlc3BvbnNlQm9keShyZXNwb25zZSk7XG4gICAgICAgIHJldHVybiBsb29rdXBWYWx1ZShib2R5LCBbLzpFbnZlbG9wZSQvLCAvOkJvZHkkLywgLy4rL10pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICAgIF9jcmVhdGVFbnZlbG9wZShtZXNzYWdlKSB7XG4gICAgICAgIGNvbnN0IGhlYWRlciA9IHt9O1xuICAgICAgICBjb25zdCBjb25uID0gdGhpcy5fY29ubjtcbiAgICAgICAgaWYgKGNvbm4uYWNjZXNzVG9rZW4pIHtcbiAgICAgICAgICAgIGhlYWRlci5TZXNzaW9uSGVhZGVyID0geyBzZXNzaW9uSWQ6IGNvbm4uYWNjZXNzVG9rZW4gfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY29ubi5fY2FsbE9wdGlvbnMpIHtcbiAgICAgICAgICAgIGhlYWRlci5DYWxsT3B0aW9ucyA9IGNvbm4uX2NhbGxPcHRpb25zO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAnPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+JyxcbiAgICAgICAgICAgICc8c29hcGVudjpFbnZlbG9wZSB4bWxuczpzb2FwZW52PVwiaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS9cIicsXG4gICAgICAgICAgICAnIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCInLFxuICAgICAgICAgICAgJyB4bWxuczp4c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiPicsXG4gICAgICAgICAgICAnPHNvYXBlbnY6SGVhZGVyIHhtbG5zPVwiJyArIHRoaXMuX3htbG5zICsgJ1wiPicsXG4gICAgICAgICAgICB0b1hNTChoZWFkZXIpLFxuICAgICAgICAgICAgJzwvc29hcGVudjpIZWFkZXI+JyxcbiAgICAgICAgICAgICc8c29hcGVudjpCb2R5IHhtbG5zPVwiJyArIHRoaXMuX3htbG5zICsgJ1wiPicsXG4gICAgICAgICAgICB0b1hNTChtZXNzYWdlKSxcbiAgICAgICAgICAgICc8L3NvYXBlbnY6Qm9keT4nLFxuICAgICAgICAgICAgJzwvc29hcGVudjpFbnZlbG9wZT4nLFxuICAgICAgICBdLmpvaW4oJycpO1xuICAgIH1cbn1cbmV4cG9ydHMuU09BUCA9IFNPQVA7XG5leHBvcnRzLmRlZmF1bHQgPSBTT0FQO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/soap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/sobject.js":
/*!*********************************************!*\
  !*** ./node_modules/jsforce/lib/sobject.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SObject = void 0;\n/**\n *\n */\nconst logger_1 = __webpack_require__(/*! ./util/logger */ \"(rsc)/./node_modules/jsforce/lib/util/logger.js\");\nconst record_reference_1 = __importDefault(__webpack_require__(/*! ./record-reference */ \"(rsc)/./node_modules/jsforce/lib/record-reference.js\"));\nconst query_1 = __importStar(__webpack_require__(/*! ./query */ \"(rsc)/./node_modules/jsforce/lib/query.js\"));\nconst quick_action_1 = __importDefault(__webpack_require__(/*! ./quick-action */ \"(rsc)/./node_modules/jsforce/lib/quick-action.js\"));\n/**\n * A class for organizing all SObject access\n */\nclass SObject {\n    static _logger = (0, logger_1.getLogger)('sobject');\n    type;\n    _conn;\n    _logger;\n    // layouts: (ln?: string) => Promise<DescribeLayoutResult>;\n    layouts$;\n    layouts$$;\n    // compactLayouts: () => Promise<DescribeCompactLayoutsResult>;\n    compactLayouts$;\n    compactLayouts$$;\n    // approvalLayouts: () => Promise<DescribeApprovalLayoutsResult>;\n    approvalLayouts$;\n    approvalLayouts$$;\n    /**\n     *\n     */\n    constructor(conn, type) {\n        this.type = type;\n        this._conn = conn;\n        this._logger = conn._logLevel\n            ? SObject._logger.createInstance(conn._logLevel)\n            : SObject._logger;\n        const cache = this._conn.cache;\n        const layoutCacheKey = (layoutName) => layoutName\n            ? `layouts.namedLayouts.${layoutName}`\n            : `layouts.${this.type}`;\n        const layouts = SObject.prototype.layouts;\n        this.layouts = cache.createCachedFunction(layouts, this, {\n            key: layoutCacheKey,\n            strategy: 'NOCACHE',\n        });\n        this.layouts$ = cache.createCachedFunction(layouts, this, {\n            key: layoutCacheKey,\n            strategy: 'HIT',\n        });\n        this.layouts$$ = cache.createCachedFunction(layouts, this, {\n            key: layoutCacheKey,\n            strategy: 'IMMEDIATE',\n        });\n        const compactLayoutCacheKey = `compactLayouts.${this.type}`;\n        const compactLayouts = SObject.prototype.compactLayouts;\n        this.compactLayouts = cache.createCachedFunction(compactLayouts, this, {\n            key: compactLayoutCacheKey,\n            strategy: 'NOCACHE',\n        });\n        this.compactLayouts$ = cache.createCachedFunction(compactLayouts, this, {\n            key: compactLayoutCacheKey,\n            strategy: 'HIT',\n        });\n        this.compactLayouts$$ = cache.createCachedFunction(compactLayouts, this, {\n            key: compactLayoutCacheKey,\n            strategy: 'IMMEDIATE',\n        });\n        const approvalLayoutCacheKey = `approvalLayouts.${this.type}`;\n        const approvalLayouts = SObject.prototype.approvalLayouts;\n        this.approvalLayouts = cache.createCachedFunction(approvalLayouts, this, {\n            key: approvalLayoutCacheKey,\n            strategy: 'NOCACHE',\n        });\n        this.approvalLayouts$ = cache.createCachedFunction(approvalLayouts, this, {\n            key: approvalLayoutCacheKey,\n            strategy: 'HIT',\n        });\n        this.approvalLayouts$$ = cache.createCachedFunction(approvalLayouts, this, {\n            key: approvalLayoutCacheKey,\n            strategy: 'IMMEDIATE',\n        });\n    }\n    create(records, options) {\n        return this._conn.create(this.type, records, options);\n    }\n    /**\n     * Synonym of SObject#create()\n     */\n    insert = this.create;\n    retrieve(ids, options) {\n        return this._conn.retrieve(this.type, ids, options);\n    }\n    update(records, options) {\n        return this._conn.update(this.type, records, options);\n    }\n    upsert(records, extIdField, options) {\n        return this._conn.upsert(this.type, records, extIdField, options);\n    }\n    destroy(ids, options) {\n        return this._conn.destroy(this.type, ids, options);\n    }\n    /**\n     * Synonym of SObject#destroy()\n     */\n    delete = this.destroy;\n    /**\n     * Synonym of SObject#destroy()\n     */\n    del = this.destroy;\n    /**\n     * Call Bulk#load() to execute bulkload, returning batch object\n     */\n    bulkload(operation, optionsOrInput, input) {\n        return this._conn.bulk.load(this.type, operation, optionsOrInput, input);\n    }\n    /**\n     * Bulkly insert input data using bulk API\n     */\n    createBulk(input) {\n        return this.bulkload('insert', input);\n    }\n    /**\n     * Synonym of SObject#createBulk()\n     */\n    insertBulk = this.createBulk;\n    /**\n     * Bulkly update records by input data using bulk API\n     */\n    updateBulk(input) {\n        return this.bulkload('update', input);\n    }\n    /**\n     * Bulkly upsert records by input data using bulk API\n     */\n    upsertBulk(input, extIdField) {\n        return this.bulkload('upsert', { extIdField }, input);\n    }\n    /**\n     * Bulkly delete records specified by input data using bulk API\n     */\n    destroyBulk(input) {\n        return this.bulkload('delete', input);\n    }\n    /**\n     * Synonym of SObject#destroyBulk()\n     */\n    deleteBulk = this.destroyBulk;\n    /**\n     * Bulkly hard delete records specified in input data using bulk API\n     */\n    destroyHardBulk(input) {\n        return this.bulkload('hardDelete', input);\n    }\n    /**\n     * Synonym of SObject#destroyHardBulk()\n     */\n    deleteHardBulk = this.destroyHardBulk;\n    /**\n     * Describe SObject metadata\n     */\n    describe() {\n        return this._conn.describe(this.type);\n    }\n    /**\n     *\n     */\n    describe$() {\n        return this._conn.describe$(this.type);\n    }\n    /**\n     *\n     */\n    describe$$() {\n        return this._conn.describe$$(this.type);\n    }\n    /**\n     * Get record representation instance by given id\n     */\n    record(id) {\n        return new record_reference_1.default(this._conn, this.type, id);\n    }\n    /**\n     * Retrieve recently accessed records\n     */\n    recent() {\n        return this._conn.recent(this.type);\n    }\n    /**\n     * Retrieve the updated records\n     */\n    updated(start, end) {\n        return this._conn.updated(this.type, start, end);\n    }\n    /**\n     * Retrieve the deleted records\n     */\n    deleted(start, end) {\n        return this._conn.deleted(this.type, start, end);\n    }\n    /**\n     * Describe layout information for SObject\n     */\n    async layouts(layoutName) {\n        const url = `/sobjects/${this.type}/describe/${layoutName ? `namedLayouts/${layoutName}` : 'layouts'}`;\n        const body = await this._conn.request(url);\n        return body;\n    }\n    /**\n     * @typedef {Object} CompactLayoutInfo\n     * @prop {Array.<Object>} compactLayouts - Array of compact layouts\n     * @prop {String} defaultCompactLayoutId - ID of default compact layout\n     * @prop {Array.<Object>} recordTypeCompactLayoutMappings - Array of record type mappings\n     */\n    /**\n     * Describe compact layout information defined for SObject\n     *\n     * @param {Callback.<CompactLayoutInfo>} [callback] - Callback function\n     * @returns {Promise.<CompactLayoutInfo>}\n     */\n    async compactLayouts() {\n        const url = `/sobjects/${this.type}/describe/compactLayouts`;\n        const body = await this._conn.request(url);\n        return body;\n    }\n    /**\n     * Describe compact layout information defined for SObject\n     *\n     * @param {Callback.<ApprovalLayoutInfo>} [callback] - Callback function\n     * @returns {Promise.<ApprovalLayoutInfo>}\n     */\n    async approvalLayouts() {\n        const url = `/sobjects/${this.type}/describe/approvalLayouts`;\n        const body = await this._conn.request(url);\n        return body;\n    }\n    find(conditions, fields, options = {}) {\n        const { sort, limit, offset, ...qoptions } = options;\n        const config = {\n            fields: fields == null ? undefined : fields,\n            includes: options.includes,\n            table: this.type,\n            conditions: conditions == null ? undefined : conditions,\n            sort,\n            limit,\n            offset,\n        };\n        const query = new query_1.default(this._conn, config, qoptions);\n        return query.setResponseTarget(query_1.ResponseTargets.Records);\n    }\n    findOne(conditions, fields, options = {}) {\n        const query = this.find(conditions, fields, { ...options, limit: 1 });\n        return query.setResponseTarget(query_1.ResponseTargets.SingleRecord);\n    }\n    /**\n     * Find and fetch records only by specifying fields to fetch.\n     */\n    select(fields) {\n        return this.find(null, fields);\n    }\n    /**\n     * Count num of records which matches given conditions\n     */\n    count(conditions) {\n        const query = this.find(conditions, 'count()');\n        return query.setResponseTarget(query_1.ResponseTargets.Count);\n    }\n    /**\n     * Returns the list of list views for the SObject\n     *\n     * @param {Callback.<ListViewsInfo>} [callback] - Callback function\n     * @returns {Promise.<ListViewsInfo>}\n     */\n    listviews() {\n        const url = `${this._conn._baseUrl()}/sobjects/${this.type}/listviews`;\n        return this._conn.request(url);\n    }\n    /**\n     * Returns the list view info in specifed view id\n     *\n     * @param {String} id - List view ID\n     * @returns {ListView}\n     */\n    listview(id) {\n        return new ListView(this._conn, this.type, id); // eslint-disable-line no-use-before-define\n    }\n    /**\n     * Returns all registered quick actions for the SObject\n     *\n     * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\n     * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\n     */\n    quickActions() {\n        return this._conn.request(`/sobjects/${this.type}/quickActions`);\n    }\n    /**\n     * Get reference for specified quick aciton in the SObject\n     *\n     * @param {String} actionName - Name of the quick action\n     * @returns {QuickAction}\n     */\n    quickAction(actionName) {\n        return new quick_action_1.default(this._conn, `/sobjects/${this.type}/quickActions/${actionName}`);\n    }\n}\nexports.SObject = SObject;\n/**\n * A class for organizing list view information\n *\n * @protected\n * @class ListView\n * @param {Connection} conn - Connection instance\n * @param {SObject} type - SObject type\n * @param {String} id - List view ID\n */\nclass ListView {\n    _conn;\n    type;\n    id;\n    /**\n     *\n     */\n    constructor(conn, type, id) {\n        this._conn = conn;\n        this.type = type;\n        this.id = id;\n    }\n    /**\n     * Executes query for the list view and returns the resulting data and presentation information.\n     */\n    results() {\n        const url = `${this._conn._baseUrl()}/sobjects/${this.type}/listviews/${this.id}/results`;\n        return this._conn.request(url);\n    }\n    /**\n     * Returns detailed information about a list view\n     */\n    describe(options = {}) {\n        const url = `${this._conn._baseUrl()}/sobjects/${this.type}/listviews/${this.id}/describe`;\n        return this._conn.request({ method: 'GET', url, headers: options.headers });\n    }\n    /**\n     * Explain plan for executing list view\n     */\n    explain() {\n        const url = `/query/?explain=${this.id}`;\n        return this._conn.request(url);\n    }\n}\nexports[\"default\"] = SObject;\n// TODO Bulk\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/sobject.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/soql-builder.js":
/*!**************************************************!*\
  !*** ./node_modules/jsforce/lib/soql-builder.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createSOQL = void 0;\n/**\n * @file Create and build SOQL string from configuration\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\nconst date_1 = __importDefault(__webpack_require__(/*! ./date */ \"(rsc)/./node_modules/jsforce/lib/date.js\"));\n/** @private **/\nfunction escapeSOQLString(str) {\n    return String(str || '').replace(/'/g, \"\\\\'\");\n}\n/** @private **/\nfunction createFieldsClause(fields, childQueries = {}) {\n    const cqueries = Object.values(childQueries);\n    // eslint-disable-next-line no-use-before-define\n    return [\n        ...(fields || ['Id']),\n        ...cqueries.map((cquery) => `(${createSOQL(cquery)})`),\n    ].join(', ');\n}\n/** @private **/\nfunction createValueExpression(value) {\n    if (Array.isArray(value)) {\n        return value.length > 0\n            ? `(${value.map(createValueExpression).join(', ')})`\n            : undefined;\n    }\n    if (value instanceof date_1.default) {\n        return value.toString();\n    }\n    if (typeof value === 'string') {\n        return `'${escapeSOQLString(value)}'`;\n    }\n    if (typeof value === 'number') {\n        return value.toString();\n    }\n    if (value === null) {\n        return 'null';\n    }\n    return value;\n}\nconst opMap = {\n    '=': '=',\n    $eq: '=',\n    '!=': '!=',\n    $ne: '!=',\n    '>': '>',\n    $gt: '>',\n    '<': '<',\n    $lt: '<',\n    '>=': '>=',\n    $gte: '>=',\n    '<=': '<=',\n    $lte: '<=',\n    $like: 'LIKE',\n    $nlike: 'NOT LIKE',\n    $in: 'IN',\n    $nin: 'NOT IN',\n    $includes: 'INCLUDES',\n    $excludes: 'EXCLUDES',\n    $exists: 'EXISTS',\n};\n/** @private **/\nfunction createFieldExpression(field, value) {\n    let op = '$eq';\n    let _value = value;\n    // Assume the `$in` operator if value is an array and none was supplied.\n    if (Array.isArray(value)) {\n        op = '$in';\n    }\n    else if (typeof value === 'object' && value !== null) {\n        // Otherwise, if an object was passed then process the supplied ops.\n        for (const k of Object.keys(value)) {\n            if (k.startsWith('$')) {\n                op = k;\n                _value = value[k];\n                break;\n            }\n        }\n    }\n    const sfop = opMap[op];\n    if (!sfop || typeof _value === 'undefined') {\n        return null;\n    }\n    const valueExpr = createValueExpression(_value);\n    if (typeof valueExpr === 'undefined') {\n        return null;\n    }\n    switch (sfop) {\n        case 'NOT LIKE':\n            return `(${['NOT', field, 'LIKE', valueExpr].join(' ')})`;\n        case 'EXISTS':\n            return [field, _value ? '!=' : '=', 'null'].join(' ');\n        default:\n            return [field, sfop, valueExpr].join(' ');\n    }\n}\n/** @private **/\nfunction createOrderByClause(sort = []) {\n    let _sort = [];\n    if (typeof sort === 'string') {\n        if (/,|\\s+(asc|desc)\\s*$/.test(sort)) {\n            // must be specified in pure \"order by\" clause. Return raw config.\n            return sort;\n        }\n        // sort order in mongoose-style expression.\n        // e.g. \"FieldA -FieldB\" => \"ORDER BY FieldA ASC, FieldB DESC\"\n        _sort = sort.split(/\\s+/).map((field) => {\n            let dir = 'ASC'; // ascending\n            const flag = field[0];\n            if (flag === '-') {\n                dir = 'DESC';\n                field = field.substring(1); // eslint-disable-line no-param-reassign\n            }\n            else if (flag === '+') {\n                field = field.substring(1); // eslint-disable-line no-param-reassign\n            }\n            return [field, dir];\n        });\n    }\n    else if (Array.isArray(sort)) {\n        _sort = sort;\n    }\n    else {\n        _sort = Object.entries(sort).map(([field, dir]) => [field, dir]);\n    }\n    return _sort\n        .map(([field, dir]) => {\n        /* eslint-disable no-param-reassign */\n        switch (String(dir)) {\n            case 'DESC':\n            case 'desc':\n            case 'descending':\n            case '-':\n            case '-1':\n                dir = 'DESC';\n                break;\n            default:\n                dir = 'ASC';\n        }\n        return `${field} ${dir}`;\n    })\n        .join(', ');\n}\n/** @private **/\nfunction createConditionClause(conditions = {}, operator = 'AND', depth = 0) {\n    if (typeof conditions === 'string') {\n        return conditions;\n    }\n    let conditionList = [];\n    if (!Array.isArray(conditions)) {\n        // if passed in hash object\n        const conditionsMap = conditions;\n        conditionList = Object.keys(conditionsMap).map((key) => ({\n            key,\n            value: conditionsMap[key],\n        }));\n    }\n    else {\n        conditionList = conditions.map((cond) => {\n            const conds = Object.keys(cond).map((key) => ({ key, value: cond[key] }));\n            return conds.length > 1\n                ? { key: '$and', value: conds.map((c) => ({ [c.key]: c.value })) }\n                : conds[0];\n        });\n    }\n    const conditionClauses = conditionList\n        .map((cond) => {\n        let d = depth + 1;\n        let op;\n        switch (cond.key) {\n            case '$or':\n            case '$and':\n            case '$not':\n                if (operator !== 'NOT' && conditionList.length === 1) {\n                    d = depth; // not change tree depth\n                }\n                op = cond.key === '$or' ? 'OR' : cond.key === '$and' ? 'AND' : 'NOT';\n                return createConditionClause(cond.value, op, d);\n            default:\n                return createFieldExpression(cond.key, cond.value);\n        }\n    })\n        .filter((expr) => expr);\n    let hasParen;\n    if (operator === 'NOT') {\n        hasParen = depth > 0;\n        return `${hasParen ? '(' : ''}NOT ${conditionClauses[0]}${hasParen ? ')' : ''}`;\n    }\n    hasParen = depth > 0 && conditionClauses.length > 1;\n    return ((hasParen ? '(' : '') +\n        conditionClauses.join(` ${operator} `) +\n        (hasParen ? ')' : ''));\n}\n/**\n * Create SOQL\n * @private\n */\nfunction createSOQL(query) {\n    let soql = [\n        'SELECT ',\n        createFieldsClause(query.fields, query.includes),\n        ' FROM ',\n        query.table,\n    ].join('');\n    const cond = createConditionClause(query.conditions);\n    if (cond) {\n        soql += ` WHERE ${cond}`;\n    }\n    const orderby = createOrderByClause(query.sort);\n    if (orderby) {\n        soql += ` ORDER BY ${orderby}`;\n    }\n    if (query.limit) {\n        soql += ` LIMIT ${query.limit}`;\n    }\n    if (query.offset) {\n        soql += ` OFFSET ${query.offset}`;\n    }\n    return soql;\n}\nexports.createSOQL = createSOQL;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/soql-builder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/transport.js":
/*!***********************************************!*\
  !*** ./node_modules/jsforce/lib/transport.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HttpProxyTransport = exports.XdProxyTransport = exports.CanvasTransport = exports.JsonpTransport = exports.Transport = void 0;\nconst request_1 = __importStar(__webpack_require__(/*! ./request */ \"(rsc)/./node_modules/jsforce/lib/request.js\"));\nconst promise_1 = __webpack_require__(/*! ./util/promise */ \"(rsc)/./node_modules/jsforce/lib/util/promise.js\");\nconst jsonp_1 = __importDefault(__webpack_require__(/*! ./browser/jsonp */ \"(rsc)/./node_modules/jsforce/lib/browser/jsonp.js\"));\nconst canvas_1 = __importDefault(__webpack_require__(/*! ./browser/canvas */ \"(rsc)/./node_modules/jsforce/lib/browser/canvas.js\"));\n/**\n * Normarize Salesforce API host name\n * @private\n */\nfunction normalizeApiHost(apiHost) {\n    const m = /(\\w+)\\.(visual\\.force|salesforce)\\.com$/.exec(apiHost);\n    if (m) {\n        return `${m[1]}.salesforce.com`;\n    }\n    return apiHost;\n}\n(0, request_1.setDefaults)({\n    httpProxy: process.env.https_proxy ?? process.env.http_proxy ?? process.env.HTTPS_PROXY ?? process.env.HTTP_PROXY ?? undefined,\n    timeout: process.env.HTTP_TIMEOUT\n        ? parseInt(process.env.HTTP_TIMEOUT, 10)\n        : undefined,\n    followRedirect: true,\n});\nconst baseUrl = typeof window !== 'undefined' && window.location && window.location.host\n    ? `https://${normalizeApiHost(window.location.host)}`\n    : process.env.LOCATION_BASE_URL || '';\n/**\n * Class for HTTP request transport\n *\n * @class\n * @protected\n */\nclass Transport {\n    /**\n     */\n    httpRequest(req, options = {}) {\n        return promise_1.StreamPromise.create(() => {\n            const createStream = this.getRequestStreamCreator();\n            const stream = createStream(req, options);\n            const promise = new Promise((resolve, reject) => {\n                stream\n                    .on('complete', (res) => resolve(res))\n                    .on('error', reject);\n            });\n            return { stream, promise };\n        });\n    }\n    /**\n     * @protected\n     */\n    getRequestStreamCreator() {\n        return request_1.default;\n    }\n}\nexports.Transport = Transport;\n/**\n * Class for JSONP request transport\n */\nclass JsonpTransport extends Transport {\n    static supprted = jsonp_1.default.supported;\n    _jsonpParam;\n    constructor(jsonpParam) {\n        super();\n        this._jsonpParam = jsonpParam;\n    }\n    getRequestStreamCreator() {\n        const jsonpRequest = jsonp_1.default.createRequest(this._jsonpParam);\n        return (params) => jsonpRequest(params);\n    }\n}\nexports.JsonpTransport = JsonpTransport;\n/**\n * Class for Sfdc Canvas request transport\n */\nclass CanvasTransport extends Transport {\n    static supported = canvas_1.default.supported;\n    _signedRequest;\n    constructor(signedRequest) {\n        super();\n        this._signedRequest = signedRequest;\n    }\n    getRequestStreamCreator() {\n        const canvasRequest = canvas_1.default.createRequest(this._signedRequest);\n        return (params) => canvasRequest(params);\n    }\n}\nexports.CanvasTransport = CanvasTransport;\n/* @private */\nfunction createXdProxyRequest(req, proxyUrl) {\n    const headers = {\n        'salesforceproxy-endpoint': req.url,\n    };\n    if (req.headers) {\n        for (const name of Object.keys(req.headers)) {\n            headers[name] = req.headers[name];\n        }\n    }\n    const nocache = `${Date.now()}.${String(Math.random()).substring(2)}`;\n    return {\n        method: req.method,\n        url: `${proxyUrl}?${nocache}`,\n        headers,\n        ...(req.body != null ? { body: req.body } : {}),\n    };\n}\n/**\n * Class for HTTP request transport using cross-domain AJAX proxy service\n */\nclass XdProxyTransport extends Transport {\n    _xdProxyUrl;\n    constructor(xdProxyUrl) {\n        super();\n        this._xdProxyUrl = xdProxyUrl;\n    }\n    /**\n     * Make HTTP request via AJAX proxy\n     */\n    httpRequest(req, _options = {}) {\n        const xdProxyUrl = this._xdProxyUrl;\n        const { url, body, ...rreq } = req;\n        const canonicalUrl = url.startsWith('/') ? baseUrl + url : url;\n        const xdProxyReq = createXdProxyRequest({ ...rreq, url: canonicalUrl, body }, xdProxyUrl);\n        return super.httpRequest(xdProxyReq, {\n            followRedirect: (redirectUrl) => createXdProxyRequest({ ...rreq, method: 'GET', url: redirectUrl }, xdProxyUrl),\n        });\n    }\n}\nexports.XdProxyTransport = XdProxyTransport;\n/**\n * Class for HTTP request transport using a proxy server\n */\nclass HttpProxyTransport extends Transport {\n    _httpProxy;\n    constructor(httpProxy) {\n        super();\n        this._httpProxy = httpProxy;\n    }\n    /**\n     * Make HTTP request via proxy server\n     */\n    httpRequest(req, options_ = {}) {\n        const options = { ...options_, httpProxy: this._httpProxy };\n        return super.httpRequest(req, options);\n    }\n}\nexports.HttpProxyTransport = HttpProxyTransport;\nexports[\"default\"] = Transport;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/transport.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/types/common.js":
/*!**************************************************!*\
  !*** ./node_modules/jsforce/lib/types/common.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdHlwZXMvY29tbW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdHlwZXMvY29tbW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/types/common.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/types/index.js":
/*!*************************************************!*\
  !*** ./node_modules/jsforce/lib/types/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./common */ \"(rsc)/./node_modules/jsforce/lib/types/common.js\"), exports);\n__exportStar(__webpack_require__(/*! ./schema */ \"(rsc)/./node_modules/jsforce/lib/types/schema.js\"), exports);\n__exportStar(__webpack_require__(/*! ./projection */ \"(rsc)/./node_modules/jsforce/lib/types/projection.js\"), exports);\n__exportStar(__webpack_require__(/*! ./record */ \"(rsc)/./node_modules/jsforce/lib/types/record.js\"), exports);\n__exportStar(__webpack_require__(/*! ./util */ \"(rsc)/./node_modules/jsforce/lib/types/util.js\"), exports);\n__exportStar(__webpack_require__(/*! ./soap */ \"(rsc)/./node_modules/jsforce/lib/types/soap.js\"), exports);\n__exportStar(__webpack_require__(/*! ./standard-schema */ \"(rsc)/./node_modules/jsforce/lib/types/standard-schema.js\"), exports);\n__exportStar(__webpack_require__(/*! ../util/promise */ \"(rsc)/./node_modules/jsforce/lib/util/promise.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdHlwZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLGtFQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxrRUFBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMsMEVBQWM7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLGtFQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyw4REFBUTtBQUM3QixhQUFhLG1CQUFPLENBQUMsOERBQVE7QUFDN0IsYUFBYSxtQkFBTyxDQUFDLG9GQUFtQjtBQUN4QyxhQUFhLG1CQUFPLENBQUMseUVBQWlCIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdHlwZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb21tb25cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NjaGVtYVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcHJvamVjdGlvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcmVjb3JkXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zb2FwXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zdGFuZGFyZC1zY2hlbWFcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuLi91dGlsL3Byb21pc2VcIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/types/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/types/projection.js":
/*!******************************************************!*\
  !*** ./node_modules/jsforce/lib/types/projection.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdHlwZXMvcHJvamVjdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL25lem9iZW5hcmRpL0FJX3N0dWZmL09uYm9hcmRpbmdQb3J0YWwvbm9kZV9tb2R1bGVzL2pzZm9yY2UvbGliL3R5cGVzL3Byb2plY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/types/projection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/types/record.js":
/*!**************************************************!*\
  !*** ./node_modules/jsforce/lib/types/record.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdHlwZXMvcmVjb3JkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdHlwZXMvcmVjb3JkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/types/record.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/types/schema.js":
/*!**************************************************!*\
  !*** ./node_modules/jsforce/lib/types/schema.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdHlwZXMvc2NoZW1hLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdHlwZXMvc2NoZW1hLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/types/schema.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/types/soap.js":
/*!************************************************!*\
  !*** ./node_modules/jsforce/lib/types/soap.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdHlwZXMvc29hcC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL25lem9iZW5hcmRpL0FJX3N0dWZmL09uYm9hcmRpbmdQb3J0YWwvbm9kZV9tb2R1bGVzL2pzZm9yY2UvbGliL3R5cGVzL3NvYXAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/types/soap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/types/standard-schema.js":
/*!***********************************************************!*\
  !*** ./node_modules/jsforce/lib/types/standard-schema.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdHlwZXMvc3RhbmRhcmQtc2NoZW1hLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdHlwZXMvc3RhbmRhcmQtc2NoZW1hLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/types/standard-schema.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/types/util.js":
/*!************************************************!*\
  !*** ./node_modules/jsforce/lib/types/util.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdHlwZXMvdXRpbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL25lem9iZW5hcmRpL0FJX3N0dWZmL09uYm9hcmRpbmdQb3J0YWwvbm9kZV9tb2R1bGVzL2pzZm9yY2UvbGliL3R5cGVzL3V0aWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/types/util.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/util/formatter.js":
/*!****************************************************!*\
  !*** ./node_modules/jsforce/lib/util/formatter.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.formatDate = exports.zeroPad = void 0;\n/**\n *\n */\nfunction zeroPad(num, digits = 2) {\n    let nstr = '';\n    for (let d = digits - 1; d > 0; d--) {\n        if (num >= 10 ** d) {\n            break;\n        }\n        nstr += '0';\n    }\n    return nstr + String(num);\n}\nexports.zeroPad = zeroPad;\n/**\n *\n */\nfunction formatDate(date) {\n    return `${date.getUTCFullYear()}-${zeroPad(date.getUTCMonth() + 1)}-${zeroPad(date.getUTCDate())}T${zeroPad(date.getUTCHours())}:${zeroPad(date.getUTCMinutes())}:${zeroPad(date.getUTCSeconds())}+00:00`;\n}\nexports.formatDate = formatDate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdXRpbC9mb3JtYXR0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCLEdBQUcsZUFBZTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLE9BQU87QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHNCQUFzQixHQUFHLGdDQUFnQyxHQUFHLDJCQUEyQixHQUFHLDRCQUE0QixHQUFHLDhCQUE4QixHQUFHLDhCQUE4QjtBQUN0TTtBQUNBLGtCQUFrQiIsInNvdXJjZXMiOlsiL1VzZXJzL25lem9iZW5hcmRpL0FJX3N0dWZmL09uYm9hcmRpbmdQb3J0YWwvbm9kZV9tb2R1bGVzL2pzZm9yY2UvbGliL3V0aWwvZm9ybWF0dGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mb3JtYXREYXRlID0gZXhwb3J0cy56ZXJvUGFkID0gdm9pZCAwO1xuLyoqXG4gKlxuICovXG5mdW5jdGlvbiB6ZXJvUGFkKG51bSwgZGlnaXRzID0gMikge1xuICAgIGxldCBuc3RyID0gJyc7XG4gICAgZm9yIChsZXQgZCA9IGRpZ2l0cyAtIDE7IGQgPiAwOyBkLS0pIHtcbiAgICAgICAgaWYgKG51bSA+PSAxMCAqKiBkKSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBuc3RyICs9ICcwJztcbiAgICB9XG4gICAgcmV0dXJuIG5zdHIgKyBTdHJpbmcobnVtKTtcbn1cbmV4cG9ydHMuemVyb1BhZCA9IHplcm9QYWQ7XG4vKipcbiAqXG4gKi9cbmZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZSkge1xuICAgIHJldHVybiBgJHtkYXRlLmdldFVUQ0Z1bGxZZWFyKCl9LSR7emVyb1BhZChkYXRlLmdldFVUQ01vbnRoKCkgKyAxKX0tJHt6ZXJvUGFkKGRhdGUuZ2V0VVRDRGF0ZSgpKX1UJHt6ZXJvUGFkKGRhdGUuZ2V0VVRDSG91cnMoKSl9OiR7emVyb1BhZChkYXRlLmdldFVUQ01pbnV0ZXMoKSl9OiR7emVyb1BhZChkYXRlLmdldFVUQ1NlY29uZHMoKSl9KzAwOjAwYDtcbn1cbmV4cG9ydHMuZm9ybWF0RGF0ZSA9IGZvcm1hdERhdGU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/util/formatter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/util/function.js":
/*!***************************************************!*\
  !*** ./node_modules/jsforce/lib/util/function.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.emptyFunc = exports.identityFunc = exports.isPromiseLike = exports.isNumber = exports.isFunction = exports.isMapObject = exports.isObject = void 0;\n/**\n *\n */\nfunction isObject(v) {\n    const t = typeof v;\n    return v != null && (t == 'object' || t == 'function');\n}\nexports.isObject = isObject;\n/**\n *\n */\nfunction isMapObject(v) {\n    const t = typeof v;\n    return v != null && t == 'object';\n}\nexports.isMapObject = isMapObject;\n/**\n *\n */\nfunction isFunction(v) {\n    return typeof v == 'function';\n}\nexports.isFunction = isFunction;\n/**\n *\n */\nfunction isNumber(v) {\n    return typeof v == 'number';\n}\nexports.isNumber = isNumber;\n/**\n * Detect whether the value has CommonJS Promise/A+ interface or not\n */\nfunction isPromiseLike(v) {\n    return isObject(v) && isFunction(v.then);\n}\nexports.isPromiseLike = isPromiseLike;\n/**\n *\n */\nfunction identityFunc(a) {\n    return a;\n}\nexports.identityFunc = identityFunc;\n/**\n *\n */\nfunction emptyFunc() { }\nexports.emptyFunc = emptyFunc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdXRpbC9mdW5jdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxvQkFBb0IsR0FBRyxxQkFBcUIsR0FBRyxnQkFBZ0IsR0FBRyxrQkFBa0IsR0FBRyxtQkFBbUIsR0FBRyxnQkFBZ0I7QUFDako7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdXRpbC9mdW5jdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZW1wdHlGdW5jID0gZXhwb3J0cy5pZGVudGl0eUZ1bmMgPSBleHBvcnRzLmlzUHJvbWlzZUxpa2UgPSBleHBvcnRzLmlzTnVtYmVyID0gZXhwb3J0cy5pc0Z1bmN0aW9uID0gZXhwb3J0cy5pc01hcE9iamVjdCA9IGV4cG9ydHMuaXNPYmplY3QgPSB2b2lkIDA7XG4vKipcbiAqXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KHYpIHtcbiAgICBjb25zdCB0ID0gdHlwZW9mIHY7XG4gICAgcmV0dXJuIHYgIT0gbnVsbCAmJiAodCA9PSAnb2JqZWN0JyB8fCB0ID09ICdmdW5jdGlvbicpO1xufVxuZXhwb3J0cy5pc09iamVjdCA9IGlzT2JqZWN0O1xuLyoqXG4gKlxuICovXG5mdW5jdGlvbiBpc01hcE9iamVjdCh2KSB7XG4gICAgY29uc3QgdCA9IHR5cGVvZiB2O1xuICAgIHJldHVybiB2ICE9IG51bGwgJiYgdCA9PSAnb2JqZWN0Jztcbn1cbmV4cG9ydHMuaXNNYXBPYmplY3QgPSBpc01hcE9iamVjdDtcbi8qKlxuICpcbiAqL1xuZnVuY3Rpb24gaXNGdW5jdGlvbih2KSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2ID09ICdmdW5jdGlvbic7XG59XG5leHBvcnRzLmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xuLyoqXG4gKlxuICovXG5mdW5jdGlvbiBpc051bWJlcih2KSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2ID09ICdudW1iZXInO1xufVxuZXhwb3J0cy5pc051bWJlciA9IGlzTnVtYmVyO1xuLyoqXG4gKiBEZXRlY3Qgd2hldGhlciB0aGUgdmFsdWUgaGFzIENvbW1vbkpTIFByb21pc2UvQSsgaW50ZXJmYWNlIG9yIG5vdFxuICovXG5mdW5jdGlvbiBpc1Byb21pc2VMaWtlKHYpIHtcbiAgICByZXR1cm4gaXNPYmplY3QodikgJiYgaXNGdW5jdGlvbih2LnRoZW4pO1xufVxuZXhwb3J0cy5pc1Byb21pc2VMaWtlID0gaXNQcm9taXNlTGlrZTtcbi8qKlxuICpcbiAqL1xuZnVuY3Rpb24gaWRlbnRpdHlGdW5jKGEpIHtcbiAgICByZXR1cm4gYTtcbn1cbmV4cG9ydHMuaWRlbnRpdHlGdW5jID0gaWRlbnRpdHlGdW5jO1xuLyoqXG4gKlxuICovXG5mdW5jdGlvbiBlbXB0eUZ1bmMoKSB7IH1cbmV4cG9ydHMuZW1wdHlGdW5jID0gZW1wdHlGdW5jO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/util/function.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/util/get-body-size.js":
/*!********************************************************!*\
  !*** ./node_modules/jsforce/lib/util/get-body-size.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getBodySize = void 0;\nconst is_1 = __importDefault(__webpack_require__(/*! @sindresorhus/is */ \"(rsc)/./node_modules/@sindresorhus/is/dist/index.js\"));\nfunction getBodySize(body, headers = {}) {\n    function isFormData(body) {\n        return is_1.default.nodeStream(body) && is_1.default.function_(body.getBoundary);\n    }\n    if (headers && 'content-length' in headers) {\n        return Number(headers['content-length']);\n    }\n    if (!body) {\n        return 0;\n    }\n    if (is_1.default.string(body)) {\n        return Buffer.byteLength(body);\n    }\n    if (is_1.default.urlSearchParams(body)) {\n        return Buffer.byteLength(body.toString());\n    }\n    if (is_1.default.buffer(body)) {\n        return body.length;\n    }\n    try {\n        // `getLengthSync` will throw if body has a stream:\n        // https://github.com/form-data/form-data#integer-getlengthsync\n        if (isFormData(body)) {\n            return body.getLengthSync();\n        }\n    }\n    catch {\n        return undefined;\n    }\n    return undefined;\n}\nexports.getBodySize = getBodySize;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdXRpbC9nZXQtYm9keS1zaXplLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLDZCQUE2QixtQkFBTyxDQUFDLDZFQUFrQjtBQUN2RCx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdXRpbC9nZXQtYm9keS1zaXplLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRCb2R5U2l6ZSA9IHZvaWQgMDtcbmNvbnN0IGlzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIkBzaW5kcmVzb3JodXMvaXNcIikpO1xuZnVuY3Rpb24gZ2V0Qm9keVNpemUoYm9keSwgaGVhZGVycyA9IHt9KSB7XG4gICAgZnVuY3Rpb24gaXNGb3JtRGF0YShib2R5KSB7XG4gICAgICAgIHJldHVybiBpc18xLmRlZmF1bHQubm9kZVN0cmVhbShib2R5KSAmJiBpc18xLmRlZmF1bHQuZnVuY3Rpb25fKGJvZHkuZ2V0Qm91bmRhcnkpO1xuICAgIH1cbiAgICBpZiAoaGVhZGVycyAmJiAnY29udGVudC1sZW5ndGgnIGluIGhlYWRlcnMpIHtcbiAgICAgICAgcmV0dXJuIE51bWJlcihoZWFkZXJzWydjb250ZW50LWxlbmd0aCddKTtcbiAgICB9XG4gICAgaWYgKCFib2R5KSB7XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICBpZiAoaXNfMS5kZWZhdWx0LnN0cmluZyhib2R5KSkge1xuICAgICAgICByZXR1cm4gQnVmZmVyLmJ5dGVMZW5ndGgoYm9keSk7XG4gICAgfVxuICAgIGlmIChpc18xLmRlZmF1bHQudXJsU2VhcmNoUGFyYW1zKGJvZHkpKSB7XG4gICAgICAgIHJldHVybiBCdWZmZXIuYnl0ZUxlbmd0aChib2R5LnRvU3RyaW5nKCkpO1xuICAgIH1cbiAgICBpZiAoaXNfMS5kZWZhdWx0LmJ1ZmZlcihib2R5KSkge1xuICAgICAgICByZXR1cm4gYm9keS5sZW5ndGg7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIGBnZXRMZW5ndGhTeW5jYCB3aWxsIHRocm93IGlmIGJvZHkgaGFzIGEgc3RyZWFtOlxuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZm9ybS1kYXRhL2Zvcm0tZGF0YSNpbnRlZ2VyLWdldGxlbmd0aHN5bmNcbiAgICAgICAgaWYgKGlzRm9ybURhdGEoYm9keSkpIHtcbiAgICAgICAgICAgIHJldHVybiBib2R5LmdldExlbmd0aFN5bmMoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59XG5leHBvcnRzLmdldEJvZHlTaXplID0gZ2V0Qm9keVNpemU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/util/get-body-size.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/util/jwt.js":
/*!**********************************************!*\
  !*** ./node_modules/jsforce/lib/util/jwt.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isJWTToken = void 0;\n/**\n * Checks if a given access token is a JWT.\n *\n * @param {string} accessToken - The access token to check\n * @returns {boolean} True if the token is a valid JWT token, false otherwise.\n */\nfunction isJWTToken(accessToken) {\n    const parts = accessToken.split('.');\n    if (parts.length !== 3)\n        return false;\n    const header = parts[0];\n    try {\n        JSON.parse(atob(header));\n        return true;\n    }\n    catch (err) {\n        return false;\n    }\n}\nexports.isJWTToken = isJWTToken;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdXRpbC9qd3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiIsInNvdXJjZXMiOlsiL1VzZXJzL25lem9iZW5hcmRpL0FJX3N0dWZmL09uYm9hcmRpbmdQb3J0YWwvbm9kZV9tb2R1bGVzL2pzZm9yY2UvbGliL3V0aWwvand0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0pXVFRva2VuID0gdm9pZCAwO1xuLyoqXG4gKiBDaGVja3MgaWYgYSBnaXZlbiBhY2Nlc3MgdG9rZW4gaXMgYSBKV1QuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGFjY2Vzc1Rva2VuIC0gVGhlIGFjY2VzcyB0b2tlbiB0byBjaGVja1xuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHRva2VuIGlzIGEgdmFsaWQgSldUIHRva2VuLCBmYWxzZSBvdGhlcndpc2UuXG4gKi9cbmZ1bmN0aW9uIGlzSldUVG9rZW4oYWNjZXNzVG9rZW4pIHtcbiAgICBjb25zdCBwYXJ0cyA9IGFjY2Vzc1Rva2VuLnNwbGl0KCcuJyk7XG4gICAgaWYgKHBhcnRzLmxlbmd0aCAhPT0gMylcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGNvbnN0IGhlYWRlciA9IHBhcnRzWzBdO1xuICAgIHRyeSB7XG4gICAgICAgIEpTT04ucGFyc2UoYXRvYihoZWFkZXIpKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbmV4cG9ydHMuaXNKV1RUb2tlbiA9IGlzSldUVG9rZW47XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/util/jwt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/util/logger.js":
/*!*************************************************!*\
  !*** ./node_modules/jsforce/lib/util/logger.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getLogger = exports.Logger = exports.LogLevels = void 0;\n/**\n *\n */\nexports.LogLevels = {\n    DEBUG: 1,\n    INFO: 2,\n    WARN: 3,\n    ERROR: 4,\n    FATAL: 5,\n    NONE: 6,\n};\nconst LogLevelLabels = ['', 'DEBUG', 'INFO', 'WARN', 'ERROR', 'FATAL', 'NONE'];\nconst globalLogLevelConfig = (() => {\n    const globalLogLevelStr = process.env.JSFORCE_LOG_LEVEL ||\n        global.__JSFORCE_LOG_LEVEL__ ||\n        'NONE';\n    if (/^(DEBUG|INFO|WARN|ERROR|FATAL|NONE)$/i.test(globalLogLevelStr)) {\n        return { '*': globalLogLevelStr };\n    }\n    try {\n        return JSON.parse(globalLogLevelStr);\n    }\n    catch (e) {\n        return { '*': 'NONE' };\n    }\n})();\nfunction getModuleLogLevel(logLevelConfig, moduleName) {\n    const logLevel = logLevelConfig[moduleName] || logLevelConfig['*'];\n    return typeof logLevel === 'number'\n        ? logLevel\n        : exports.LogLevels[logLevel] || exports.LogLevels.NONE;\n}\n/**\n *\n */\nclass Logger {\n    _moduleName;\n    _logLevel;\n    constructor(moduleName, logLevelConfig = globalLogLevelConfig) {\n        this._moduleName = moduleName;\n        this._logLevel =\n            typeof logLevelConfig === 'number'\n                ? logLevelConfig\n                : typeof logLevelConfig === 'string'\n                    ? exports.LogLevels[logLevelConfig] || exports.LogLevels.NONE\n                    : getModuleLogLevel(logLevelConfig, moduleName);\n    }\n    createInstance(logLevelConfig = this._logLevel) {\n        return new Logger(this._moduleName, logLevelConfig);\n    }\n    setLogLevel(logLevel) {\n        if (typeof logLevel === 'string') {\n            this._logLevel = exports.LogLevels[logLevel] || exports.LogLevels.NONE;\n        }\n        else {\n            this._logLevel = logLevel;\n        }\n    }\n    log(logLevel, ...messages) {\n        if (this._logLevel <= logLevel) {\n            const msgs = [\n                `${LogLevelLabels[logLevel]}\\t[${this._moduleName}] `,\n                ...messages,\n            ];\n            if (logLevel < exports.LogLevels.ERROR) {\n                console.log(...msgs); // eslint-disable-line no-console\n            }\n            else {\n                console.error(...msgs); // eslint-disable-line no-console\n            }\n        }\n    }\n    debug(...messages) {\n        this.log(exports.LogLevels.DEBUG, ...messages);\n    }\n    info(...messages) {\n        this.log(exports.LogLevels.INFO, ...messages);\n    }\n    warn(...messages) {\n        this.log(exports.LogLevels.WARN, ...messages);\n    }\n    error(...messages) {\n        this.log(exports.LogLevels.ERROR, ...messages);\n    }\n    fatal(...messages) {\n        this.log(exports.LogLevels.FATAL, ...messages);\n    }\n}\nexports.Logger = Logger;\nconst loggers = {};\n/**\n *\n */\nfunction getLogger(moduleName) {\n    const logger = loggers[moduleName] || new Logger(moduleName);\n    loggers[moduleName] = logger;\n    return logger;\n}\nexports.getLogger = getLogger;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdXRpbC9sb2dnZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsY0FBYyxHQUFHLGlCQUFpQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHlCQUF5QixLQUFLLGlCQUFpQjtBQUNsRTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uZXpvYmVuYXJkaS9BSV9zdHVmZi9PbmJvYXJkaW5nUG9ydGFsL25vZGVfbW9kdWxlcy9qc2ZvcmNlL2xpYi91dGlsL2xvZ2dlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0TG9nZ2VyID0gZXhwb3J0cy5Mb2dnZXIgPSBleHBvcnRzLkxvZ0xldmVscyA9IHZvaWQgMDtcbi8qKlxuICpcbiAqL1xuZXhwb3J0cy5Mb2dMZXZlbHMgPSB7XG4gICAgREVCVUc6IDEsXG4gICAgSU5GTzogMixcbiAgICBXQVJOOiAzLFxuICAgIEVSUk9SOiA0LFxuICAgIEZBVEFMOiA1LFxuICAgIE5PTkU6IDYsXG59O1xuY29uc3QgTG9nTGV2ZWxMYWJlbHMgPSBbJycsICdERUJVRycsICdJTkZPJywgJ1dBUk4nLCAnRVJST1InLCAnRkFUQUwnLCAnTk9ORSddO1xuY29uc3QgZ2xvYmFsTG9nTGV2ZWxDb25maWcgPSAoKCkgPT4ge1xuICAgIGNvbnN0IGdsb2JhbExvZ0xldmVsU3RyID0gcHJvY2Vzcy5lbnYuSlNGT1JDRV9MT0dfTEVWRUwgfHxcbiAgICAgICAgZ2xvYmFsLl9fSlNGT1JDRV9MT0dfTEVWRUxfXyB8fFxuICAgICAgICAnTk9ORSc7XG4gICAgaWYgKC9eKERFQlVHfElORk98V0FSTnxFUlJPUnxGQVRBTHxOT05FKSQvaS50ZXN0KGdsb2JhbExvZ0xldmVsU3RyKSkge1xuICAgICAgICByZXR1cm4geyAnKic6IGdsb2JhbExvZ0xldmVsU3RyIH07XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGdsb2JhbExvZ0xldmVsU3RyKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIHsgJyonOiAnTk9ORScgfTtcbiAgICB9XG59KSgpO1xuZnVuY3Rpb24gZ2V0TW9kdWxlTG9nTGV2ZWwobG9nTGV2ZWxDb25maWcsIG1vZHVsZU5hbWUpIHtcbiAgICBjb25zdCBsb2dMZXZlbCA9IGxvZ0xldmVsQ29uZmlnW21vZHVsZU5hbWVdIHx8IGxvZ0xldmVsQ29uZmlnWycqJ107XG4gICAgcmV0dXJuIHR5cGVvZiBsb2dMZXZlbCA9PT0gJ251bWJlcidcbiAgICAgICAgPyBsb2dMZXZlbFxuICAgICAgICA6IGV4cG9ydHMuTG9nTGV2ZWxzW2xvZ0xldmVsXSB8fCBleHBvcnRzLkxvZ0xldmVscy5OT05FO1xufVxuLyoqXG4gKlxuICovXG5jbGFzcyBMb2dnZXIge1xuICAgIF9tb2R1bGVOYW1lO1xuICAgIF9sb2dMZXZlbDtcbiAgICBjb25zdHJ1Y3Rvcihtb2R1bGVOYW1lLCBsb2dMZXZlbENvbmZpZyA9IGdsb2JhbExvZ0xldmVsQ29uZmlnKSB7XG4gICAgICAgIHRoaXMuX21vZHVsZU5hbWUgPSBtb2R1bGVOYW1lO1xuICAgICAgICB0aGlzLl9sb2dMZXZlbCA9XG4gICAgICAgICAgICB0eXBlb2YgbG9nTGV2ZWxDb25maWcgPT09ICdudW1iZXInXG4gICAgICAgICAgICAgICAgPyBsb2dMZXZlbENvbmZpZ1xuICAgICAgICAgICAgICAgIDogdHlwZW9mIGxvZ0xldmVsQ29uZmlnID09PSAnc3RyaW5nJ1xuICAgICAgICAgICAgICAgICAgICA/IGV4cG9ydHMuTG9nTGV2ZWxzW2xvZ0xldmVsQ29uZmlnXSB8fCBleHBvcnRzLkxvZ0xldmVscy5OT05FXG4gICAgICAgICAgICAgICAgICAgIDogZ2V0TW9kdWxlTG9nTGV2ZWwobG9nTGV2ZWxDb25maWcsIG1vZHVsZU5hbWUpO1xuICAgIH1cbiAgICBjcmVhdGVJbnN0YW5jZShsb2dMZXZlbENvbmZpZyA9IHRoaXMuX2xvZ0xldmVsKSB7XG4gICAgICAgIHJldHVybiBuZXcgTG9nZ2VyKHRoaXMuX21vZHVsZU5hbWUsIGxvZ0xldmVsQ29uZmlnKTtcbiAgICB9XG4gICAgc2V0TG9nTGV2ZWwobG9nTGV2ZWwpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBsb2dMZXZlbCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHRoaXMuX2xvZ0xldmVsID0gZXhwb3J0cy5Mb2dMZXZlbHNbbG9nTGV2ZWxdIHx8IGV4cG9ydHMuTG9nTGV2ZWxzLk5PTkU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9sb2dMZXZlbCA9IGxvZ0xldmVsO1xuICAgICAgICB9XG4gICAgfVxuICAgIGxvZyhsb2dMZXZlbCwgLi4ubWVzc2FnZXMpIHtcbiAgICAgICAgaWYgKHRoaXMuX2xvZ0xldmVsIDw9IGxvZ0xldmVsKSB7XG4gICAgICAgICAgICBjb25zdCBtc2dzID0gW1xuICAgICAgICAgICAgICAgIGAke0xvZ0xldmVsTGFiZWxzW2xvZ0xldmVsXX1cXHRbJHt0aGlzLl9tb2R1bGVOYW1lfV0gYCxcbiAgICAgICAgICAgICAgICAuLi5tZXNzYWdlcyxcbiAgICAgICAgICAgIF07XG4gICAgICAgICAgICBpZiAobG9nTGV2ZWwgPCBleHBvcnRzLkxvZ0xldmVscy5FUlJPUikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKC4uLm1zZ3MpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoLi4ubXNncyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGRlYnVnKC4uLm1lc3NhZ2VzKSB7XG4gICAgICAgIHRoaXMubG9nKGV4cG9ydHMuTG9nTGV2ZWxzLkRFQlVHLCAuLi5tZXNzYWdlcyk7XG4gICAgfVxuICAgIGluZm8oLi4ubWVzc2FnZXMpIHtcbiAgICAgICAgdGhpcy5sb2coZXhwb3J0cy5Mb2dMZXZlbHMuSU5GTywgLi4ubWVzc2FnZXMpO1xuICAgIH1cbiAgICB3YXJuKC4uLm1lc3NhZ2VzKSB7XG4gICAgICAgIHRoaXMubG9nKGV4cG9ydHMuTG9nTGV2ZWxzLldBUk4sIC4uLm1lc3NhZ2VzKTtcbiAgICB9XG4gICAgZXJyb3IoLi4ubWVzc2FnZXMpIHtcbiAgICAgICAgdGhpcy5sb2coZXhwb3J0cy5Mb2dMZXZlbHMuRVJST1IsIC4uLm1lc3NhZ2VzKTtcbiAgICB9XG4gICAgZmF0YWwoLi4ubWVzc2FnZXMpIHtcbiAgICAgICAgdGhpcy5sb2coZXhwb3J0cy5Mb2dMZXZlbHMuRkFUQUwsIC4uLm1lc3NhZ2VzKTtcbiAgICB9XG59XG5leHBvcnRzLkxvZ2dlciA9IExvZ2dlcjtcbmNvbnN0IGxvZ2dlcnMgPSB7fTtcbi8qKlxuICpcbiAqL1xuZnVuY3Rpb24gZ2V0TG9nZ2VyKG1vZHVsZU5hbWUpIHtcbiAgICBjb25zdCBsb2dnZXIgPSBsb2dnZXJzW21vZHVsZU5hbWVdIHx8IG5ldyBMb2dnZXIobW9kdWxlTmFtZSk7XG4gICAgbG9nZ2Vyc1ttb2R1bGVOYW1lXSA9IGxvZ2dlcjtcbiAgICByZXR1cm4gbG9nZ2VyO1xufVxuZXhwb3J0cy5nZXRMb2dnZXIgPSBnZXRMb2dnZXI7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/util/logger.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/util/promise.js":
/*!**************************************************!*\
  !*** ./node_modules/jsforce/lib/util/promise.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StreamPromise = void 0;\n/**\n *\n */\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\n/**\n *\n */\nclass StreamPromise extends Promise {\n    stream() {\n        // dummy\n        return new stream_1.Duplex();\n    }\n    static create(builder) {\n        const { stream, promise } = builder();\n        const streamPromise = new StreamPromise((resolve, reject) => {\n            promise.then(resolve, reject);\n        });\n        streamPromise.stream = () => stream;\n        return streamPromise;\n    }\n}\nexports.StreamPromise = StreamPromise;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdXRpbC9wcm9taXNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isa0JBQWtCO0FBQ2xDO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uZXpvYmVuYXJkaS9BSV9zdHVmZi9PbmJvYXJkaW5nUG9ydGFsL25vZGVfbW9kdWxlcy9qc2ZvcmNlL2xpYi91dGlsL3Byb21pc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN0cmVhbVByb21pc2UgPSB2b2lkIDA7XG4vKipcbiAqXG4gKi9cbmNvbnN0IHN0cmVhbV8xID0gcmVxdWlyZShcInN0cmVhbVwiKTtcbi8qKlxuICpcbiAqL1xuY2xhc3MgU3RyZWFtUHJvbWlzZSBleHRlbmRzIFByb21pc2Uge1xuICAgIHN0cmVhbSgpIHtcbiAgICAgICAgLy8gZHVtbXlcbiAgICAgICAgcmV0dXJuIG5ldyBzdHJlYW1fMS5EdXBsZXgoKTtcbiAgICB9XG4gICAgc3RhdGljIGNyZWF0ZShidWlsZGVyKSB7XG4gICAgICAgIGNvbnN0IHsgc3RyZWFtLCBwcm9taXNlIH0gPSBidWlsZGVyKCk7XG4gICAgICAgIGNvbnN0IHN0cmVhbVByb21pc2UgPSBuZXcgU3RyZWFtUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBwcm9taXNlLnRoZW4ocmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHN0cmVhbVByb21pc2Uuc3RyZWFtID0gKCkgPT4gc3RyZWFtO1xuICAgICAgICByZXR1cm4gc3RyZWFtUHJvbWlzZTtcbiAgICB9XG59XG5leHBvcnRzLlN0cmVhbVByb21pc2UgPSBTdHJlYW1Qcm9taXNlO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/util/promise.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsforce/lib/util/stream.js":
/*!*************************************************!*\
  !*** ./node_modules/jsforce/lib/util/stream.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.concatStreamsAsDuplex = exports.readAll = exports.createLazyStream = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nfunction createLazyStream() {\n    const ins = new stream_1.PassThrough();\n    const outs = new stream_1.PassThrough();\n    const stream = concatStreamsAsDuplex(ins, outs);\n    let piped = false;\n    const setStream = (str) => {\n        if (piped) {\n            throw new Error('stream is already piped to actual stream');\n        }\n        piped = true;\n        ins.pipe(str).pipe(outs);\n    };\n    return { stream, setStream };\n}\nexports.createLazyStream = createLazyStream;\nclass MemoryWriteStream extends stream_1.Writable {\n    _buf;\n    constructor() {\n        super();\n        this._buf = Buffer.alloc(0);\n    }\n    _write(chunk, encoding, callback) {\n        this._buf = Buffer.concat([this._buf, chunk]);\n        callback();\n    }\n    _writev(data, callback) {\n        this._buf = Buffer.concat([this._buf, ...data.map(({ chunk }) => chunk)]);\n        callback();\n    }\n    toString(encoding = 'utf-8') {\n        return this._buf.toString(encoding);\n    }\n}\nasync function readAll(rs, encoding = 'utf-8') {\n    return new Promise((resolve, reject) => {\n        const ws = new MemoryWriteStream();\n        rs.on('error', reject)\n            .pipe(ws)\n            .on('finish', () => resolve(ws.toString(encoding)));\n    });\n}\nexports.readAll = readAll;\nclass DuplexifiedStream extends stream_1.Duplex {\n    _writable;\n    _readable;\n    constructor(ws, rs, opts = {}) {\n        super({\n            writableObjectMode: opts.writableObjectMode ?? ws.writableObjectMode,\n            readableObjectMode: opts.readableObjectMode ?? rs.readableObjectMode,\n        });\n        this._writable = ws;\n        this._readable = rs;\n        ws.once('finish', () => {\n            this.end();\n        });\n        this.once('finish', () => {\n            ws.end();\n        });\n        rs.on('readable', () => {\n            this._readStream();\n        });\n        rs.once('end', () => {\n            this.push(null);\n        });\n        ws.on('error', (err) => this.emit('error', err));\n        rs.on('error', (err) => this.emit('error', err));\n    }\n    _write(chunk, encoding, callback) {\n        this._writable.write(chunk, encoding, callback);\n    }\n    _read(n) {\n        this._readStream(n);\n    }\n    _readStream(n) {\n        let data;\n        while ((data = this._readable.read(n)) !== null) {\n            this.push(data);\n        }\n    }\n}\nfunction concatStreamsAsDuplex(ws, rs, opts) {\n    return new DuplexifiedStream(ws, rs, opts);\n}\nexports.concatStreamsAsDuplex = concatStreamsAsDuplex;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdXRpbC9zdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCLEdBQUcsZUFBZSxHQUFHLHdCQUF3QjtBQUMxRSxpQkFBaUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxPQUFPO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvanNmb3JjZS9saWIvdXRpbC9zdHJlYW0uanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNvbmNhdFN0cmVhbXNBc0R1cGxleCA9IGV4cG9ydHMucmVhZEFsbCA9IGV4cG9ydHMuY3JlYXRlTGF6eVN0cmVhbSA9IHZvaWQgMDtcbmNvbnN0IHN0cmVhbV8xID0gcmVxdWlyZShcInN0cmVhbVwiKTtcbmZ1bmN0aW9uIGNyZWF0ZUxhenlTdHJlYW0oKSB7XG4gICAgY29uc3QgaW5zID0gbmV3IHN0cmVhbV8xLlBhc3NUaHJvdWdoKCk7XG4gICAgY29uc3Qgb3V0cyA9IG5ldyBzdHJlYW1fMS5QYXNzVGhyb3VnaCgpO1xuICAgIGNvbnN0IHN0cmVhbSA9IGNvbmNhdFN0cmVhbXNBc0R1cGxleChpbnMsIG91dHMpO1xuICAgIGxldCBwaXBlZCA9IGZhbHNlO1xuICAgIGNvbnN0IHNldFN0cmVhbSA9IChzdHIpID0+IHtcbiAgICAgICAgaWYgKHBpcGVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3N0cmVhbSBpcyBhbHJlYWR5IHBpcGVkIHRvIGFjdHVhbCBzdHJlYW0nKTtcbiAgICAgICAgfVxuICAgICAgICBwaXBlZCA9IHRydWU7XG4gICAgICAgIGlucy5waXBlKHN0cikucGlwZShvdXRzKTtcbiAgICB9O1xuICAgIHJldHVybiB7IHN0cmVhbSwgc2V0U3RyZWFtIH07XG59XG5leHBvcnRzLmNyZWF0ZUxhenlTdHJlYW0gPSBjcmVhdGVMYXp5U3RyZWFtO1xuY2xhc3MgTWVtb3J5V3JpdGVTdHJlYW0gZXh0ZW5kcyBzdHJlYW1fMS5Xcml0YWJsZSB7XG4gICAgX2J1ZjtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5fYnVmID0gQnVmZmVyLmFsbG9jKDApO1xuICAgIH1cbiAgICBfd3JpdGUoY2h1bmssIGVuY29kaW5nLCBjYWxsYmFjaykge1xuICAgICAgICB0aGlzLl9idWYgPSBCdWZmZXIuY29uY2F0KFt0aGlzLl9idWYsIGNodW5rXSk7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgfVxuICAgIF93cml0ZXYoZGF0YSwgY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fYnVmID0gQnVmZmVyLmNvbmNhdChbdGhpcy5fYnVmLCAuLi5kYXRhLm1hcCgoeyBjaHVuayB9KSA9PiBjaHVuayldKTtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICB9XG4gICAgdG9TdHJpbmcoZW5jb2RpbmcgPSAndXRmLTgnKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9idWYudG9TdHJpbmcoZW5jb2RpbmcpO1xuICAgIH1cbn1cbmFzeW5jIGZ1bmN0aW9uIHJlYWRBbGwocnMsIGVuY29kaW5nID0gJ3V0Zi04Jykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGNvbnN0IHdzID0gbmV3IE1lbW9yeVdyaXRlU3RyZWFtKCk7XG4gICAgICAgIHJzLm9uKCdlcnJvcicsIHJlamVjdClcbiAgICAgICAgICAgIC5waXBlKHdzKVxuICAgICAgICAgICAgLm9uKCdmaW5pc2gnLCAoKSA9PiByZXNvbHZlKHdzLnRvU3RyaW5nKGVuY29kaW5nKSkpO1xuICAgIH0pO1xufVxuZXhwb3J0cy5yZWFkQWxsID0gcmVhZEFsbDtcbmNsYXNzIER1cGxleGlmaWVkU3RyZWFtIGV4dGVuZHMgc3RyZWFtXzEuRHVwbGV4IHtcbiAgICBfd3JpdGFibGU7XG4gICAgX3JlYWRhYmxlO1xuICAgIGNvbnN0cnVjdG9yKHdzLCBycywgb3B0cyA9IHt9KSB7XG4gICAgICAgIHN1cGVyKHtcbiAgICAgICAgICAgIHdyaXRhYmxlT2JqZWN0TW9kZTogb3B0cy53cml0YWJsZU9iamVjdE1vZGUgPz8gd3Mud3JpdGFibGVPYmplY3RNb2RlLFxuICAgICAgICAgICAgcmVhZGFibGVPYmplY3RNb2RlOiBvcHRzLnJlYWRhYmxlT2JqZWN0TW9kZSA/PyBycy5yZWFkYWJsZU9iamVjdE1vZGUsXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLl93cml0YWJsZSA9IHdzO1xuICAgICAgICB0aGlzLl9yZWFkYWJsZSA9IHJzO1xuICAgICAgICB3cy5vbmNlKCdmaW5pc2gnLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmVuZCgpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5vbmNlKCdmaW5pc2gnLCAoKSA9PiB7XG4gICAgICAgICAgICB3cy5lbmQoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJzLm9uKCdyZWFkYWJsZScsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3JlYWRTdHJlYW0oKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJzLm9uY2UoJ2VuZCcsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMucHVzaChudWxsKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHdzLm9uKCdlcnJvcicsIChlcnIpID0+IHRoaXMuZW1pdCgnZXJyb3InLCBlcnIpKTtcbiAgICAgICAgcnMub24oJ2Vycm9yJywgKGVycikgPT4gdGhpcy5lbWl0KCdlcnJvcicsIGVycikpO1xuICAgIH1cbiAgICBfd3JpdGUoY2h1bmssIGVuY29kaW5nLCBjYWxsYmFjaykge1xuICAgICAgICB0aGlzLl93cml0YWJsZS53cml0ZShjaHVuaywgZW5jb2RpbmcsIGNhbGxiYWNrKTtcbiAgICB9XG4gICAgX3JlYWQobikge1xuICAgICAgICB0aGlzLl9yZWFkU3RyZWFtKG4pO1xuICAgIH1cbiAgICBfcmVhZFN0cmVhbShuKSB7XG4gICAgICAgIGxldCBkYXRhO1xuICAgICAgICB3aGlsZSAoKGRhdGEgPSB0aGlzLl9yZWFkYWJsZS5yZWFkKG4pKSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5wdXNoKGRhdGEpO1xuICAgICAgICB9XG4gICAgfVxufVxuZnVuY3Rpb24gY29uY2F0U3RyZWFtc0FzRHVwbGV4KHdzLCBycywgb3B0cykge1xuICAgIHJldHVybiBuZXcgRHVwbGV4aWZpZWRTdHJlYW0od3MsIHJzLCBvcHRzKTtcbn1cbmV4cG9ydHMuY29uY2F0U3RyZWFtc0FzRHVwbGV4ID0gY29uY2F0U3RyZWFtc0FzRHVwbGV4O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsforce/lib/util/stream.js\n");

/***/ })

};
;