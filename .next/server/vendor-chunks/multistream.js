/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/multistream";
exports.ids = ["vendor-chunks/multistream"];
exports.modules = {

/***/ "(rsc)/./node_modules/multistream/index.js":
/*!*******************************************!*\
  !*** ./node_modules/multistream/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = MultiStream\n\nvar inherits = __webpack_require__(/*! inherits */ \"(rsc)/./node_modules/inherits/inherits.js\")\nvar stream = __webpack_require__(/*! readable-stream */ \"(rsc)/./node_modules/readable-stream/readable.js\")\n\ninherits(MultiStream, stream.Readable)\n\nfunction MultiStream (streams, opts) {\n  var self = this\n  if (!(self instanceof MultiStream)) return new MultiStream(streams, opts)\n  stream.Readable.call(self, opts)\n\n  self.destroyed = false\n\n  self._drained = false\n  self._forwarding = false\n  self._current = null\n  self._toStreams2 = (opts && opts.objectMode) ? toStreams2Obj : toStreams2Buf\n\n  if (typeof streams === 'function') {\n    self._queue = streams\n  } else {\n    self._queue = streams.map(self._toStreams2)\n    self._queue.forEach(function (stream) {\n      if (typeof stream !== 'function') self._attachErrorListener(stream)\n    })\n  }\n\n  self._next()\n}\n\nMultiStream.obj = function (streams) {\n  return new MultiStream(streams, { objectMode: true, highWaterMark: 16 })\n}\n\nMultiStream.prototype._read = function () {\n  this._drained = true\n  this._forward()\n}\n\nMultiStream.prototype._forward = function () {\n  if (this._forwarding || !this._drained || !this._current) return\n  this._forwarding = true\n\n  var chunk\n  while ((chunk = this._current.read()) !== null && this._drained) {\n    this._drained = this.push(chunk)\n  }\n\n  this._forwarding = false\n}\n\nMultiStream.prototype.destroy = function (err) {\n  if (this.destroyed) return\n  this.destroyed = true\n\n  if (this._current && this._current.destroy) this._current.destroy()\n  if (typeof this._queue !== 'function') {\n    this._queue.forEach(function (stream) {\n      if (stream.destroy) stream.destroy()\n    })\n  }\n\n  if (err) this.emit('error', err)\n  this.emit('close')\n}\n\nMultiStream.prototype._next = function () {\n  var self = this\n  self._current = null\n\n  if (typeof self._queue === 'function') {\n    self._queue(function (err, stream) {\n      if (err) return self.destroy(err)\n      stream = self._toStreams2(stream)\n      self._attachErrorListener(stream)\n      self._gotNextStream(stream)\n    })\n  } else {\n    var stream = self._queue.shift()\n    if (typeof stream === 'function') {\n      stream = self._toStreams2(stream())\n      self._attachErrorListener(stream)\n    }\n    self._gotNextStream(stream)\n  }\n}\n\nMultiStream.prototype._gotNextStream = function (stream) {\n  var self = this\n\n  if (!stream) {\n    self.push(null)\n    self.destroy()\n    return\n  }\n\n  self._current = stream\n  self._forward()\n\n  stream.on('readable', onReadable)\n  stream.once('end', onEnd)\n  stream.once('close', onClose)\n\n  function onReadable () {\n    self._forward()\n  }\n\n  function onClose () {\n    if (!stream._readableState.ended) {\n      self.destroy()\n    }\n  }\n\n  function onEnd () {\n    self._current = null\n    stream.removeListener('readable', onReadable)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('close', onClose)\n    self._next()\n  }\n}\n\nMultiStream.prototype._attachErrorListener = function (stream) {\n  var self = this\n  if (!stream) return\n\n  stream.once('error', onError)\n\n  function onError (err) {\n    stream.removeListener('error', onError)\n    self.destroy(err)\n  }\n}\n\nfunction toStreams2Obj (s) {\n  return toStreams2(s, { objectMode: true, highWaterMark: 16 })\n}\n\nfunction toStreams2Buf (s) {\n  return toStreams2(s)\n}\n\nfunction toStreams2 (s, opts) {\n  if (!s || typeof s === 'function' || s._readableState) return s\n\n  var wrap = new stream.Readable(opts).wrap(s)\n  if (s.destroy) {\n    wrap.destroy = s.destroy.bind(s)\n  }\n  return wrap\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXVsdGlzdHJlYW0vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsZUFBZSxtQkFBTyxDQUFDLDJEQUFVO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyx5RUFBaUI7O0FBRXRDOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxvQ0FBb0MscUNBQXFDO0FBQ3pFOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHlCQUF5QixxQ0FBcUM7QUFDOUQ7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvbmV6b2JlbmFyZGkvQUlfc3R1ZmYvT25ib2FyZGluZ1BvcnRhbC9ub2RlX21vZHVsZXMvbXVsdGlzdHJlYW0vaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBNdWx0aVN0cmVhbVxuXG52YXIgaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpXG52YXIgc3RyZWFtID0gcmVxdWlyZSgncmVhZGFibGUtc3RyZWFtJylcblxuaW5oZXJpdHMoTXVsdGlTdHJlYW0sIHN0cmVhbS5SZWFkYWJsZSlcblxuZnVuY3Rpb24gTXVsdGlTdHJlYW0gKHN0cmVhbXMsIG9wdHMpIHtcbiAgdmFyIHNlbGYgPSB0aGlzXG4gIGlmICghKHNlbGYgaW5zdGFuY2VvZiBNdWx0aVN0cmVhbSkpIHJldHVybiBuZXcgTXVsdGlTdHJlYW0oc3RyZWFtcywgb3B0cylcbiAgc3RyZWFtLlJlYWRhYmxlLmNhbGwoc2VsZiwgb3B0cylcblxuICBzZWxmLmRlc3Ryb3llZCA9IGZhbHNlXG5cbiAgc2VsZi5fZHJhaW5lZCA9IGZhbHNlXG4gIHNlbGYuX2ZvcndhcmRpbmcgPSBmYWxzZVxuICBzZWxmLl9jdXJyZW50ID0gbnVsbFxuICBzZWxmLl90b1N0cmVhbXMyID0gKG9wdHMgJiYgb3B0cy5vYmplY3RNb2RlKSA/IHRvU3RyZWFtczJPYmogOiB0b1N0cmVhbXMyQnVmXG5cbiAgaWYgKHR5cGVvZiBzdHJlYW1zID09PSAnZnVuY3Rpb24nKSB7XG4gICAgc2VsZi5fcXVldWUgPSBzdHJlYW1zXG4gIH0gZWxzZSB7XG4gICAgc2VsZi5fcXVldWUgPSBzdHJlYW1zLm1hcChzZWxmLl90b1N0cmVhbXMyKVxuICAgIHNlbGYuX3F1ZXVlLmZvckVhY2goZnVuY3Rpb24gKHN0cmVhbSkge1xuICAgICAgaWYgKHR5cGVvZiBzdHJlYW0gIT09ICdmdW5jdGlvbicpIHNlbGYuX2F0dGFjaEVycm9yTGlzdGVuZXIoc3RyZWFtKVxuICAgIH0pXG4gIH1cblxuICBzZWxmLl9uZXh0KClcbn1cblxuTXVsdGlTdHJlYW0ub2JqID0gZnVuY3Rpb24gKHN0cmVhbXMpIHtcbiAgcmV0dXJuIG5ldyBNdWx0aVN0cmVhbShzdHJlYW1zLCB7IG9iamVjdE1vZGU6IHRydWUsIGhpZ2hXYXRlck1hcms6IDE2IH0pXG59XG5cbk11bHRpU3RyZWFtLnByb3RvdHlwZS5fcmVhZCA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5fZHJhaW5lZCA9IHRydWVcbiAgdGhpcy5fZm9yd2FyZCgpXG59XG5cbk11bHRpU3RyZWFtLnByb3RvdHlwZS5fZm9yd2FyZCA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKHRoaXMuX2ZvcndhcmRpbmcgfHwgIXRoaXMuX2RyYWluZWQgfHwgIXRoaXMuX2N1cnJlbnQpIHJldHVyblxuICB0aGlzLl9mb3J3YXJkaW5nID0gdHJ1ZVxuXG4gIHZhciBjaHVua1xuICB3aGlsZSAoKGNodW5rID0gdGhpcy5fY3VycmVudC5yZWFkKCkpICE9PSBudWxsICYmIHRoaXMuX2RyYWluZWQpIHtcbiAgICB0aGlzLl9kcmFpbmVkID0gdGhpcy5wdXNoKGNodW5rKVxuICB9XG5cbiAgdGhpcy5fZm9yd2FyZGluZyA9IGZhbHNlXG59XG5cbk11bHRpU3RyZWFtLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gKGVycikge1xuICBpZiAodGhpcy5kZXN0cm95ZWQpIHJldHVyblxuICB0aGlzLmRlc3Ryb3llZCA9IHRydWVcblxuICBpZiAodGhpcy5fY3VycmVudCAmJiB0aGlzLl9jdXJyZW50LmRlc3Ryb3kpIHRoaXMuX2N1cnJlbnQuZGVzdHJveSgpXG4gIGlmICh0eXBlb2YgdGhpcy5fcXVldWUgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aGlzLl9xdWV1ZS5mb3JFYWNoKGZ1bmN0aW9uIChzdHJlYW0pIHtcbiAgICAgIGlmIChzdHJlYW0uZGVzdHJveSkgc3RyZWFtLmRlc3Ryb3koKVxuICAgIH0pXG4gIH1cblxuICBpZiAoZXJyKSB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyKVxuICB0aGlzLmVtaXQoJ2Nsb3NlJylcbn1cblxuTXVsdGlTdHJlYW0ucHJvdG90eXBlLl9uZXh0ID0gZnVuY3Rpb24gKCkge1xuICB2YXIgc2VsZiA9IHRoaXNcbiAgc2VsZi5fY3VycmVudCA9IG51bGxcblxuICBpZiAodHlwZW9mIHNlbGYuX3F1ZXVlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgc2VsZi5fcXVldWUoZnVuY3Rpb24gKGVyciwgc3RyZWFtKSB7XG4gICAgICBpZiAoZXJyKSByZXR1cm4gc2VsZi5kZXN0cm95KGVycilcbiAgICAgIHN0cmVhbSA9IHNlbGYuX3RvU3RyZWFtczIoc3RyZWFtKVxuICAgICAgc2VsZi5fYXR0YWNoRXJyb3JMaXN0ZW5lcihzdHJlYW0pXG4gICAgICBzZWxmLl9nb3ROZXh0U3RyZWFtKHN0cmVhbSlcbiAgICB9KVxuICB9IGVsc2Uge1xuICAgIHZhciBzdHJlYW0gPSBzZWxmLl9xdWV1ZS5zaGlmdCgpXG4gICAgaWYgKHR5cGVvZiBzdHJlYW0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHN0cmVhbSA9IHNlbGYuX3RvU3RyZWFtczIoc3RyZWFtKCkpXG4gICAgICBzZWxmLl9hdHRhY2hFcnJvckxpc3RlbmVyKHN0cmVhbSlcbiAgICB9XG4gICAgc2VsZi5fZ290TmV4dFN0cmVhbShzdHJlYW0pXG4gIH1cbn1cblxuTXVsdGlTdHJlYW0ucHJvdG90eXBlLl9nb3ROZXh0U3RyZWFtID0gZnVuY3Rpb24gKHN0cmVhbSkge1xuICB2YXIgc2VsZiA9IHRoaXNcblxuICBpZiAoIXN0cmVhbSkge1xuICAgIHNlbGYucHVzaChudWxsKVxuICAgIHNlbGYuZGVzdHJveSgpXG4gICAgcmV0dXJuXG4gIH1cblxuICBzZWxmLl9jdXJyZW50ID0gc3RyZWFtXG4gIHNlbGYuX2ZvcndhcmQoKVxuXG4gIHN0cmVhbS5vbigncmVhZGFibGUnLCBvblJlYWRhYmxlKVxuICBzdHJlYW0ub25jZSgnZW5kJywgb25FbmQpXG4gIHN0cmVhbS5vbmNlKCdjbG9zZScsIG9uQ2xvc2UpXG5cbiAgZnVuY3Rpb24gb25SZWFkYWJsZSAoKSB7XG4gICAgc2VsZi5fZm9yd2FyZCgpXG4gIH1cblxuICBmdW5jdGlvbiBvbkNsb3NlICgpIHtcbiAgICBpZiAoIXN0cmVhbS5fcmVhZGFibGVTdGF0ZS5lbmRlZCkge1xuICAgICAgc2VsZi5kZXN0cm95KClcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBvbkVuZCAoKSB7XG4gICAgc2VsZi5fY3VycmVudCA9IG51bGxcbiAgICBzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ3JlYWRhYmxlJywgb25SZWFkYWJsZSlcbiAgICBzdHJlYW0ucmVtb3ZlTGlzdGVuZXIoJ2VuZCcsIG9uRW5kKVxuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignY2xvc2UnLCBvbkNsb3NlKVxuICAgIHNlbGYuX25leHQoKVxuICB9XG59XG5cbk11bHRpU3RyZWFtLnByb3RvdHlwZS5fYXR0YWNoRXJyb3JMaXN0ZW5lciA9IGZ1bmN0aW9uIChzdHJlYW0pIHtcbiAgdmFyIHNlbGYgPSB0aGlzXG4gIGlmICghc3RyZWFtKSByZXR1cm5cblxuICBzdHJlYW0ub25jZSgnZXJyb3InLCBvbkVycm9yKVxuXG4gIGZ1bmN0aW9uIG9uRXJyb3IgKGVycikge1xuICAgIHN0cmVhbS5yZW1vdmVMaXN0ZW5lcignZXJyb3InLCBvbkVycm9yKVxuICAgIHNlbGYuZGVzdHJveShlcnIpXG4gIH1cbn1cblxuZnVuY3Rpb24gdG9TdHJlYW1zMk9iaiAocykge1xuICByZXR1cm4gdG9TdHJlYW1zMihzLCB7IG9iamVjdE1vZGU6IHRydWUsIGhpZ2hXYXRlck1hcms6IDE2IH0pXG59XG5cbmZ1bmN0aW9uIHRvU3RyZWFtczJCdWYgKHMpIHtcbiAgcmV0dXJuIHRvU3RyZWFtczIocylcbn1cblxuZnVuY3Rpb24gdG9TdHJlYW1zMiAocywgb3B0cykge1xuICBpZiAoIXMgfHwgdHlwZW9mIHMgPT09ICdmdW5jdGlvbicgfHwgcy5fcmVhZGFibGVTdGF0ZSkgcmV0dXJuIHNcblxuICB2YXIgd3JhcCA9IG5ldyBzdHJlYW0uUmVhZGFibGUob3B0cykud3JhcChzKVxuICBpZiAocy5kZXN0cm95KSB7XG4gICAgd3JhcC5kZXN0cm95ID0gcy5kZXN0cm95LmJpbmQocylcbiAgfVxuICByZXR1cm4gd3JhcFxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/multistream/index.js\n");

/***/ })

};
;